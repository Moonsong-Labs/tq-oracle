{
    "abi": [
        {
            "type": "function",
            "name": "CURATOR_ROLE",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "DEFAULT_ADMIN_ROLE",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "DLN_DESTINATION",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "GUARDIAN_ROLE",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "UPGRADE_INTERFACE_VERSION",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "bridgeErc20ViaDeBridge",
            "inputs": [
                {
                    "name": "giveTokenAddress",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "giveAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "takeAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "takeTokenAddress",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "nativeFee",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "salt",
                    "type": "uint64",
                    "internalType": "uint64"
                },
                {
                    "name": "verificationPayloads",
                    "type": "tuple[2]",
                    "internalType": "struct IVerifier.VerificationPayload[2]",
                    "components": [
                        {
                            "name": "verificationType",
                            "type": "uint8",
                            "internalType": "enum IVerifier.VerificationType"
                        },
                        {
                            "name": "verificationData",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "proof",
                            "type": "bytes32[]",
                            "internalType": "bytes32[]"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "orderId",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "bridgeNativeViaDeBridge",
            "inputs": [
                {
                    "name": "giveAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "takeAmount",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "takeTokenAddress",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "nativeFee",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "salt",
                    "type": "uint64",
                    "internalType": "uint64"
                },
                {
                    "name": "verificationPayload",
                    "type": "tuple",
                    "internalType": "struct IVerifier.VerificationPayload",
                    "components": [
                        {
                            "name": "verificationType",
                            "type": "uint8",
                            "internalType": "enum IVerifier.VerificationType"
                        },
                        {
                            "name": "verificationData",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "proof",
                            "type": "bytes32[]",
                            "internalType": "bytes32[]"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "orderId",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "bridgeRecipient",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "bridgeUsdcViaCctpV2",
            "inputs": [
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "maxFee",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "minFinalityThreshold",
                    "type": "uint32",
                    "internalType": "uint32"
                },
                {
                    "name": "verificationPayloads",
                    "type": "tuple[2]",
                    "internalType": "struct IVerifier.VerificationPayload[2]",
                    "components": [
                        {
                            "name": "verificationType",
                            "type": "uint8",
                            "internalType": "enum IVerifier.VerificationType"
                        },
                        {
                            "name": "verificationData",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "proof",
                            "type": "bytes32[]",
                            "internalType": "bytes32[]"
                        }
                    ]
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "cancelOrderByCloid",
            "inputs": [
                {
                    "name": "asset",
                    "type": "uint32",
                    "internalType": "uint32"
                },
                {
                    "name": "cloid",
                    "type": "uint128",
                    "internalType": "uint128"
                },
                {
                    "name": "verificationPayload",
                    "type": "tuple",
                    "internalType": "struct IVerifier.VerificationPayload",
                    "components": [
                        {
                            "name": "verificationType",
                            "type": "uint8",
                            "internalType": "enum IVerifier.VerificationType"
                        },
                        {
                            "name": "verificationData",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "proof",
                            "type": "bytes32[]",
                            "internalType": "bytes32[]"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "cancelOrderByOid",
            "inputs": [
                {
                    "name": "asset",
                    "type": "uint32",
                    "internalType": "uint32"
                },
                {
                    "name": "oid",
                    "type": "uint64",
                    "internalType": "uint64"
                },
                {
                    "name": "verificationPayload",
                    "type": "tuple",
                    "internalType": "struct IVerifier.VerificationPayload",
                    "components": [
                        {
                            "name": "verificationType",
                            "type": "uint8",
                            "internalType": "enum IVerifier.VerificationType"
                        },
                        {
                            "name": "verificationData",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "proof",
                            "type": "bytes32[]",
                            "internalType": "bytes32[]"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "cctpV2DestinationDomain",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint32",
                    "internalType": "uint32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "cctpV2MessageTransmitter",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "cctpV2TokenMessenger",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "coreSystemAddress",
            "inputs": [
                {
                    "name": "tokenIndex",
                    "type": "uint64",
                    "internalType": "uint64"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "deBridgeOrderAuthority",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "deBridgeTakeChainId",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "depositHypeToCore",
            "inputs": [
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "verificationPayload",
                    "type": "tuple",
                    "internalType": "struct IVerifier.VerificationPayload",
                    "components": [
                        {
                            "name": "verificationType",
                            "type": "uint8",
                            "internalType": "enum IVerifier.VerificationType"
                        },
                        {
                            "name": "verificationData",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "proof",
                            "type": "bytes32[]",
                            "internalType": "bytes32[]"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "depositTokenToCore",
            "inputs": [
                {
                    "name": "token",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "tokenIndex",
                    "type": "uint64",
                    "internalType": "uint64"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "verificationPayload",
                    "type": "tuple",
                    "internalType": "struct IVerifier.VerificationPayload",
                    "components": [
                        {
                            "name": "verificationType",
                            "type": "uint8",
                            "internalType": "enum IVerifier.VerificationType"
                        },
                        {
                            "name": "verificationData",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "proof",
                            "type": "bytes32[]",
                            "internalType": "bytes32[]"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "disableCctpV2",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "disableDeBridge",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "enableCctpV2",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "enableDeBridge",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getRoleAdmin",
            "inputs": [
                {
                    "name": "role",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getRoleMember",
            "inputs": [
                {
                    "name": "role",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "index",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getRoleMemberCount",
            "inputs": [
                {
                    "name": "role",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getRoleMembers",
            "inputs": [
                {
                    "name": "role",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "address[]",
                    "internalType": "address[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "grantRole",
            "inputs": [
                {
                    "name": "role",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "hasRole",
            "inputs": [
                {
                    "name": "role",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "hypeTokenIndex",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint64",
                    "internalType": "uint64"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "initialize",
            "inputs": [
                {
                    "name": "subvault",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "admin",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "guardian",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "curator",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "bridgeRecipient",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "hypeTokenIndex_",
                    "type": "uint64",
                    "internalType": "uint64"
                },
                {
                    "name": "cctpV2Config",
                    "type": "tuple",
                    "internalType": "struct CctpV2BridgeModule.CctpV2Config",
                    "components": [
                        {
                            "name": "usdc",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "destinationDomain",
                            "type": "uint32",
                            "internalType": "uint32"
                        },
                        {
                            "name": "tokenMessenger",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "messageTransmitter",
                            "type": "address",
                            "internalType": "address"
                        }
                    ]
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "initializeDeBridge",
            "inputs": [
                {
                    "name": "takeChainId",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "orderAuthority",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "isCctpV2Enabled",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isDeBridgeEnabled",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "pause",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "paused",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "placeLimitBuyOrder",
            "inputs": [
                {
                    "name": "asset",
                    "type": "uint32",
                    "internalType": "uint32"
                },
                {
                    "name": "limitPx",
                    "type": "uint64",
                    "internalType": "uint64"
                },
                {
                    "name": "sz",
                    "type": "uint64",
                    "internalType": "uint64"
                },
                {
                    "name": "reduceOnly",
                    "type": "bool",
                    "internalType": "bool"
                },
                {
                    "name": "tif",
                    "type": "uint8",
                    "internalType": "uint8"
                },
                {
                    "name": "cloid",
                    "type": "uint128",
                    "internalType": "uint128"
                },
                {
                    "name": "verificationPayload",
                    "type": "tuple",
                    "internalType": "struct IVerifier.VerificationPayload",
                    "components": [
                        {
                            "name": "verificationType",
                            "type": "uint8",
                            "internalType": "enum IVerifier.VerificationType"
                        },
                        {
                            "name": "verificationData",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "proof",
                            "type": "bytes32[]",
                            "internalType": "bytes32[]"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "placeLimitSellOrder",
            "inputs": [
                {
                    "name": "asset",
                    "type": "uint32",
                    "internalType": "uint32"
                },
                {
                    "name": "limitPx",
                    "type": "uint64",
                    "internalType": "uint64"
                },
                {
                    "name": "sz",
                    "type": "uint64",
                    "internalType": "uint64"
                },
                {
                    "name": "reduceOnly",
                    "type": "bool",
                    "internalType": "bool"
                },
                {
                    "name": "tif",
                    "type": "uint8",
                    "internalType": "uint8"
                },
                {
                    "name": "cloid",
                    "type": "uint128",
                    "internalType": "uint128"
                },
                {
                    "name": "verificationPayload",
                    "type": "tuple",
                    "internalType": "struct IVerifier.VerificationPayload",
                    "components": [
                        {
                            "name": "verificationType",
                            "type": "uint8",
                            "internalType": "enum IVerifier.VerificationType"
                        },
                        {
                            "name": "verificationData",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "proof",
                            "type": "bytes32[]",
                            "internalType": "bytes32[]"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "proxiableUUID",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "receiveUsdcViaCctpV2",
            "inputs": [
                {
                    "name": "message",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "attestation",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "renounceRole",
            "inputs": [
                {
                    "name": "role",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "callerConfirmation",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "revokeRole",
            "inputs": [
                {
                    "name": "role",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "setDeBridgeOrderAuthority",
            "inputs": [
                {
                    "name": "orderAuthority",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "subvault",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "supportsInterface",
            "inputs": [
                {
                    "name": "interfaceId",
                    "type": "bytes4",
                    "internalType": "bytes4"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "transferPerpToSpot",
            "inputs": [
                {
                    "name": "ntl",
                    "type": "uint64",
                    "internalType": "uint64"
                },
                {
                    "name": "verificationPayload",
                    "type": "tuple",
                    "internalType": "struct IVerifier.VerificationPayload",
                    "components": [
                        {
                            "name": "verificationType",
                            "type": "uint8",
                            "internalType": "enum IVerifier.VerificationType"
                        },
                        {
                            "name": "verificationData",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "proof",
                            "type": "bytes32[]",
                            "internalType": "bytes32[]"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferSpotToPerp",
            "inputs": [
                {
                    "name": "ntl",
                    "type": "uint64",
                    "internalType": "uint64"
                },
                {
                    "name": "verificationPayload",
                    "type": "tuple",
                    "internalType": "struct IVerifier.VerificationPayload",
                    "components": [
                        {
                            "name": "verificationType",
                            "type": "uint8",
                            "internalType": "enum IVerifier.VerificationType"
                        },
                        {
                            "name": "verificationData",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "proof",
                            "type": "bytes32[]",
                            "internalType": "bytes32[]"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "unpause",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "upgradeToAndCall",
            "inputs": [
                {
                    "name": "newImplementation",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "usdc",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "withdrawHypeToEvm",
            "inputs": [
                {
                    "name": "amount",
                    "type": "uint64",
                    "internalType": "uint64"
                },
                {
                    "name": "verificationPayload",
                    "type": "tuple",
                    "internalType": "struct IVerifier.VerificationPayload",
                    "components": [
                        {
                            "name": "verificationType",
                            "type": "uint8",
                            "internalType": "enum IVerifier.VerificationType"
                        },
                        {
                            "name": "verificationData",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "proof",
                            "type": "bytes32[]",
                            "internalType": "bytes32[]"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "withdrawTokenToEvm",
            "inputs": [
                {
                    "name": "tokenIndex",
                    "type": "uint64",
                    "internalType": "uint64"
                },
                {
                    "name": "amount",
                    "type": "uint64",
                    "internalType": "uint64"
                },
                {
                    "name": "verificationPayload",
                    "type": "tuple",
                    "internalType": "struct IVerifier.VerificationPayload",
                    "components": [
                        {
                            "name": "verificationType",
                            "type": "uint8",
                            "internalType": "enum IVerifier.VerificationType"
                        },
                        {
                            "name": "verificationData",
                            "type": "bytes",
                            "internalType": "bytes"
                        },
                        {
                            "name": "proof",
                            "type": "bytes32[]",
                            "internalType": "bytes32[]"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "CCTPv2StatusUpdated",
            "inputs": [
                {
                    "name": "enabled",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "CctpV2UsdcBridgeInitiated",
            "inputs": [
                {
                    "name": "curator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "destinationDomain",
                    "type": "uint32",
                    "indexed": true,
                    "internalType": "uint32"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "maxFee",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "minFinalityThreshold",
                    "type": "uint32",
                    "indexed": false,
                    "internalType": "uint32"
                },
                {
                    "name": "recipient",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "CctpV2UsdcMessageReceived",
            "inputs": [
                {
                    "name": "curator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "messageHash",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                },
                {
                    "name": "attestationHash",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "DeBridgeOrderAuthorityUpdated",
            "inputs": [
                {
                    "name": "orderAuthority",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "DeBridgeStatusUpdated",
            "inputs": [
                {
                    "name": "enabled",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "DlnErc20BridgeInitiated",
            "inputs": [
                {
                    "name": "curator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "salt",
                    "type": "uint64",
                    "indexed": true,
                    "internalType": "uint64"
                },
                {
                    "name": "orderId",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                },
                {
                    "name": "giveToken",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                },
                {
                    "name": "giveAmount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "takeToken",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                },
                {
                    "name": "takeAmount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "takeChainId",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "recipient",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                },
                {
                    "name": "nativeFee",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "DlnNativeBridgeInitiated",
            "inputs": [
                {
                    "name": "curator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "salt",
                    "type": "uint64",
                    "indexed": true,
                    "internalType": "uint64"
                },
                {
                    "name": "orderId",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                },
                {
                    "name": "giveAmount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "takeToken",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                },
                {
                    "name": "takeAmount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "takeChainId",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "recipient",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                },
                {
                    "name": "nativeFee",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "HypeDepositedToCore",
            "inputs": [
                {
                    "name": "curator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "HypeWithdrawnToEvm",
            "inputs": [
                {
                    "name": "curator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Initialized",
            "inputs": [
                {
                    "name": "version",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "LimitBuyOrderPlaced",
            "inputs": [
                {
                    "name": "curator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "asset",
                    "type": "uint32",
                    "indexed": true,
                    "internalType": "uint32"
                },
                {
                    "name": "cloid",
                    "type": "uint128",
                    "indexed": true,
                    "internalType": "uint128"
                },
                {
                    "name": "limitPx",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                },
                {
                    "name": "sz",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                },
                {
                    "name": "reduceOnly",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                },
                {
                    "name": "tif",
                    "type": "uint8",
                    "indexed": false,
                    "internalType": "uint8"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "LimitSellOrderPlaced",
            "inputs": [
                {
                    "name": "curator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "asset",
                    "type": "uint32",
                    "indexed": true,
                    "internalType": "uint32"
                },
                {
                    "name": "cloid",
                    "type": "uint128",
                    "indexed": true,
                    "internalType": "uint128"
                },
                {
                    "name": "limitPx",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                },
                {
                    "name": "sz",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                },
                {
                    "name": "reduceOnly",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                },
                {
                    "name": "tif",
                    "type": "uint8",
                    "indexed": false,
                    "internalType": "uint8"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "OrderCancelledByCloid",
            "inputs": [
                {
                    "name": "curator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "asset",
                    "type": "uint32",
                    "indexed": true,
                    "internalType": "uint32"
                },
                {
                    "name": "cloid",
                    "type": "uint128",
                    "indexed": true,
                    "internalType": "uint128"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "OrderCancelledByOid",
            "inputs": [
                {
                    "name": "curator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "asset",
                    "type": "uint32",
                    "indexed": true,
                    "internalType": "uint32"
                },
                {
                    "name": "oid",
                    "type": "uint64",
                    "indexed": true,
                    "internalType": "uint64"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Paused",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "PerpToSpotTransferred",
            "inputs": [
                {
                    "name": "curator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "ntl",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "RoleAdminChanged",
            "inputs": [
                {
                    "name": "role",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                },
                {
                    "name": "previousAdminRole",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                },
                {
                    "name": "newAdminRole",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "RoleGranted",
            "inputs": [
                {
                    "name": "role",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                },
                {
                    "name": "account",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "sender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "RoleRevoked",
            "inputs": [
                {
                    "name": "role",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                },
                {
                    "name": "account",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "sender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "SpotToPerpTransferred",
            "inputs": [
                {
                    "name": "curator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "ntl",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "TokenDepositedToCore",
            "inputs": [
                {
                    "name": "curator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "token",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "tokenIndex",
                    "type": "uint64",
                    "indexed": true,
                    "internalType": "uint64"
                },
                {
                    "name": "systemAddress",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "TokenWithdrawnToEvm",
            "inputs": [
                {
                    "name": "curator",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "tokenIndex",
                    "type": "uint64",
                    "indexed": true,
                    "internalType": "uint64"
                },
                {
                    "name": "amount",
                    "type": "uint64",
                    "indexed": false,
                    "internalType": "uint64"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Unpaused",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Upgraded",
            "inputs": [
                {
                    "name": "implementation",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "AccessControlBadConfirmation",
            "inputs": []
        },
        {
            "type": "error",
            "name": "AccessControlUnauthorizedAccount",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "neededRole",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ]
        },
        {
            "type": "error",
            "name": "AddressEmptyCode",
            "inputs": [
                {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "BridgeApproveFailed",
            "inputs": []
        },
        {
            "type": "error",
            "name": "BridgeNotInitialized",
            "inputs": []
        },
        {
            "type": "error",
            "name": "CCTPv2Disabled",
            "inputs": []
        },
        {
            "type": "error",
            "name": "CallFailed",
            "inputs": []
        },
        {
            "type": "error",
            "name": "DeBridgeDisabled",
            "inputs": []
        },
        {
            "type": "error",
            "name": "DeBridgeNotInitialized",
            "inputs": []
        },
        {
            "type": "error",
            "name": "ERC1967InvalidImplementation",
            "inputs": [
                {
                    "name": "implementation",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "ERC1967NonPayable",
            "inputs": []
        },
        {
            "type": "error",
            "name": "EmptyAttestation",
            "inputs": []
        },
        {
            "type": "error",
            "name": "EmptyMessage",
            "inputs": []
        },
        {
            "type": "error",
            "name": "EnforcedPause",
            "inputs": []
        },
        {
            "type": "error",
            "name": "ExpectedPause",
            "inputs": []
        },
        {
            "type": "error",
            "name": "FailedCall",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidChainId",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidInitialization",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidMsgValue",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidTimeInForce",
            "inputs": [
                {
                    "name": "value",
                    "type": "uint8",
                    "internalType": "uint8"
                }
            ]
        },
        {
            "type": "error",
            "name": "MaxFeeTooHigh",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotInitializing",
            "inputs": []
        },
        {
            "type": "error",
            "name": "UUPSUnauthorizedCallContext",
            "inputs": []
        },
        {
            "type": "error",
            "name": "UUPSUnsupportedProxiableUUID",
            "inputs": [
                {
                    "name": "slot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ]
        },
        {
            "type": "error",
            "name": "ZeroAddress",
            "inputs": []
        },
        {
            "type": "error",
            "name": "ZeroAmount",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "0x60a060405230608052348015610013575f5ffd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6080516140806100f95f395f81816127da01528181612803015261296e01526140805ff3fe6080604052600436106102f3575f3560e01c80636a4545be11610189578063a217fddf116100d8578063ca15c87311610092578063de15fbdd1161006d578063de15fbdd14610941578063e7b70bd214610955578063fceac4e614610974578063fe582621146109a4575f5ffd5b8063ca15c873146108e4578063d450a6c614610903578063d547741f14610922575f5ffd5b8063a217fddf1461081b578063a3246ad31461082e578063ad3cb1cc1461085a578063b17081d71461088a578063b3ab252a146108b1578063c226db55146108c5575f5ffd5b80638cdadf48116101435780639526fd161161011e5780639526fd16146107ab57806396d0ee08146107ca5780639a051a78146107de5780639c80c370146107f2575f5ffd5b80638cdadf48146107595780639010d07c1461076d57806391d148541461078c575f5ffd5b80636a4545be146106b257806373edb66c146106c65780637efccc5e146106e557806382f7fb07146106f85780638456cb591461072657806386e147441461073a575f5ffd5b80633f4ba83a116102455780635576b0b7116101ff5780635a2f511c116101da5780635a2f511c1461062e5780635c975abb146106515780635eb3f9651461067457806363e8d18914610693575f5ffd5b80635576b0b7146105a9578063572eb210146105ef57806358b43cd11461060f575f5ffd5b80633f4ba83a146104f35780634926234a146105075780634a2cfb54146105435780634f1ef286146105635780634f2c42da1461057657806352d1902d14610595575f5ffd5b806317573846116102b05780632c491f171161028b5780632c491f17146104655780632f2ff15d1461048457806336568abe146104a35780633e413bee146104c2575f5ffd5b80631757384614610407578063248a9ca31461042657806324ea54f414610445575f5ffd5b806301ffc9a7146102f7578063029d754d1461032b57806307495840146103555780630941a849146103765780630bb9f178146103a25780631592855b146103e6575b5f5ffd5b348015610302575f5ffd5b506103166103113660046132b6565b6109c3565b60405190151581526020015b60405180910390f35b348015610336575f5ffd5b505f516020613f4b5f395f51905f5254600160a01b900460ff16610316565b61036861036336600461331e565b6109ed565b604051908152602001610322565b348015610381575f5ffd5b506103956103903660046133b9565b610bc9565b6040516103229190613440565b3480156103ad575f5ffd5b506103ce6103bc366004613452565b6001600160401b03166001609d1b1790565b6040516001600160a01b039091168152602001610322565b3480156103f1575f5ffd5b5061040561040036600461346b565b610cd6565b005b348015610412575f5ffd5b506103956104213660046134cb565b610d6e565b348015610431575f5ffd5b5061036861044036600461355f565b610e96565b348015610450575f5ffd5b506103685f51602061402b5f395f51905f5281565b348015610470575f5ffd5b5061040561047f3660046135e2565b610eb6565b34801561048f575f5ffd5b5061040561049e36600461346b565b610fd1565b3480156104ae575f5ffd5b506104056104bd36600461346b565b610ff3565b3480156104cd575f5ffd5b505f516020613f2b5f395f51905f525464010000000090046001600160a01b03166103ce565b3480156104fe575f5ffd5b5061040561102b565b348015610512575f5ffd5b507f3017e6031acbb44412e27cd86624110f3442a97c460bded5ec6f84d8c165d001546001600160a01b03166103ce565b34801561054e575f5ffd5b506103685f516020613f6b5f395f51905f5281565b6104056105713660046136de565b61104d565b348015610581575f5ffd5b50610395610590366004613768565b61106c565b3480156105a0575f5ffd5b506103686110d5565b3480156105b4575f5ffd5b507f789b871704bb1441ddd2ece4f82068130ae4608c26aa2af8bdfc5b256476f400546040516001600160401b039091168152602001610322565b3480156105fa575f5ffd5b505f516020613fcb5f395f51905f5254610368565b34801561061a575f5ffd5b50610405610629366004613783565b6110f0565b348015610639575f5ffd5b505f516020613fab5f395f51905f525460ff16610316565b34801561065c575f5ffd5b505f51602061400b5f395f51905f525460ff16610316565b34801561067f575f5ffd5b5061039561068e36600461379c565b611103565b34801561069e575f5ffd5b506103956106ad3660046137e6565b611232565b3480156106bd575f5ffd5b5061040561129b565b3480156106d1575f5ffd5b506103956106e036600461380f565b6112bc565b6103686106f3366004613872565b6113e2565b348015610703575f5ffd5b505f516020613fab5f395f51905f525461010090046001600160a01b03166103ce565b348015610731575f5ffd5b50610405611558565b348015610745575f5ffd5b506103956107543660046138e6565b611577565b348015610764575f5ffd5b506103ce611623565b348015610778575f5ffd5b506103ce610787366004613913565b611655565b348015610797575f5ffd5b506103166107a636600461346b565b61167a565b3480156107b6575f5ffd5b506103956107c536600461379c565b6116b0565b3480156107d5575f5ffd5b50610405611779565b3480156107e9575f5ffd5b50610405611799565b3480156107fd575f5ffd5b505f516020613f4b5f395f51905f52546001600160a01b03166103ce565b348015610826575f5ffd5b506103685f81565b348015610839575f5ffd5b5061084d61084836600461355f565b6117c2565b6040516103229190613933565b348015610865575f5ffd5b50610395604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610895575f5ffd5b506103ce73e7351fd770a37282b91d153ee690b63579d6dd7f81565b3480156108bc575f5ffd5b506103ce6117f2565b3480156108d0575f5ffd5b506103956108df36600461379c565b611819565b3480156108ef575f5ffd5b506103686108fe36600461355f565b6118ab565b34801561090e575f5ffd5b5061039561091d3660046134cb565b6118cf565b34801561092d575f5ffd5b5061040561093c36600461346b565b6119bc565b34801561094c575f5ffd5b506104056119d8565b348015610960575f5ffd5b5061040561096f36600461397e565b611a00565b34801561097f575f5ffd5b505f516020613f2b5f395f51905f525460405163ffffffff9091168152602001610322565b3480156109af575f5ffd5b506103166109be366004613a12565b611bb9565b5f6001600160e01b03198216635a05180f60e01b14806109e757506109e782611d1a565b92915050565b5f5f516020613f6b5f395f51905f52610a0581611d4e565b610a0d611d58565b610a15611d91565b6001600160a01b038916610a3c5760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b038616610a635760405163d92e233d60e01b815260040160405180910390fd5b875f03610a8357604051631f2a200560e01b815260040160405180910390fd5b865f03610aa357604051631f2a200560e01b815260040160405180910390fd5b843414610ac357604051631841b4e160e01b815260040160405180910390fd5b610acc85611dc1565b610afe8973ef4fb24ad0916217251f553c0596f8edc630eb668a865f5b602002810190610af99190613a90565b611e42565b5f610b0b8a8a8a8a611f16565b9050610b25818688610b206020890189613a90565b6120c0565b9250826001600160401b038616337f494a281d9a8c7a931dd7c071159eb4301eeba49463144a512c018897df00e4448d8d8c8e610b6d5f516020613fcb5f395f51905f525490565b610b75611623565b604080516001600160a01b0397881681526020810196909652938616858501526060850192909252608084015290921660a082015260c081018c905290519081900360e00190a45050979650505050505050565b60605f516020613f6b5f395f51905f52610be281611d4e565b610bea611d91565b836001600160401b03165f03610c1357604051631f2a200560e01b815260040160405180910390fd5b6040516001600160401b03858116825286169033907f2b0383352bff6b7e265f53b4c75efe4e36a97149e5c89769ee48dc32becbf7f39060200160405180910390a35f610c706001609d1b6001600160401b03881617878761213a565b9050610ccc7333333333333333333333333333333333333333335f83604051602401610c9c9190613440565b60408051601f198184030181529190526020810180516001600160e01b03166317938e1360e01b17905287612193565b9695505050505050565b5f610ce081611d4e565b825f03610d0057604051633d23e4d160e11b815260040160405180910390fd5b610d0982612210565b5f516020613fcb5f395f51905f528381555f516020613fab5f395f51905f52805460ff1916600190811790915560408051918252517fe33cde4d15681ba1266af1446bddc5806e572585bd67e2a51c383e2f55637a279181900360200190a150505050565b60605f516020613f6b5f395f51905f52610d8781611d4e565b610d8f611d91565b876001600160401b03165f03610db857604051631f2a200560e01b815260040160405180910390fd5b866001600160401b03165f03610de157604051631f2a200560e01b815260040160405180910390fd5b604080516001600160401b038a81168252891660208201528715158183015260ff8716606082015290516001600160801b0386169163ffffffff8c169133917fbfc511faa4955d28b6c9fce55b1c77e8b78181670cd8fd4fd7eef1e86f40a57c919081900360800190a45f610e5c8a60018b8b8b8b8b61227a565b9050610e887333333333333333333333333333333333333333335f83604051602401610c9c9190613440565b9a9950505050505050505050565b5f9081525f516020613feb5f395f51905f52602052604090206001015490565b5f610ebf612305565b805490915060ff600160401b82041615906001600160401b03165f81158015610ee55750825b90505f826001600160401b03166001148015610f005750303b155b905081158015610f0e575080155b15610f2c5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610f5657845460ff60401b1916600160401b1785555b610f628c8c8c8c61232d565b610f6b886124a0565b610f7487612513565b610f7d86612586565b8315610fc357845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050505050565b610fda82610e96565b610fe381611d4e565b610fed83836126fb565b50505050565b6001600160a01b038116331461101c5760405163334bd91960e11b815260040160405180910390fd5b611026828261273d565b505050565b5f51602061402b5f395f51905f5261104281611d4e565b61104a612776565b50565b6110556127cf565b61105e8261285d565b6110688282612867565b5050565b60605f516020613f6b5f395f51905f5261108581611d4e565b61108d611d91565b6040516001600160401b0385169063ffffffff87169033907fd0659ee344f9858d8fb266603746c41b7e694e7e31db7a0339bdd1966443e604905f90a45f610c708686612928565b5f6110de612963565b505f516020613f8b5f395f51905f5290565b5f6110fa81611d4e565b61106882612210565b60605f516020613f6b5f395f51905f5261111c81611d4e565b611124611d91565b836001600160401b03165f0361114d57604051631f2a200560e01b815260040160405180910390fd5b6040516001600160401b038516815233907f35357fa9bfa8f84a1b52b527828776202f3997e379ef57c0032bddd323d866739060200160405180910390a27f789b871704bb1441ddd2ece4f82068130ae4608c26aa2af8bdfc5b256476f400546001600160401b03165f6111d6732222222222222222222222222222222222222222838861213a565b9050610ccc7333333333333333333333333333333333333333335f836040516024016112029190613440565b60408051601f198184030181529190526020810180516001600160e01b03166317938e1360e01b17905288612193565b60605f516020613f6b5f395f51905f5261124b81611d4e565b611253611d91565b6040516001600160801b0385169063ffffffff87169033907fa9cf95da6cbfd75a1c3d33eb9a1e999c5d3bef15da5febead4cf4c27cd31ca3d905f90a45f610c7086866129ac565b5f51602061402b5f395f51905f526112b281611d4e565b61104a60016129e7565b60605f516020613f6b5f395f51905f526112d581611d4e565b6112dd611d91565b6001600160a01b0386166113045760405163d92e233d60e01b815260040160405180910390fd5b835f0361132457604051631f2a200560e01b815260040160405180910390fd5b604080516001600160401b0387166001609d1b8117808352602083018890528351909391926001600160a01b038b169233927f01898048baf1bb744a1989a7937c864aea5dcf53143265c671ca62da74af59eb9281900390910190a46040516001600160a01b0382166024820152604481018690525f9060640160408051601f198184030181529190526020810180516001600160e01b031663a9059cbb60e01b17905290506113d6885f8388612193565b98975050505050505050565b5f5f516020613f6b5f395f51905f526113fa81611d4e565b611402611d58565b61140a611d91565b6001600160a01b0386166114315760405163d92e233d60e01b815260040160405180910390fd5b875f0361145157604051631f2a200560e01b815260040160405180910390fd5b865f0361147157604051631f2a200560e01b815260040160405180910390fd5b5f61147c8987613ac2565b905080341461149e57604051631841b4e160e01b815260040160405180910390fd5b6114a781611dc1565b5f6114b45f8b8b8b611f16565b90506114c2818784886120c0565b9350836001600160401b038716337f35e57cb4b28cb396f836292a31fe6ab3d4933058505b755fd93730964de088ec8d8c8e6115095f516020613fcb5f395f51905f525490565b611511611623565b604080519586526001600160a01b039485166020870152850192909252606084015216608082015260a081018c905260c00160405180910390a45050509695505050505050565b5f51602061402b5f395f51905f5261156f81611d4e565b61104a612a40565b60605f516020613f6b5f395f51905f5261159081611d4e565b611598611d91565b835f036115b857604051631f2a200560e01b815260040160405180910390fd5b60405184815233907f9e863ae135cd93a1e3d62b189c21a779043cf32484c89cac3a2f165ff6e726859060200160405180910390a261161b7322222222222222222222222222222222222222228560405180602001604052805f81525086612193565b949350505050565b5f7f71d47e0ea4b3bf9d4cff6b12a28e6282e6ba28cb29ac58f4074519c2b4da0a005b546001600160a01b0316919050565b5f8281525f516020613f0b5f395f51905f5260208190526040822061161b9084612a88565b5f9182525f516020613feb5f395f51905f52602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60605f516020613f6b5f395f51905f526116c981611d4e565b6116d1611d91565b836001600160401b03165f036116fa57604051631f2a200560e01b815260040160405180910390fd5b6040516001600160401b038516815233907fc170f4b920be05022e727699d425ddece2d7bec4dade25556b0242cc4229b8829060200160405180910390a25f611744856001612a93565b90506117707333333333333333333333333333333333333333335f83604051602401610c9c9190613440565b95945050505050565b5f51602061402b5f395f51905f5261179081611d4e565b61104a5f6129e7565b5f51602061402b5f395f51905f526117b081611d4e565b6117b8612aca565b61104a6001612b28565b5f8181525f516020613f0b5f395f51905f5260208190526040909120606091906117eb90612b75565b9392505050565b5f7f47cf185b6947c54347c76dfe91c3cd40a06dcd9e1310733403adda917a97e100611646565b60605f516020613f6b5f395f51905f5261183281611d4e565b61183a611d91565b836001600160401b03165f0361186357604051631f2a200560e01b815260040160405180910390fd5b6040516001600160401b038516815233907ed65b5b94fdcb52b24c0c9e02df4be70480dcf3f478925311c50d41214708a99060200160405180910390a25f611744855f612a93565b5f8181525f516020613f0b5f395f51905f526020819052604082206117eb90612b81565b60605f516020613f6b5f395f51905f526118e881611d4e565b6118f0611d91565b876001600160401b03165f0361191957604051631f2a200560e01b815260040160405180910390fd5b866001600160401b03165f0361194257604051631f2a200560e01b815260040160405180910390fd5b604080516001600160401b038a81168252891660208201528715158183015260ff8716606082015290516001600160801b0386169163ffffffff8c169133917fd1f85090578473b24b37702258810759e2959ed524132c662a71e67afcca7f6e919081900360800190a45f610e5c8a5f8b8b8b8b8b61227a565b6119c582610e96565b6119ce81611d4e565b610fed838361273d565b5f51602061402b5f395f51905f526119ef81611d4e565b6119f7612aca565b61104a5f612b28565b5f516020613f6b5f395f51905f52611a1781611d4e565b611a1f612b8a565b611a27611d91565b845f03611a4757604051631f2a200560e01b815260040160405180910390fd5b848410611a675760405163a3932d2d60e01b815260040160405180910390fd5b5f516020613f2b5f395f51905f52805464010000000090046001600160a01b03165f611a91611623565b60018401546001600160a01b03918216925016611ab183828b895f610ae9565b835460408051602481018c905263ffffffff92831660448201819052606482018690526001600160a01b03871660848301525f60a483015260c482018c9052928a1660e480830191909152825180830390910181526101049091019091526020810180516001600160e01b0316634701287760e11b17905290337f277aecf73be6e12b9741bc197f65975f20a5f0e8e64da0d67fe5c7e0c89aaf808c8c8c611b57611623565b604051611b8c9493929190938452602084019290925263ffffffff1660408301526001600160a01b0316606082015260800190565b60405180910390a3611bac825f83611ba760208c018c613a90565b612193565b5050505050505050505050565b5f5f516020613f6b5f395f51905f52611bd181611d4e565b611bd9612b8a565b611be1611d91565b5f859003611c025760405163017636cb60e71b815260040160405180910390fd5b5f839003611c235760405163235c028360e11b815260040160405180910390fd5b5f611c425f516020613f4b5f395f51905f52546001600160a01b031690565b90508484604051611c54929190613ad5565b60405180910390208787604051611c6c929190613ad5565b6040519081900381209033907fc6fa8669e5cd3adef472c9e79b57298d69a72c68857bb43a41fdfefe62f88451905f90a4604051630afd9fa560e31b81526001600160a01b038216906357ecfd2890611ccf908a908a908a908a90600401613b0c565b6020604051808303815f875af1158015611ceb573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d0f9190613b32565b979650505050505050565b5f6001600160e01b03198216637965db0b60e01b14806109e757506301ffc9a760e01b6001600160e01b03198316146109e7565b61104a8133612c85565b611d60612aca565b5f516020613fab5f395f51905f525460ff16611d8f57604051634e0b996360e11b815260040160405180910390fd5b565b5f51602061400b5f395f51905f525460ff1615611d8f5760405163d93c066560e01b815260040160405180910390fd5b805f03611dcb5750565b5f611dd46117f2565b6001600160a01b0316826040515f6040518083038185875af1925050503d805f8114611e1b576040519150601f19603f3d011682016040523d82523d5f602084013e611e20565b606091505b505090508061106857604051633204506f60e01b815260040160405180910390fd5b6001600160a01b038316611e695760405163d92e233d60e01b815260040160405180910390fd5b6040516001600160a01b0384166024820152604481018390525f9060640160408051601f198184030181529190526020810180516001600160e01b031663095ea7b360e01b17905290505f611ec086828486612193565b905080515f03611ed1575050610fed565b80516020148015611ef1575080806020019051810190611ef19190613b32565b15611efd575050610fed565b604051633d04426960e11b815260040160405180910390fd5b611f806040518061016001604052805f6001600160a01b031681526020015f8152602001606081526020015f81526020015f8152602001606081526020015f6001600160a01b03168152602001606081526020016060815260200160608152602001606081525090565b5f516020613fcb5f395f51905f525f611f976117f2565b90505f611fa2611623565b9050604051806101600160405280896001600160a01b0316815260200188815260200186604051602001611fd69190613b4d565b6040516020818303038152906040528152602001878152602001845f015481526020018260405160200161200a9190613b4d565b6040516020818303038152906040528152602001836001600160a01b031681526020018460010160019054906101000a90046001600160a01b03166040516020016120559190613b4d565b604051602081830303815290604052815260200160405180602001604052805f815250815260200160405180602001604052805f8152508152602001836040516020016120a29190613b4d565b60408051601f19818403018152919052905298975050505050505050565b5f5f85855f6040516024016120d793929190613b6a565b60408051601f198184030181529190526020810180516001600160e01b031663b930370160e01b17905290505f61212473ef4fb24ad0916217251f553c0596f8edc630eb66868487612193565b905080806020019051810190611d0f9190613cd9565b60605f848484604051602001612177939291906001600160a01b039390931683526001600160401b03918216602084015216604082015260600190565b6040516020818303038152906040529050611770600682612cbe565b606061219d6117f2565b6001600160a01b031663a6df3a8d868686866040518563ffffffff1660e01b81526004016121ce9493929190613d64565b5f604051808303815f875af11580156121e9573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526117709190810190613e1e565b805f516020613fcb5f395f51905f526001018054610100600160a81b0319166101006001600160a01b039384160217905560405190821681527f5e28d87b97c6ae566ef2ff78da838dc7435976b0abe197eb1045f3f510ae8c69906020015b60405180910390a150565b606061228583612cf0565b6040805163ffffffff8a166020820152881515918101919091526001600160401b0380881660608301528616608082015284151560a082015260ff841660c08201526001600160801b03831660e08201525f906101000160405160208183030381529060405290506122f8600182612cbe565b9998505050505050505050565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006109e7565b612335612d1e565b6001600160a01b03841661235c5760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0383166123835760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0382166123aa5760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0381166123d15760405163d92e233d60e01b815260040160405180910390fd5b6123d9612d43565b6123e1612d43565b6123e9612d43565b7f47cf185b6947c54347c76dfe91c3cd40a06dcd9e1310733403adda917a97e10080546001600160a01b0319166001600160a01b0386161790556124475f516020613f6b5f395f51905f525f51602061402b5f395f51905f52612d4b565b6124515f846126fb565b506124695f51602061402b5f395f51905f52836126fb565b506124815f51602061402b5f395f51905f52846126fb565b506124995f516020613f6b5f395f51905f52826126fb565b5050505050565b6124a8612d1e565b6001600160a01b0381166124cf5760405163d92e233d60e01b815260040160405180910390fd5b807f71d47e0ea4b3bf9d4cff6b12a28e6282e6ba28cb29ac58f4074519c2b4da0a005b80546001600160a01b0319166001600160a01b039290921691909117905550565b61251b612d1e565b806001600160401b03165f0361254457604051631f2a200560e01b815260040160405180910390fd5b7f789b871704bb1441ddd2ece4f82068130ae4608c26aa2af8bdfc5b256476f400805467ffffffffffffffff19166001600160401b0392909216919091179055565b61258e612d1e565b80516001600160a01b03166125b65760405163d92e233d60e01b815260040160405180910390fd5b60408101516001600160a01b03166125e15760405163d92e233d60e01b815260040160405180910390fd5b60608101516001600160a01b031661260c5760405163d92e233d60e01b815260040160405180910390fd5b80515f516020613f2b5f395f51905f52805460208085015163ffffffff1663ffffffff196001600160a01b0395861664010000000002166001600160c01b0319909316929092179190911782556040808501517f3017e6031acbb44412e27cd86624110f3442a97c460bded5ec6f84d8c165d00180549186166001600160a01b031990921691909117905560608501515f516020613f4b5f395f51905f5280546001600160a81b0319169190951617600160a01b1790935591516001815290917f54261684bf11515a9d50a885d387a6e69347bd5af31f88f734f3ea43ed1b97fc910160405180910390a15050565b5f5f516020613f0b5f395f51905f52816127158585612dab565b9050801561161b575f8581526020839052604090206127349085612e4c565b50949350505050565b5f5f516020613f0b5f395f51905f52816127578585612e60565b9050801561161b575f8581526020839052604090206127349085612ed9565b61277e612eed565b5f51602061400b5f395f51905f52805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200161226f565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061283f57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316612833612f1c565b6001600160a01b031614155b15611d8f5760405163703e46dd60e11b815260040160405180910390fd5b5f61106881611d4e565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156128c1575060408051601f3d908101601f191682019092526128be91810190613cd9565b60015b6128ee57604051634c9c8ce360e01b81526001600160a01b03831660048201526024015b60405180910390fd5b5f516020613f8b5f395f51905f52811461291e57604051632a87526960e21b8152600481018290526024016128e5565b6110268383612f30565b6040805163ffffffff841660208201526001600160401b0383168183015281518082038301815260609182019092529061161b600a82612cbe565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611d8f5760405163703e46dd60e11b815260040160405180910390fd5b6040805163ffffffff841660208201526001600160801b0383168183015281518082038301815260609182019092529061161b600b82612cbe565b5f516020613f4b5f395f51905f52805460ff60a01b1916600160a01b831515908102919091179091556040519081527f54261684bf11515a9d50a885d387a6e69347bd5af31f88f734f3ea43ed1b97fc9060200161226f565b612a48611d91565b5f51602061400b5f395f51905f52805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336127b7565b5f6117eb8383612f85565b604080516001600160401b03841660208201528215158183015281518082038301815260609182019092529061161b600782612cbe565b5f612ad3611623565b6001600160a01b031603612afa5760405163218957dd60e21b815260040160405180910390fd5b5f516020613fcb5f395f51905f52545f03611d8f57604051632dfc8e7760e21b815260040160405180910390fd5b5f516020613fab5f395f51905f52805460ff19168215159081179091556040519081527fe33cde4d15681ba1266af1446bddc5806e572585bd67e2a51c383e2f55637a279060200161226f565b60605f6117eb83612fab565b5f6109e7825490565b5f612b93611623565b6001600160a01b031603612bba5760405163218957dd60e21b815260040160405180910390fd5b5f516020613f4b5f395f51905f52545f516020613f2b5f395f51905f5290600160a01b900460ff16612bff57604051633500fe6f60e01b815260040160405180910390fd5b805464010000000090046001600160a01b0316612c2f5760405163d92e233d60e01b815260040160405180910390fd5b60018101546001600160a01b0316612c5a5760405163d92e233d60e01b815260040160405180910390fd5b60028101546001600160a01b031661104a5760405163d92e233d60e01b815260040160405180910390fd5b612c8f828261167a565b6110685760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016128e5565b606060018360e81b83604051602001612cd993929190613ea9565b604051602081830303815290604052905092915050565b612cf981613004565b819061106857604051631553e89d60e21b815260ff90911660048201526024016128e5565b612d26613022565b611d8f57604051631afcd79f60e31b815260040160405180910390fd5b611d8f612d1e565b5f516020613feb5f395f51905f525f612d6384610e96565b5f85815260208490526040808220600101869055519192508491839187917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a450505050565b5f5f516020613feb5f395f51905f52612dc4848461167a565b612e43575f848152602082815260408083206001600160a01b03871684529091529020805460ff19166001179055612df93390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019150506109e7565b5f9150506109e7565b5f6117eb836001600160a01b03841661303b565b5f5f516020613feb5f395f51905f52612e79848461167a565b15612e43575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a460019150506109e7565b5f6117eb836001600160a01b038416613087565b5f51602061400b5f395f51905f525460ff16611d8f57604051638dfc202b60e01b815260040160405180910390fd5b5f5f516020613f8b5f395f51905f52611646565b612f3982613161565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115612f7d5761102682826131aa565b611068613213565b5f825f018281548110612f9a57612f9a613a7c565b905f5260205f200154905092915050565b6060815f01805480602002602001604051908101604052809291908181526020018280548015612ff857602002820191905f5260205f20905b815481526020019060010190808311612fe4575b50505050509050919050565b5f600160ff8316108015906109e75750600360ff8316111592915050565b5f61302b612305565b54600160401b900460ff16919050565b5f81815260018301602052604081205461308057508154600181810184555f8481526020808220909301849055845484825282860190935260409020919091556109e7565b505f6109e7565b5f8181526001830160205260408120548015612e43575f6130a9600183613ed8565b85549091505f906130bc90600190613ed8565b905080821461311b575f865f0182815481106130da576130da613a7c565b905f5260205f200154905080875f0184815481106130fa576130fa613a7c565b5f918252602080832090910192909255918252600188019052604090208390555b855486908061312c5761312c613eeb565b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f9055600193505050506109e7565b806001600160a01b03163b5f0361319657604051634c9c8ce360e01b81526001600160a01b03821660048201526024016128e5565b805f516020613f8b5f395f51905f526124f2565b60605f5f846001600160a01b0316846040516131c69190613eff565b5f60405180830381855af49150503d805f81146131fe576040519150601f19603f3d011682016040523d82523d5f602084013e613203565b606091505b5091509150611770858383613232565b3415611d8f5760405163b398979f60e01b815260040160405180910390fd5b606082613247576132428261328e565b6117eb565b815115801561325e57506001600160a01b0384163b155b1561328757604051639996b31560e01b81526001600160a01b03851660048201526024016128e5565b50806117eb565b80511561329d57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b5f602082840312156132c6575f5ffd5b81356001600160e01b0319811681146117eb575f5ffd5b80356001600160a01b03811681146132f3575f5ffd5b919050565b80356001600160401b03811681146132f3575f5ffd5b80604081018310156109e7575f5ffd5b5f5f5f5f5f5f5f60e0888a031215613334575f5ffd5b61333d886132dd565b96506020880135955060408801359450613359606089016132dd565b93506080880135925061336e60a089016132f8565b915060c08801356001600160401b03811115613388575f5ffd5b6133948a828b0161330e565b91505092959891949750929550565b5f606082840312156133b3575f5ffd5b50919050565b5f5f5f606084860312156133cb575f5ffd5b6133d4846132f8565b92506133e2602085016132f8565b915060408401356001600160401b038111156133fc575f5ffd5b613408868287016133a3565b9150509250925092565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6117eb6020830184613412565b5f60208284031215613462575f5ffd5b6117eb826132f8565b5f5f6040838503121561347c575f5ffd5b8235915061348c602084016132dd565b90509250929050565b803563ffffffff811681146132f3575f5ffd5b801515811461104a575f5ffd5b80356001600160801b03811681146132f3575f5ffd5b5f5f5f5f5f5f5f60e0888a0312156134e1575f5ffd5b6134ea88613495565b96506134f8602089016132f8565b9550613506604089016132f8565b94506060880135613516816134a8565b9350608088013560ff8116811461352b575f5ffd5b925061353960a089016134b5565b915060c08801356001600160401b03811115613553575f5ffd5b6133948a828b016133a3565b5f6020828403121561356f575f5ffd5b5035919050565b634e487b7160e01b5f52604160045260245ffd5b604051608081016001600160401b03811182821017156135ac576135ac613576565b60405290565b604051601f8201601f191681016001600160401b03811182821017156135da576135da613576565b604052919050565b5f5f5f5f5f5f5f8789036101408112156135fa575f5ffd5b613603896132dd565b975061361160208a016132dd565b965061361f60408a016132dd565b955061362d60608a016132dd565b945061363b60808a016132dd565b935061364960a08a016132f8565b9250608060bf198201121561365c575f5ffd5b5061366561358a565b61367160c08a016132dd565b815261367f60e08a01613495565b60208201526136916101008a016132dd565b60408201526136a36101208a016132dd565b60608201528091505092959891949750929550565b5f6001600160401b038211156136d0576136d0613576565b50601f01601f191660200190565b5f5f604083850312156136ef575f5ffd5b6136f8836132dd565b915060208301356001600160401b03811115613712575f5ffd5b8301601f81018513613722575f5ffd5b8035613735613730826136b8565b6135b2565b818152866020838501011115613749575f5ffd5b816020840160208301375f602083830101528093505050509250929050565b5f5f5f6060848603121561377a575f5ffd5b6133d484613495565b5f60208284031215613793575f5ffd5b6117eb826132dd565b5f5f604083850312156137ad575f5ffd5b6137b6836132f8565b915060208301356001600160401b038111156137d0575f5ffd5b6137dc858286016133a3565b9150509250929050565b5f5f5f606084860312156137f8575f5ffd5b61380184613495565b92506133e2602085016134b5565b5f5f5f5f60808587031215613822575f5ffd5b61382b856132dd565b9350613839602086016132f8565b92506040850135915060608501356001600160401b0381111561385a575f5ffd5b613866878288016133a3565b91505092959194509250565b5f5f5f5f5f5f60c08789031215613887575f5ffd5b863595506020870135945061389e604088016132dd565b9350606087013592506138b3608088016132f8565b915060a08701356001600160401b038111156138cd575f5ffd5b6138d989828a016133a3565b9150509295509295509295565b5f5f604083850312156138f7575f5ffd5b8235915060208301356001600160401b038111156137d0575f5ffd5b5f5f60408385031215613924575f5ffd5b50508035926020909101359150565b602080825282518282018190525f918401906040840190835b818110156139735783516001600160a01b031683526020938401939092019160010161394c565b509095945050505050565b5f5f5f5f60808587031215613991575f5ffd5b84359350602085013592506139a860408601613495565b915060608501356001600160401b038111156139c2575f5ffd5b6138668782880161330e565b5f5f83601f8401126139de575f5ffd5b5081356001600160401b038111156139f4575f5ffd5b602083019150836020828501011115613a0b575f5ffd5b9250929050565b5f5f5f5f60408587031215613a25575f5ffd5b84356001600160401b03811115613a3a575f5ffd5b613a46878288016139ce565b90955093505060208501356001600160401b03811115613a64575f5ffd5b613a70878288016139ce565b95989497509550505050565b634e487b7160e01b5f52603260045260245ffd5b5f8235605e19833603018112613aa4575f5ffd5b9190910192915050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156109e7576109e7613aae565b818382375f9101908152919050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b604081525f613b1f604083018688613ae4565b8281036020840152611d0f818587613ae4565b5f60208284031215613b42575f5ffd5b81516117eb816134a8565b60609190911b6bffffffffffffffffffffffff1916815260140190565b60c08152613b8460c0820185516001600160a01b03169052565b602084015160e08201525f6040850151610160610100840152613bab610220840182613412565b90506060860151610120840152608086015161014084015260a086015160bf1984830301610160850152613bdf8282613412565b91505060c0860151613bfd6101808501826001600160a01b03169052565b5060e086015183820360bf19016101a0850152613c1a8282613412565b91505061010086015160bf19848303016101c0850152613c3a8282613412565b91505061012086015160bf19848303016101e0850152613c5a8282613412565b91505061014086015160bf1984830301610200850152613c7a8282613412565b915050613c9260208401866001600160401b03169052565b82810360408401525f81526020810163ffffffff85166060850152905082810360808401525f81526020810183810360a08501525f81529050602081019695505050505050565b5f60208284031215613ce9575f5ffd5b5051919050565b5f5f8335601e19843603018112613d05575f5ffd5b83016020810192503590506001600160401b03811115613d23575f5ffd5b8060051b3603821315613a0b575f5ffd5b8183525f6001600160fb1b03831115613d4b575f5ffd5b8260051b80836020870137939093016020019392505050565b60018060a01b0385168152836020820152608060408201525f613d8a6080830185613412565b8281036060840152833560048110158015613da3575f5ffd5b508152602084013536859003601e19018112613dbd575f5ffd5b84016020810190356001600160401b03811115613dd8575f5ffd5b803603821315613de6575f5ffd5b60606020840152613dfb606084018284613ae4565b915050613e0b6040860186613cf0565b8383036040850152610e88838284613d34565b5f60208284031215613e2e575f5ffd5b81516001600160401b03811115613e43575f5ffd5b8201601f81018413613e53575f5ffd5b8051613e61613730826136b8565b818152856020838501011115613e75575f5ffd5b8160208401602083015e5f91810160200191909152949350505050565b5f81518060208401855e5f93019283525090919050565b60f884901b6001600160f81b03191681526001600160e81b0319831660018201525f6117706004830184613e92565b818103818111156109e7576109e7613aae565b634e487b7160e01b5f52603160045260245ffd5b5f6117eb8284613e9256fec1f6fe24621ce81ec5827caf0253cadb74709b061630e6b55e823717059320003017e6031acbb44412e27cd86624110f3442a97c460bded5ec6f84d8c165d0003017e6031acbb44412e27cd86624110f3442a97c460bded5ec6f84d8c165d002850d585eb7f024ccee5e68e55f2c26cc72e1e6ee456acf62135757a5eb9d4a10360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc7cb9b7aa97cfae96b6e3d67edba431b9a40f18e5090b0f96af70aa487bf0d7017cb9b7aa97cfae96b6e3d67edba431b9a40f18e5090b0f96af70aa487bf0d70002dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f0330055435dd261a4b9b3364963f7738a7a662ad9c84396d64be3365284bb7f0a5041a2646970667358221220d393dcb47ca033b81ca52d58f2347484807fa88be447a97f82c085cdd0aaa7ec64736f6c634300081d0033",
        "sourceMap": "311:1395:59:-:0;;;1171:4:49;1128:48;;311:1395:59;;;;;;;;;-1:-1:-1;2374:22:74;:20;:22::i;:::-;311:1395:59;;7709:422:48;3147:66;7898:15;;;;;;;7894:76;;;7936:23;;-1:-1:-1;;;7936:23:48;;;;;;;;;;;7894:76;7983:14;;-1:-1:-1;;;;;7983:14:48;;;:34;7979:146;;8033:33;;-1:-1:-1;;;;;;8033:33:48;-1:-1:-1;;;;;8033:33:48;;;;;8085:29;;158:50:159;;;8085:29:48;;146:2:159;131:18;8085:29:48;;;;;;;7979:146;7758:373;7709:422::o;14:200:159:-;311:1395:59;;;;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x6080604052600436106102f3575f3560e01c80636a4545be11610189578063a217fddf116100d8578063ca15c87311610092578063de15fbdd1161006d578063de15fbdd14610941578063e7b70bd214610955578063fceac4e614610974578063fe582621146109a4575f5ffd5b8063ca15c873146108e4578063d450a6c614610903578063d547741f14610922575f5ffd5b8063a217fddf1461081b578063a3246ad31461082e578063ad3cb1cc1461085a578063b17081d71461088a578063b3ab252a146108b1578063c226db55146108c5575f5ffd5b80638cdadf48116101435780639526fd161161011e5780639526fd16146107ab57806396d0ee08146107ca5780639a051a78146107de5780639c80c370146107f2575f5ffd5b80638cdadf48146107595780639010d07c1461076d57806391d148541461078c575f5ffd5b80636a4545be146106b257806373edb66c146106c65780637efccc5e146106e557806382f7fb07146106f85780638456cb591461072657806386e147441461073a575f5ffd5b80633f4ba83a116102455780635576b0b7116101ff5780635a2f511c116101da5780635a2f511c1461062e5780635c975abb146106515780635eb3f9651461067457806363e8d18914610693575f5ffd5b80635576b0b7146105a9578063572eb210146105ef57806358b43cd11461060f575f5ffd5b80633f4ba83a146104f35780634926234a146105075780634a2cfb54146105435780634f1ef286146105635780634f2c42da1461057657806352d1902d14610595575f5ffd5b806317573846116102b05780632c491f171161028b5780632c491f17146104655780632f2ff15d1461048457806336568abe146104a35780633e413bee146104c2575f5ffd5b80631757384614610407578063248a9ca31461042657806324ea54f414610445575f5ffd5b806301ffc9a7146102f7578063029d754d1461032b57806307495840146103555780630941a849146103765780630bb9f178146103a25780631592855b146103e6575b5f5ffd5b348015610302575f5ffd5b506103166103113660046132b6565b6109c3565b60405190151581526020015b60405180910390f35b348015610336575f5ffd5b505f516020613f4b5f395f51905f5254600160a01b900460ff16610316565b61036861036336600461331e565b6109ed565b604051908152602001610322565b348015610381575f5ffd5b506103956103903660046133b9565b610bc9565b6040516103229190613440565b3480156103ad575f5ffd5b506103ce6103bc366004613452565b6001600160401b03166001609d1b1790565b6040516001600160a01b039091168152602001610322565b3480156103f1575f5ffd5b5061040561040036600461346b565b610cd6565b005b348015610412575f5ffd5b506103956104213660046134cb565b610d6e565b348015610431575f5ffd5b5061036861044036600461355f565b610e96565b348015610450575f5ffd5b506103685f51602061402b5f395f51905f5281565b348015610470575f5ffd5b5061040561047f3660046135e2565b610eb6565b34801561048f575f5ffd5b5061040561049e36600461346b565b610fd1565b3480156104ae575f5ffd5b506104056104bd36600461346b565b610ff3565b3480156104cd575f5ffd5b505f516020613f2b5f395f51905f525464010000000090046001600160a01b03166103ce565b3480156104fe575f5ffd5b5061040561102b565b348015610512575f5ffd5b507f3017e6031acbb44412e27cd86624110f3442a97c460bded5ec6f84d8c165d001546001600160a01b03166103ce565b34801561054e575f5ffd5b506103685f516020613f6b5f395f51905f5281565b6104056105713660046136de565b61104d565b348015610581575f5ffd5b50610395610590366004613768565b61106c565b3480156105a0575f5ffd5b506103686110d5565b3480156105b4575f5ffd5b507f789b871704bb1441ddd2ece4f82068130ae4608c26aa2af8bdfc5b256476f400546040516001600160401b039091168152602001610322565b3480156105fa575f5ffd5b505f516020613fcb5f395f51905f5254610368565b34801561061a575f5ffd5b50610405610629366004613783565b6110f0565b348015610639575f5ffd5b505f516020613fab5f395f51905f525460ff16610316565b34801561065c575f5ffd5b505f51602061400b5f395f51905f525460ff16610316565b34801561067f575f5ffd5b5061039561068e36600461379c565b611103565b34801561069e575f5ffd5b506103956106ad3660046137e6565b611232565b3480156106bd575f5ffd5b5061040561129b565b3480156106d1575f5ffd5b506103956106e036600461380f565b6112bc565b6103686106f3366004613872565b6113e2565b348015610703575f5ffd5b505f516020613fab5f395f51905f525461010090046001600160a01b03166103ce565b348015610731575f5ffd5b50610405611558565b348015610745575f5ffd5b506103956107543660046138e6565b611577565b348015610764575f5ffd5b506103ce611623565b348015610778575f5ffd5b506103ce610787366004613913565b611655565b348015610797575f5ffd5b506103166107a636600461346b565b61167a565b3480156107b6575f5ffd5b506103956107c536600461379c565b6116b0565b3480156107d5575f5ffd5b50610405611779565b3480156107e9575f5ffd5b50610405611799565b3480156107fd575f5ffd5b505f516020613f4b5f395f51905f52546001600160a01b03166103ce565b348015610826575f5ffd5b506103685f81565b348015610839575f5ffd5b5061084d61084836600461355f565b6117c2565b6040516103229190613933565b348015610865575f5ffd5b50610395604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610895575f5ffd5b506103ce73e7351fd770a37282b91d153ee690b63579d6dd7f81565b3480156108bc575f5ffd5b506103ce6117f2565b3480156108d0575f5ffd5b506103956108df36600461379c565b611819565b3480156108ef575f5ffd5b506103686108fe36600461355f565b6118ab565b34801561090e575f5ffd5b5061039561091d3660046134cb565b6118cf565b34801561092d575f5ffd5b5061040561093c36600461346b565b6119bc565b34801561094c575f5ffd5b506104056119d8565b348015610960575f5ffd5b5061040561096f36600461397e565b611a00565b34801561097f575f5ffd5b505f516020613f2b5f395f51905f525460405163ffffffff9091168152602001610322565b3480156109af575f5ffd5b506103166109be366004613a12565b611bb9565b5f6001600160e01b03198216635a05180f60e01b14806109e757506109e782611d1a565b92915050565b5f5f516020613f6b5f395f51905f52610a0581611d4e565b610a0d611d58565b610a15611d91565b6001600160a01b038916610a3c5760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b038616610a635760405163d92e233d60e01b815260040160405180910390fd5b875f03610a8357604051631f2a200560e01b815260040160405180910390fd5b865f03610aa357604051631f2a200560e01b815260040160405180910390fd5b843414610ac357604051631841b4e160e01b815260040160405180910390fd5b610acc85611dc1565b610afe8973ef4fb24ad0916217251f553c0596f8edc630eb668a865f5b602002810190610af99190613a90565b611e42565b5f610b0b8a8a8a8a611f16565b9050610b25818688610b206020890189613a90565b6120c0565b9250826001600160401b038616337f494a281d9a8c7a931dd7c071159eb4301eeba49463144a512c018897df00e4448d8d8c8e610b6d5f516020613fcb5f395f51905f525490565b610b75611623565b604080516001600160a01b0397881681526020810196909652938616858501526060850192909252608084015290921660a082015260c081018c905290519081900360e00190a45050979650505050505050565b60605f516020613f6b5f395f51905f52610be281611d4e565b610bea611d91565b836001600160401b03165f03610c1357604051631f2a200560e01b815260040160405180910390fd5b6040516001600160401b03858116825286169033907f2b0383352bff6b7e265f53b4c75efe4e36a97149e5c89769ee48dc32becbf7f39060200160405180910390a35f610c706001609d1b6001600160401b03881617878761213a565b9050610ccc7333333333333333333333333333333333333333335f83604051602401610c9c9190613440565b60408051601f198184030181529190526020810180516001600160e01b03166317938e1360e01b17905287612193565b9695505050505050565b5f610ce081611d4e565b825f03610d0057604051633d23e4d160e11b815260040160405180910390fd5b610d0982612210565b5f516020613fcb5f395f51905f528381555f516020613fab5f395f51905f52805460ff1916600190811790915560408051918252517fe33cde4d15681ba1266af1446bddc5806e572585bd67e2a51c383e2f55637a279181900360200190a150505050565b60605f516020613f6b5f395f51905f52610d8781611d4e565b610d8f611d91565b876001600160401b03165f03610db857604051631f2a200560e01b815260040160405180910390fd5b866001600160401b03165f03610de157604051631f2a200560e01b815260040160405180910390fd5b604080516001600160401b038a81168252891660208201528715158183015260ff8716606082015290516001600160801b0386169163ffffffff8c169133917fbfc511faa4955d28b6c9fce55b1c77e8b78181670cd8fd4fd7eef1e86f40a57c919081900360800190a45f610e5c8a60018b8b8b8b8b61227a565b9050610e887333333333333333333333333333333333333333335f83604051602401610c9c9190613440565b9a9950505050505050505050565b5f9081525f516020613feb5f395f51905f52602052604090206001015490565b5f610ebf612305565b805490915060ff600160401b82041615906001600160401b03165f81158015610ee55750825b90505f826001600160401b03166001148015610f005750303b155b905081158015610f0e575080155b15610f2c5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610f5657845460ff60401b1916600160401b1785555b610f628c8c8c8c61232d565b610f6b886124a0565b610f7487612513565b610f7d86612586565b8315610fc357845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050505050565b610fda82610e96565b610fe381611d4e565b610fed83836126fb565b50505050565b6001600160a01b038116331461101c5760405163334bd91960e11b815260040160405180910390fd5b611026828261273d565b505050565b5f51602061402b5f395f51905f5261104281611d4e565b61104a612776565b50565b6110556127cf565b61105e8261285d565b6110688282612867565b5050565b60605f516020613f6b5f395f51905f5261108581611d4e565b61108d611d91565b6040516001600160401b0385169063ffffffff87169033907fd0659ee344f9858d8fb266603746c41b7e694e7e31db7a0339bdd1966443e604905f90a45f610c708686612928565b5f6110de612963565b505f516020613f8b5f395f51905f5290565b5f6110fa81611d4e565b61106882612210565b60605f516020613f6b5f395f51905f5261111c81611d4e565b611124611d91565b836001600160401b03165f0361114d57604051631f2a200560e01b815260040160405180910390fd5b6040516001600160401b038516815233907f35357fa9bfa8f84a1b52b527828776202f3997e379ef57c0032bddd323d866739060200160405180910390a27f789b871704bb1441ddd2ece4f82068130ae4608c26aa2af8bdfc5b256476f400546001600160401b03165f6111d6732222222222222222222222222222222222222222838861213a565b9050610ccc7333333333333333333333333333333333333333335f836040516024016112029190613440565b60408051601f198184030181529190526020810180516001600160e01b03166317938e1360e01b17905288612193565b60605f516020613f6b5f395f51905f5261124b81611d4e565b611253611d91565b6040516001600160801b0385169063ffffffff87169033907fa9cf95da6cbfd75a1c3d33eb9a1e999c5d3bef15da5febead4cf4c27cd31ca3d905f90a45f610c7086866129ac565b5f51602061402b5f395f51905f526112b281611d4e565b61104a60016129e7565b60605f516020613f6b5f395f51905f526112d581611d4e565b6112dd611d91565b6001600160a01b0386166113045760405163d92e233d60e01b815260040160405180910390fd5b835f0361132457604051631f2a200560e01b815260040160405180910390fd5b604080516001600160401b0387166001609d1b8117808352602083018890528351909391926001600160a01b038b169233927f01898048baf1bb744a1989a7937c864aea5dcf53143265c671ca62da74af59eb9281900390910190a46040516001600160a01b0382166024820152604481018690525f9060640160408051601f198184030181529190526020810180516001600160e01b031663a9059cbb60e01b17905290506113d6885f8388612193565b98975050505050505050565b5f5f516020613f6b5f395f51905f526113fa81611d4e565b611402611d58565b61140a611d91565b6001600160a01b0386166114315760405163d92e233d60e01b815260040160405180910390fd5b875f0361145157604051631f2a200560e01b815260040160405180910390fd5b865f0361147157604051631f2a200560e01b815260040160405180910390fd5b5f61147c8987613ac2565b905080341461149e57604051631841b4e160e01b815260040160405180910390fd5b6114a781611dc1565b5f6114b45f8b8b8b611f16565b90506114c2818784886120c0565b9350836001600160401b038716337f35e57cb4b28cb396f836292a31fe6ab3d4933058505b755fd93730964de088ec8d8c8e6115095f516020613fcb5f395f51905f525490565b611511611623565b604080519586526001600160a01b039485166020870152850192909252606084015216608082015260a081018c905260c00160405180910390a45050509695505050505050565b5f51602061402b5f395f51905f5261156f81611d4e565b61104a612a40565b60605f516020613f6b5f395f51905f5261159081611d4e565b611598611d91565b835f036115b857604051631f2a200560e01b815260040160405180910390fd5b60405184815233907f9e863ae135cd93a1e3d62b189c21a779043cf32484c89cac3a2f165ff6e726859060200160405180910390a261161b7322222222222222222222222222222222222222228560405180602001604052805f81525086612193565b949350505050565b5f7f71d47e0ea4b3bf9d4cff6b12a28e6282e6ba28cb29ac58f4074519c2b4da0a005b546001600160a01b0316919050565b5f8281525f516020613f0b5f395f51905f5260208190526040822061161b9084612a88565b5f9182525f516020613feb5f395f51905f52602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60605f516020613f6b5f395f51905f526116c981611d4e565b6116d1611d91565b836001600160401b03165f036116fa57604051631f2a200560e01b815260040160405180910390fd5b6040516001600160401b038516815233907fc170f4b920be05022e727699d425ddece2d7bec4dade25556b0242cc4229b8829060200160405180910390a25f611744856001612a93565b90506117707333333333333333333333333333333333333333335f83604051602401610c9c9190613440565b95945050505050565b5f51602061402b5f395f51905f5261179081611d4e565b61104a5f6129e7565b5f51602061402b5f395f51905f526117b081611d4e565b6117b8612aca565b61104a6001612b28565b5f8181525f516020613f0b5f395f51905f5260208190526040909120606091906117eb90612b75565b9392505050565b5f7f47cf185b6947c54347c76dfe91c3cd40a06dcd9e1310733403adda917a97e100611646565b60605f516020613f6b5f395f51905f5261183281611d4e565b61183a611d91565b836001600160401b03165f0361186357604051631f2a200560e01b815260040160405180910390fd5b6040516001600160401b038516815233907ed65b5b94fdcb52b24c0c9e02df4be70480dcf3f478925311c50d41214708a99060200160405180910390a25f611744855f612a93565b5f8181525f516020613f0b5f395f51905f526020819052604082206117eb90612b81565b60605f516020613f6b5f395f51905f526118e881611d4e565b6118f0611d91565b876001600160401b03165f0361191957604051631f2a200560e01b815260040160405180910390fd5b866001600160401b03165f0361194257604051631f2a200560e01b815260040160405180910390fd5b604080516001600160401b038a81168252891660208201528715158183015260ff8716606082015290516001600160801b0386169163ffffffff8c169133917fd1f85090578473b24b37702258810759e2959ed524132c662a71e67afcca7f6e919081900360800190a45f610e5c8a5f8b8b8b8b8b61227a565b6119c582610e96565b6119ce81611d4e565b610fed838361273d565b5f51602061402b5f395f51905f526119ef81611d4e565b6119f7612aca565b61104a5f612b28565b5f516020613f6b5f395f51905f52611a1781611d4e565b611a1f612b8a565b611a27611d91565b845f03611a4757604051631f2a200560e01b815260040160405180910390fd5b848410611a675760405163a3932d2d60e01b815260040160405180910390fd5b5f516020613f2b5f395f51905f52805464010000000090046001600160a01b03165f611a91611623565b60018401546001600160a01b03918216925016611ab183828b895f610ae9565b835460408051602481018c905263ffffffff92831660448201819052606482018690526001600160a01b03871660848301525f60a483015260c482018c9052928a1660e480830191909152825180830390910181526101049091019091526020810180516001600160e01b0316634701287760e11b17905290337f277aecf73be6e12b9741bc197f65975f20a5f0e8e64da0d67fe5c7e0c89aaf808c8c8c611b57611623565b604051611b8c9493929190938452602084019290925263ffffffff1660408301526001600160a01b0316606082015260800190565b60405180910390a3611bac825f83611ba760208c018c613a90565b612193565b5050505050505050505050565b5f5f516020613f6b5f395f51905f52611bd181611d4e565b611bd9612b8a565b611be1611d91565b5f859003611c025760405163017636cb60e71b815260040160405180910390fd5b5f839003611c235760405163235c028360e11b815260040160405180910390fd5b5f611c425f516020613f4b5f395f51905f52546001600160a01b031690565b90508484604051611c54929190613ad5565b60405180910390208787604051611c6c929190613ad5565b6040519081900381209033907fc6fa8669e5cd3adef472c9e79b57298d69a72c68857bb43a41fdfefe62f88451905f90a4604051630afd9fa560e31b81526001600160a01b038216906357ecfd2890611ccf908a908a908a908a90600401613b0c565b6020604051808303815f875af1158015611ceb573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d0f9190613b32565b979650505050505050565b5f6001600160e01b03198216637965db0b60e01b14806109e757506301ffc9a760e01b6001600160e01b03198316146109e7565b61104a8133612c85565b611d60612aca565b5f516020613fab5f395f51905f525460ff16611d8f57604051634e0b996360e11b815260040160405180910390fd5b565b5f51602061400b5f395f51905f525460ff1615611d8f5760405163d93c066560e01b815260040160405180910390fd5b805f03611dcb5750565b5f611dd46117f2565b6001600160a01b0316826040515f6040518083038185875af1925050503d805f8114611e1b576040519150601f19603f3d011682016040523d82523d5f602084013e611e20565b606091505b505090508061106857604051633204506f60e01b815260040160405180910390fd5b6001600160a01b038316611e695760405163d92e233d60e01b815260040160405180910390fd5b6040516001600160a01b0384166024820152604481018390525f9060640160408051601f198184030181529190526020810180516001600160e01b031663095ea7b360e01b17905290505f611ec086828486612193565b905080515f03611ed1575050610fed565b80516020148015611ef1575080806020019051810190611ef19190613b32565b15611efd575050610fed565b604051633d04426960e11b815260040160405180910390fd5b611f806040518061016001604052805f6001600160a01b031681526020015f8152602001606081526020015f81526020015f8152602001606081526020015f6001600160a01b03168152602001606081526020016060815260200160608152602001606081525090565b5f516020613fcb5f395f51905f525f611f976117f2565b90505f611fa2611623565b9050604051806101600160405280896001600160a01b0316815260200188815260200186604051602001611fd69190613b4d565b6040516020818303038152906040528152602001878152602001845f015481526020018260405160200161200a9190613b4d565b6040516020818303038152906040528152602001836001600160a01b031681526020018460010160019054906101000a90046001600160a01b03166040516020016120559190613b4d565b604051602081830303815290604052815260200160405180602001604052805f815250815260200160405180602001604052805f8152508152602001836040516020016120a29190613b4d565b60408051601f19818403018152919052905298975050505050505050565b5f5f85855f6040516024016120d793929190613b6a565b60408051601f198184030181529190526020810180516001600160e01b031663b930370160e01b17905290505f61212473ef4fb24ad0916217251f553c0596f8edc630eb66868487612193565b905080806020019051810190611d0f9190613cd9565b60605f848484604051602001612177939291906001600160a01b039390931683526001600160401b03918216602084015216604082015260600190565b6040516020818303038152906040529050611770600682612cbe565b606061219d6117f2565b6001600160a01b031663a6df3a8d868686866040518563ffffffff1660e01b81526004016121ce9493929190613d64565b5f604051808303815f875af11580156121e9573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526117709190810190613e1e565b805f516020613fcb5f395f51905f526001018054610100600160a81b0319166101006001600160a01b039384160217905560405190821681527f5e28d87b97c6ae566ef2ff78da838dc7435976b0abe197eb1045f3f510ae8c69906020015b60405180910390a150565b606061228583612cf0565b6040805163ffffffff8a166020820152881515918101919091526001600160401b0380881660608301528616608082015284151560a082015260ff841660c08201526001600160801b03831660e08201525f906101000160405160208183030381529060405290506122f8600182612cbe565b9998505050505050505050565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006109e7565b612335612d1e565b6001600160a01b03841661235c5760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0383166123835760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0382166123aa5760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0381166123d15760405163d92e233d60e01b815260040160405180910390fd5b6123d9612d43565b6123e1612d43565b6123e9612d43565b7f47cf185b6947c54347c76dfe91c3cd40a06dcd9e1310733403adda917a97e10080546001600160a01b0319166001600160a01b0386161790556124475f516020613f6b5f395f51905f525f51602061402b5f395f51905f52612d4b565b6124515f846126fb565b506124695f51602061402b5f395f51905f52836126fb565b506124815f51602061402b5f395f51905f52846126fb565b506124995f516020613f6b5f395f51905f52826126fb565b5050505050565b6124a8612d1e565b6001600160a01b0381166124cf5760405163d92e233d60e01b815260040160405180910390fd5b807f71d47e0ea4b3bf9d4cff6b12a28e6282e6ba28cb29ac58f4074519c2b4da0a005b80546001600160a01b0319166001600160a01b039290921691909117905550565b61251b612d1e565b806001600160401b03165f0361254457604051631f2a200560e01b815260040160405180910390fd5b7f789b871704bb1441ddd2ece4f82068130ae4608c26aa2af8bdfc5b256476f400805467ffffffffffffffff19166001600160401b0392909216919091179055565b61258e612d1e565b80516001600160a01b03166125b65760405163d92e233d60e01b815260040160405180910390fd5b60408101516001600160a01b03166125e15760405163d92e233d60e01b815260040160405180910390fd5b60608101516001600160a01b031661260c5760405163d92e233d60e01b815260040160405180910390fd5b80515f516020613f2b5f395f51905f52805460208085015163ffffffff1663ffffffff196001600160a01b0395861664010000000002166001600160c01b0319909316929092179190911782556040808501517f3017e6031acbb44412e27cd86624110f3442a97c460bded5ec6f84d8c165d00180549186166001600160a01b031990921691909117905560608501515f516020613f4b5f395f51905f5280546001600160a81b0319169190951617600160a01b1790935591516001815290917f54261684bf11515a9d50a885d387a6e69347bd5af31f88f734f3ea43ed1b97fc910160405180910390a15050565b5f5f516020613f0b5f395f51905f52816127158585612dab565b9050801561161b575f8581526020839052604090206127349085612e4c565b50949350505050565b5f5f516020613f0b5f395f51905f52816127578585612e60565b9050801561161b575f8581526020839052604090206127349085612ed9565b61277e612eed565b5f51602061400b5f395f51905f52805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200161226f565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061283f57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316612833612f1c565b6001600160a01b031614155b15611d8f5760405163703e46dd60e11b815260040160405180910390fd5b5f61106881611d4e565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156128c1575060408051601f3d908101601f191682019092526128be91810190613cd9565b60015b6128ee57604051634c9c8ce360e01b81526001600160a01b03831660048201526024015b60405180910390fd5b5f516020613f8b5f395f51905f52811461291e57604051632a87526960e21b8152600481018290526024016128e5565b6110268383612f30565b6040805163ffffffff841660208201526001600160401b0383168183015281518082038301815260609182019092529061161b600a82612cbe565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611d8f5760405163703e46dd60e11b815260040160405180910390fd5b6040805163ffffffff841660208201526001600160801b0383168183015281518082038301815260609182019092529061161b600b82612cbe565b5f516020613f4b5f395f51905f52805460ff60a01b1916600160a01b831515908102919091179091556040519081527f54261684bf11515a9d50a885d387a6e69347bd5af31f88f734f3ea43ed1b97fc9060200161226f565b612a48611d91565b5f51602061400b5f395f51905f52805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336127b7565b5f6117eb8383612f85565b604080516001600160401b03841660208201528215158183015281518082038301815260609182019092529061161b600782612cbe565b5f612ad3611623565b6001600160a01b031603612afa5760405163218957dd60e21b815260040160405180910390fd5b5f516020613fcb5f395f51905f52545f03611d8f57604051632dfc8e7760e21b815260040160405180910390fd5b5f516020613fab5f395f51905f52805460ff19168215159081179091556040519081527fe33cde4d15681ba1266af1446bddc5806e572585bd67e2a51c383e2f55637a279060200161226f565b60605f6117eb83612fab565b5f6109e7825490565b5f612b93611623565b6001600160a01b031603612bba5760405163218957dd60e21b815260040160405180910390fd5b5f516020613f4b5f395f51905f52545f516020613f2b5f395f51905f5290600160a01b900460ff16612bff57604051633500fe6f60e01b815260040160405180910390fd5b805464010000000090046001600160a01b0316612c2f5760405163d92e233d60e01b815260040160405180910390fd5b60018101546001600160a01b0316612c5a5760405163d92e233d60e01b815260040160405180910390fd5b60028101546001600160a01b031661104a5760405163d92e233d60e01b815260040160405180910390fd5b612c8f828261167a565b6110685760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016128e5565b606060018360e81b83604051602001612cd993929190613ea9565b604051602081830303815290604052905092915050565b612cf981613004565b819061106857604051631553e89d60e21b815260ff90911660048201526024016128e5565b612d26613022565b611d8f57604051631afcd79f60e31b815260040160405180910390fd5b611d8f612d1e565b5f516020613feb5f395f51905f525f612d6384610e96565b5f85815260208490526040808220600101869055519192508491839187917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a450505050565b5f5f516020613feb5f395f51905f52612dc4848461167a565b612e43575f848152602082815260408083206001600160a01b03871684529091529020805460ff19166001179055612df93390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019150506109e7565b5f9150506109e7565b5f6117eb836001600160a01b03841661303b565b5f5f516020613feb5f395f51905f52612e79848461167a565b15612e43575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a460019150506109e7565b5f6117eb836001600160a01b038416613087565b5f51602061400b5f395f51905f525460ff16611d8f57604051638dfc202b60e01b815260040160405180910390fd5b5f5f516020613f8b5f395f51905f52611646565b612f3982613161565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115612f7d5761102682826131aa565b611068613213565b5f825f018281548110612f9a57612f9a613a7c565b905f5260205f200154905092915050565b6060815f01805480602002602001604051908101604052809291908181526020018280548015612ff857602002820191905f5260205f20905b815481526020019060010190808311612fe4575b50505050509050919050565b5f600160ff8316108015906109e75750600360ff8316111592915050565b5f61302b612305565b54600160401b900460ff16919050565b5f81815260018301602052604081205461308057508154600181810184555f8481526020808220909301849055845484825282860190935260409020919091556109e7565b505f6109e7565b5f8181526001830160205260408120548015612e43575f6130a9600183613ed8565b85549091505f906130bc90600190613ed8565b905080821461311b575f865f0182815481106130da576130da613a7c565b905f5260205f200154905080875f0184815481106130fa576130fa613a7c565b5f918252602080832090910192909255918252600188019052604090208390555b855486908061312c5761312c613eeb565b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f9055600193505050506109e7565b806001600160a01b03163b5f0361319657604051634c9c8ce360e01b81526001600160a01b03821660048201526024016128e5565b805f516020613f8b5f395f51905f526124f2565b60605f5f846001600160a01b0316846040516131c69190613eff565b5f60405180830381855af49150503d805f81146131fe576040519150601f19603f3d011682016040523d82523d5f602084013e613203565b606091505b5091509150611770858383613232565b3415611d8f5760405163b398979f60e01b815260040160405180910390fd5b606082613247576132428261328e565b6117eb565b815115801561325e57506001600160a01b0384163b155b1561328757604051639996b31560e01b81526001600160a01b03851660048201526024016128e5565b50806117eb565b80511561329d57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b5f602082840312156132c6575f5ffd5b81356001600160e01b0319811681146117eb575f5ffd5b80356001600160a01b03811681146132f3575f5ffd5b919050565b80356001600160401b03811681146132f3575f5ffd5b80604081018310156109e7575f5ffd5b5f5f5f5f5f5f5f60e0888a031215613334575f5ffd5b61333d886132dd565b96506020880135955060408801359450613359606089016132dd565b93506080880135925061336e60a089016132f8565b915060c08801356001600160401b03811115613388575f5ffd5b6133948a828b0161330e565b91505092959891949750929550565b5f606082840312156133b3575f5ffd5b50919050565b5f5f5f606084860312156133cb575f5ffd5b6133d4846132f8565b92506133e2602085016132f8565b915060408401356001600160401b038111156133fc575f5ffd5b613408868287016133a3565b9150509250925092565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6117eb6020830184613412565b5f60208284031215613462575f5ffd5b6117eb826132f8565b5f5f6040838503121561347c575f5ffd5b8235915061348c602084016132dd565b90509250929050565b803563ffffffff811681146132f3575f5ffd5b801515811461104a575f5ffd5b80356001600160801b03811681146132f3575f5ffd5b5f5f5f5f5f5f5f60e0888a0312156134e1575f5ffd5b6134ea88613495565b96506134f8602089016132f8565b9550613506604089016132f8565b94506060880135613516816134a8565b9350608088013560ff8116811461352b575f5ffd5b925061353960a089016134b5565b915060c08801356001600160401b03811115613553575f5ffd5b6133948a828b016133a3565b5f6020828403121561356f575f5ffd5b5035919050565b634e487b7160e01b5f52604160045260245ffd5b604051608081016001600160401b03811182821017156135ac576135ac613576565b60405290565b604051601f8201601f191681016001600160401b03811182821017156135da576135da613576565b604052919050565b5f5f5f5f5f5f5f8789036101408112156135fa575f5ffd5b613603896132dd565b975061361160208a016132dd565b965061361f60408a016132dd565b955061362d60608a016132dd565b945061363b60808a016132dd565b935061364960a08a016132f8565b9250608060bf198201121561365c575f5ffd5b5061366561358a565b61367160c08a016132dd565b815261367f60e08a01613495565b60208201526136916101008a016132dd565b60408201526136a36101208a016132dd565b60608201528091505092959891949750929550565b5f6001600160401b038211156136d0576136d0613576565b50601f01601f191660200190565b5f5f604083850312156136ef575f5ffd5b6136f8836132dd565b915060208301356001600160401b03811115613712575f5ffd5b8301601f81018513613722575f5ffd5b8035613735613730826136b8565b6135b2565b818152866020838501011115613749575f5ffd5b816020840160208301375f602083830101528093505050509250929050565b5f5f5f6060848603121561377a575f5ffd5b6133d484613495565b5f60208284031215613793575f5ffd5b6117eb826132dd565b5f5f604083850312156137ad575f5ffd5b6137b6836132f8565b915060208301356001600160401b038111156137d0575f5ffd5b6137dc858286016133a3565b9150509250929050565b5f5f5f606084860312156137f8575f5ffd5b61380184613495565b92506133e2602085016134b5565b5f5f5f5f60808587031215613822575f5ffd5b61382b856132dd565b9350613839602086016132f8565b92506040850135915060608501356001600160401b0381111561385a575f5ffd5b613866878288016133a3565b91505092959194509250565b5f5f5f5f5f5f60c08789031215613887575f5ffd5b863595506020870135945061389e604088016132dd565b9350606087013592506138b3608088016132f8565b915060a08701356001600160401b038111156138cd575f5ffd5b6138d989828a016133a3565b9150509295509295509295565b5f5f604083850312156138f7575f5ffd5b8235915060208301356001600160401b038111156137d0575f5ffd5b5f5f60408385031215613924575f5ffd5b50508035926020909101359150565b602080825282518282018190525f918401906040840190835b818110156139735783516001600160a01b031683526020938401939092019160010161394c565b509095945050505050565b5f5f5f5f60808587031215613991575f5ffd5b84359350602085013592506139a860408601613495565b915060608501356001600160401b038111156139c2575f5ffd5b6138668782880161330e565b5f5f83601f8401126139de575f5ffd5b5081356001600160401b038111156139f4575f5ffd5b602083019150836020828501011115613a0b575f5ffd5b9250929050565b5f5f5f5f60408587031215613a25575f5ffd5b84356001600160401b03811115613a3a575f5ffd5b613a46878288016139ce565b90955093505060208501356001600160401b03811115613a64575f5ffd5b613a70878288016139ce565b95989497509550505050565b634e487b7160e01b5f52603260045260245ffd5b5f8235605e19833603018112613aa4575f5ffd5b9190910192915050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156109e7576109e7613aae565b818382375f9101908152919050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b604081525f613b1f604083018688613ae4565b8281036020840152611d0f818587613ae4565b5f60208284031215613b42575f5ffd5b81516117eb816134a8565b60609190911b6bffffffffffffffffffffffff1916815260140190565b60c08152613b8460c0820185516001600160a01b03169052565b602084015160e08201525f6040850151610160610100840152613bab610220840182613412565b90506060860151610120840152608086015161014084015260a086015160bf1984830301610160850152613bdf8282613412565b91505060c0860151613bfd6101808501826001600160a01b03169052565b5060e086015183820360bf19016101a0850152613c1a8282613412565b91505061010086015160bf19848303016101c0850152613c3a8282613412565b91505061012086015160bf19848303016101e0850152613c5a8282613412565b91505061014086015160bf1984830301610200850152613c7a8282613412565b915050613c9260208401866001600160401b03169052565b82810360408401525f81526020810163ffffffff85166060850152905082810360808401525f81526020810183810360a08501525f81529050602081019695505050505050565b5f60208284031215613ce9575f5ffd5b5051919050565b5f5f8335601e19843603018112613d05575f5ffd5b83016020810192503590506001600160401b03811115613d23575f5ffd5b8060051b3603821315613a0b575f5ffd5b8183525f6001600160fb1b03831115613d4b575f5ffd5b8260051b80836020870137939093016020019392505050565b60018060a01b0385168152836020820152608060408201525f613d8a6080830185613412565b8281036060840152833560048110158015613da3575f5ffd5b508152602084013536859003601e19018112613dbd575f5ffd5b84016020810190356001600160401b03811115613dd8575f5ffd5b803603821315613de6575f5ffd5b60606020840152613dfb606084018284613ae4565b915050613e0b6040860186613cf0565b8383036040850152610e88838284613d34565b5f60208284031215613e2e575f5ffd5b81516001600160401b03811115613e43575f5ffd5b8201601f81018413613e53575f5ffd5b8051613e61613730826136b8565b818152856020838501011115613e75575f5ffd5b8160208401602083015e5f91810160200191909152949350505050565b5f81518060208401855e5f93019283525090919050565b60f884901b6001600160f81b03191681526001600160e81b0319831660018201525f6117706004830184613e92565b818103818111156109e7576109e7613aae565b634e487b7160e01b5f52603160045260245ffd5b5f6117eb8284613e9256fec1f6fe24621ce81ec5827caf0253cadb74709b061630e6b55e823717059320003017e6031acbb44412e27cd86624110f3442a97c460bded5ec6f84d8c165d0003017e6031acbb44412e27cd86624110f3442a97c460bded5ec6f84d8c165d002850d585eb7f024ccee5e68e55f2c26cc72e1e6ee456acf62135757a5eb9d4a10360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc7cb9b7aa97cfae96b6e3d67edba431b9a40f18e5090b0f96af70aa487bf0d7017cb9b7aa97cfae96b6e3d67edba431b9a40f18e5090b0f96af70aa487bf0d70002dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f0330055435dd261a4b9b3364963f7738a7a662ad9c84396d64be3365284bb7f0a5041a2646970667358221220d393dcb47ca033b81ca52d58f2347484807fa88be447a97f82c085cdd0aaa7ec64736f6c634300081d0033",
        "sourceMap": "311:1395:59:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1743:212:47;;;;;;;;;;-1:-1:-1;1743:212:47;;;;;:::i;:::-;;:::i;:::-;;;470:14:159;;463:22;445:41;;433:2;418:18;1743:212:47;;;;;;;;6732:114:75;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;6803:36:75;-1:-1:-1;;;6803:36:75;;;;6732:114;;4298:1676:76;;;;;;:::i;:::-;;:::i;:::-;;;2193:25:159;;;2181:2;2166:18;4298:1676:76;2047:177:159;7925:613:77;;;;;;;;;;-1:-1:-1;7925:613:77;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9754:345::-;;;;;;;;;;-1:-1:-1;9754:345:77;;;;;:::i;:::-;-1:-1:-1;;;;;10071:19:77;-1:-1:-1;;;10062:28:77;;9754:345;;;;-1:-1:-1;;;;;4071:32:159;;;4053:51;;4041:2;4026:18;9754:345:77;3907:203:159;2553:398:76;;;;;;;;;;-1:-1:-1;2553:398:76;;;;;:::i;:::-;;:::i;:::-;;3197:767:77;;;;;;;;;;-1:-1:-1;3197:767:77;;;;;:::i;:::-;;:::i;4807:191:46:-;;;;;;;;;;-1:-1:-1;4807:191:46;;;;;:::i;:::-;;:::i;1143:66:74:-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1143:66:74;;1205:499:59;;;;;;;;;;-1:-1:-1;1205:499:59;;;;;:::i;:::-;;:::i;5294:136:46:-;;;;;;;;;;-1:-1:-1;5294:136:46;;;;;:::i;:::-;;:::i;6396:245::-;;;;;;;;;;-1:-1:-1;6396:245:46;;;;;:::i;:::-;;:::i;6581:103:75:-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;6644:33:75;;;;-1:-1:-1;;;;;6644:33:75;6581:103;;3977:79:74;;;;;;;;;;;;;:::i;6894:129:75:-;;;;;;;;;;-1:-1:-1;6973:43:75;;-1:-1:-1;;;;;6973:43:75;6894:129;;1073:64:74;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1073:64:74;;4161:214:49;;;;;;:::i;:::-;;:::i;4842:512:77:-;;;;;;;;;;-1:-1:-1;4842:512:77;;;;;:::i;:::-;;:::i;3708:134:49:-;;;;;;;;;;;;;:::i;10239:128:77:-;;;;;;;;;;-1:-1:-1;2163:44:77;10311:49;10239:128;;-1:-1:-1;;;;;10311:49:77;;;9862:50:159;;9850:2;9835:18;10239:128:77;9718:200:159;7595:121:76;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;7673:36:76;7595:121;;4098:156;;;;;;;;;;-1:-1:-1;4098:156:76;;;;;:::i;:::-;;:::i;7760:112::-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;7833:32:76;;;7760:112;;2496:145:51;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;2625:9:51;;;2496:145;;9066:634:77;;;;;;;;;;-1:-1:-1;9066:634:77;;;;;:::i;:::-;;:::i;5408:525::-;;;;;;;;;;-1:-1:-1;5408:525:77;;;;;:::i;:::-;;:::i;4070:95:75:-;;;;;;;;;;;;;:::i;7166:705:77:-;;;;;;;;;;-1:-1:-1;7166:705:77;;;;;:::i;:::-;;:::i;6018:1533:76:-;;;;;;:::i;:::-;;:::i;7916:127::-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;7997:39:76;;;;-1:-1:-1;;;;;7997:39:76;7916:127;;3866:75:74;;;;;;;;;;;;;:::i;8592:420:77:-;;;;;;;;;;-1:-1:-1;8592:420:77;;;;;:::i;:::-;;:::i;2475:117:73:-;;;;;;;;;;;;;:::i;2540:233:47:-;;;;;;;;;;-1:-1:-1;2540:233:47;;;;;:::i;:::-;;:::i;3780:207:46:-;;;;;;;;;;-1:-1:-1;3780:207:46;;;;;:::i;:::-;;:::i;5987:535:77:-;;;;;;;;;;-1:-1:-1;5987:535:77;;;;;:::i;:::-;;:::i;4213:97:75:-;;;;;;;;;;;;;:::i;3594:136:76:-;;;;;;;;;;;;;:::i;7071:137:75:-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;7154:47:75;-1:-1:-1;;;;;7154:47:75;7071:137;;2398:49:46;;;;;;;;;;-1:-1:-1;2398:49:46;2443:4;2398:49;;3706:227:47;;;;;;;;;;-1:-1:-1;3706:227:47;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1819:58:49:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:49;;;;;987:84:76;;;;;;;;;;;;1029:42;987:84;;4092:103:74;;;;;;;;;;;;;:::i;6576:536:77:-;;;;;;;;;;-1:-1:-1;6576:536:77;;;;;:::i;:::-;;:::i;2941:222:47:-;;;;;;;;;;-1:-1:-1;2941:222:47;;;;;:::i;:::-;;:::i;4018:770:77:-;;;;;;;;;;-1:-1:-1;4018:770:77;;;;;:::i;:::-;;:::i;5710:138:46:-;;;;;;;;;;-1:-1:-1;5710:138:46;;;;;:::i;:::-;;:::i;3780::76:-;;;;;;;;;;;;;:::i;4358:1335:75:-;;;;;;;;;;-1:-1:-1;4358:1335:75;;;;;:::i;:::-;;:::i;6399:134::-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;6480:46:75;6399:134;;6480:46;;;;15526:42:159;;15514:2;15499:18;6399:134:75;15382:192:159;5741:610:75;;;;;;;;;;-1:-1:-1;5741:610:75;;;;;:::i;:::-;;:::i;1743:212:47:-;1828:4;-1:-1:-1;;;;;;1851:57:47;;-1:-1:-1;;;1851:57:47;;:97;;;1912:36;1936:11;1912:23;:36::i;:::-;1844:104;1743:212;-1:-1:-1;;1743:212:47:o;4298:1676:76:-;4711:15;-1:-1:-1;;;;;;;;;;;3272:16:46;3283:4;3272:10;:16::i;:::-;3290:23:76::1;:21;:23::i;:::-;1979:19:51::2;:17;:19::i;:::-;-1:-1:-1::0;;;;;4750:30:76;::::3;4742:61;;;;-1:-1:-1::0;;;4742:61:76::3;;;;;;;;;;;;-1:-1:-1::0;;;;;4821:30:76;::::3;4813:61;;;;-1:-1:-1::0;;;4813:61:76::3;;;;;;;;;;;;4892:10;4906:1;4892:15:::0;4884:45:::3;;;;-1:-1:-1::0;;;4884:45:76::3;;;;;;;;;;;;4947:10;4961:1;4947:15:::0;4939:45:::3;;;;-1:-1:-1::0;;;4939:45:76::3;;;;;;;;;;;;5015:9;5002;:22;4994:50;;;;-1:-1:-1::0;;;4994:50:76::3;;;;;;;;;;;;5117:32;5139:9;5117:21;:32::i;:::-;5220:80;5234:16:::0;880:42:::3;5264:10:::0;5276:20;5297:1:::3;5276:23;;;;;;;;;;:::i;:::-;5220:13;:80::i;:::-;5388:34;5425:140;5461:16;5491:10;5515;5539:16;5425:22;:140::i;:::-;5388:177:::0;-1:-1:-1;5586:72:76::3;5388:177:::0;5617:4;5623:9;5634:23:::3;;::::0;::::3;:20:::0;:23:::3;:::i;:::-;5586:15;:72::i;:::-;5576:82:::0;-1:-1:-1;5576:82:76;-1:-1:-1;;;;;5674:293:76;::::3;5711:10;5674:293;5774:16:::0;5804:10;5828:16;5858:10;5882:21:::3;-1:-1:-1::0;;;;;;;;;;;7673:36:76;;7595:121;5882:21:::3;5917:17;:15;:17::i;:::-;5674:293;::::0;;-1:-1:-1;;;;;17455:32:159;;;17437:51;;17519:2;17504:18;;17497:34;;;;17567:32;;;17547:18;;;17540:60;17631:2;17616:18;;17609:34;;;;17674:3;17659:19;;17652:35;17724:32;;;17475:3;17703:19;;17696:61;17788:3;17773:19;;17766:35;;;5674:293:76;;;;;;17424:3:159;5674:293:76;;::::3;4732:1242;4298:1676:::0;;;;;;;;;;:::o;7925:613:77:-;8164:12;-1:-1:-1;;;;;;;;;;;3272:16:46;3283:4;3272:10;:16::i;:::-;1979:19:51::1;:17;:19::i;:::-;8200:6:77::2;-1:-1:-1::0;;;;;8200:11:77::2;8210:1;8200:11:::0;8192:41:::2;;;;-1:-1:-1::0;;;8192:41:77::2;;;;;;;;;;;;8249:51;::::0;-1:-1:-1;;;;;9880:31:159;;;9862:50;;8249:51:77;::::2;::::0;8269:10:::2;::::0;8249:51:::2;::::0;9850:2:159;9835:18;8249:51:77::2;;;;;;;8310:19;8332:81;-1:-1:-1::0;;;;;;;;10071:19:77;;10062:28;8394:10:::2;8406:6;8332:30;:81::i;:::-;8310:103;;8430:101;1069:42;8457:1;8502:6;8460:49;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;8460:49:77;;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;8460:49:77::2;-1:-1:-1::0;;;8460:49:77::2;::::0;;8511:19;8430:13:::2;:101::i;:::-;8423:108:::0;7925:613;-1:-1:-1;;;;;;7925:613:77:o;2553:398:76:-;2443:4:46;3272:16;2443:4;3272:10;:16::i;:::-;2682:11:76::1;2697:1;2682:16:::0;2674:43:::1;;;;-1:-1:-1::0;;;2674:43:76::1;;;;;;;;;;;;2728:42;2755:14;2728:26;:42::i;:::-;-1:-1:-1::0;;;;;;;;;;;2848:27:76;;;-1:-1:-1;;;;;;;;;;;2885:16:76;;-1:-1:-1;;2885:16:76::1;2897:4;2885:16:::0;;::::1;::::0;;;2917:27:::1;::::0;;445:41:159;;;2917:27:76;::::1;::::0;;;;433:2:159;2917:27:76;;::::1;2664:287;2553:398:::0;;;:::o;3197:767:77:-;3518:12;-1:-1:-1;;;;;;;;;;;3272:16:46;3283:4;3272:10;:16::i;:::-;1979:19:51::1;:17;:19::i;:::-;3554:7:77::2;-1:-1:-1::0;;;;;3554:12:77::2;3565:1;3554:12:::0;3546:42:::2;;;;-1:-1:-1::0;;;3546:42:77::2;;;;;;;;;;;;3606:2;-1:-1:-1::0;;;;;3606:7:77::2;3612:1;3606:7:::0;3598:37:::2;;;;-1:-1:-1::0;;;3598:37:77::2;;;;;;;;;;;;3650:75;::::0;;-1:-1:-1;;;;;18047:31:159;;;18029:50;;18115:31;;18110:2;18095:18;;18088:59;18190:14;;18183:22;18163:18;;;18156:50;18254:4;18242:17;;18237:2;18222:18;;18215:45;3650:75:77;;-1:-1:-1;;;;;3650:75:77;::::2;::::0;::::2;::::0;::::2;::::0;3670:10:::2;::::0;3650:75:::2;::::0;;;;;18016:3:159;3650:75:77;;::::2;3735:19;3757:82;3790:5;3797:4;3803:7;3812:2;3816:10;3828:3;3833:5;3757:32;:82::i;:::-;3735:104;;3856:101;1069:42;3883:1;3928:6;3886:49;;;;;;;;:::i;3856:101::-;3849:108:::0;3197:767;-1:-1:-1;;;;;;;;;;3197:767:77:o;4807:191:46:-;4872:7;4967:14;;;-1:-1:-1;;;;;;;;;;;4967:14:46;;;;;:24;;;;4807:191::o;1205:499:59:-;4158:30:48;4191:26;:24;:26::i;:::-;4302:15;;4158:59;;-1:-1:-1;4302:15:48;-1:-1:-1;;;4302:15:48;;;4301:16;;-1:-1:-1;;;;;4348:14:48;4279:19;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;-1:-1:-1;;;;;4788:16:48;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:48;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:48;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:48;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:48;-1:-1:-1;;;5011:22:48;;;4977:67;1487:53:59::1;1505:8;1515:5;1522:8;1532:7;1487:17;:53::i;:::-;1550:40;1574:15;1550:23;:40::i;:::-;1600:48;1632:15;1600:31;:48::i;:::-;1658:39;1684:12;1658:25;:39::i;:::-;5068:14:48::0;5064:101;;;5098:23;;-1:-1:-1;;;;5098:23:48;;;5140:14;;-1:-1:-1;9862:50:159;;5140:14:48;;9850:2:159;9835:18;5140:14:48;;;;;;;5064:101;4092:1079;;;;;1205:499:59;;;;;;;:::o;5294:136:46:-;5368:18;5381:4;5368:12;:18::i;:::-;3272:16;3283:4;3272:10;:16::i;:::-;5398:25:::1;5409:4;5415:7;5398:10;:25::i;:::-;;5294:136:::0;;;:::o;6396:245::-;-1:-1:-1;;;;;6489:34:46;;966:10:50;6489:34:46;6485:102;;6546:30;;-1:-1:-1;;;6546:30:46;;;;;;;;;;;6485:102;6597:37;6609:4;6615:18;6597:11;:37::i;:::-;;6396:245;;:::o;3977:79:74:-;-1:-1:-1;;;;;;;;;;;3272:16:46;3283:4;3272:10;:16::i;:::-;4039:10:74::1;:8;:10::i;:::-;3977:79:::0;:::o;4161:214:49:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;4842:512:77:-;5071:12;-1:-1:-1;;;;;;;;;;;3272:16:46;3283:4;3272:10;:16::i;:::-;1979:19:51::1;:17;:19::i;:::-;5104:43:77::2;::::0;-1:-1:-1;;;;;5104:43:77;::::2;::::0;::::2;::::0;::::2;::::0;5124:10:::2;::::0;5104:43:::2;::::0;;;::::2;5157:19;5179:50;5218:5;5225:3;5179:38;:50::i;3708:134:49:-:0;3777:7;2926:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3708:134:49;:::o;4098:156:76:-;2443:4:46;3272:16;2443:4;3272:10;:16::i;:::-;4205:42:76::1;4232:14;4205:26;:42::i;9066:634:77:-:0;9277:12;-1:-1:-1;;;;;;;;;;;3272:16:46;3283:4;3272:10;:16::i;:::-;1979:19:51::1;:17;:19::i;:::-;9313:6:77::2;-1:-1:-1::0;;;;;9313:11:77::2;9323:1;9313:11:::0;9305:41:::2;;;;-1:-1:-1::0;;;9305:41:77::2;;;;;;;;;;;;9362:38;::::0;-1:-1:-1;;;;;9880:31:159;;9862:50;;9381:10:77::2;::::0;9362:38:::2;::::0;9850:2:159;9835:18;9362:38:77::2;;;;;;;2163:44:::0;9430:49;-1:-1:-1;;;;;9430:49:77::2;9410:17;9511:64;1227:42;9430:49:::0;9568:6;9511:30:::2;:64::i;:::-;9489:86;;9592:101;1069:42;9619:1;9664:6;9622:49;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;9622:49:77;;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;9622:49:77::2;-1:-1:-1::0;;;9622:49:77::2;::::0;;9673:19;9592:13:::2;:101::i;5408:525::-:0;5642:12;-1:-1:-1;;;;;;;;;;;3272:16:46;3283:4;3272:10;:16::i;:::-;1979:19:51::1;:17;:19::i;:::-;5675:47:77::2;::::0;-1:-1:-1;;;;;5675:47:77;::::2;::::0;::::2;::::0;::::2;::::0;5697:10:::2;::::0;5675:47:::2;::::0;;;::::2;5732:19;5754:54;5795:5;5802;5754:40;:54::i;4070:95:75:-:0;-1:-1:-1;;;;;;;;;;;3272:16:46;3283:4;3272:10;:16::i;:::-;4135:23:75::1;4153:4;4135:17;:23::i;7166:705:77:-:0;7429:12;-1:-1:-1;;;;;;;;;;;3272:16:46;3283:4;3272:10;:16::i;:::-;1979:19:51::1;:17;:19::i;:::-;-1:-1:-1::0;;;;;7465:19:77;::::2;7457:50;;;;-1:-1:-1::0;;;7457:50:77::2;;;;;;;;;;;;7525:6;7535:1;7525:11:::0;7517:41:::2;;;;-1:-1:-1::0;;;7517:41:77::2;;;;;;;;;;;;7637:74;::::0;;-1:-1:-1;;;;;10071:19:77;;-1:-1:-1;;;10062:28:77;;18659:51:159;;;18741:2;18726:18;;18719:34;;;7637:74:77;;10062:28;;10071:19;;-1:-1:-1;;;;;7637:74:77;::::2;::::0;7658:10:::2;::::0;7637:74:::2;::::0;;;;;;;;::::2;7741:56;::::0;-1:-1:-1;;;;;18677:32:159;;7741:56:77::2;::::0;::::2;18659:51:159::0;18726:18;;;18719:34;;;7721:17:77::2;::::0;18632:18:159;;7741:56:77::2;::::0;;-1:-1:-1;;7741:56:77;;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;7741:56:77::2;-1:-1:-1::0;;;7741:56:77::2;::::0;;;-1:-1:-1;7814:50:77::2;7828:5:::0;-1:-1:-1;7741:56:77;7844:19;7814:13:::2;:50::i;:::-;7807:57:::0;7166:705;-1:-1:-1;;;;;;;;7166:705:77:o;6018:1533:76:-;6394:15;-1:-1:-1;;;;;;;;;;;3272:16:46;3283:4;3272:10;:16::i;:::-;3290:23:76::1;:21;:23::i;:::-;1979:19:51::2;:17;:19::i;:::-;-1:-1:-1::0;;;;;6433:30:76;::::3;6425:61;;;;-1:-1:-1::0;;;6425:61:76::3;;;;;;;;;;;;6504:10;6518:1;6504:15:::0;6496:45:::3;;;;-1:-1:-1::0;;;6496:45:76::3;;;;;;;;;;;;6559:10;6573:1;6559:15:::0;6551:45:::3;;;;-1:-1:-1::0;;;6551:45:76::3;;;;;;;;;;;;6607:18;6628:22;6640:10:::0;6628:9;:22:::3;:::i;:::-;6607:43;;6779:10;6766:9;:23;6758:51;;;;-1:-1:-1::0;;;6758:51:76::3;;;;;;;;;;;;6882:33;6904:10;6882:21;:33::i;:::-;7003:34;7040:134;7084:1;7100:10;7124;7148:16;7040:22;:134::i;:::-;7003:171;;7195:69;7211:13;7226:4;7232:10;7244:19;7195:15;:69::i;:::-;7185:79:::0;-1:-1:-1;7185:79:76;-1:-1:-1;;;;;7280:264:76;::::3;7318:10;7280:264;7381:10:::0;7405:16;7435:10;7459:21:::3;-1:-1:-1::0;;;;;;;;;;;7673:36:76;;7595:121;7459:21:::3;7494:17;:15;:17::i;:::-;7280:264;::::0;;19313:25:159;;;-1:-1:-1;;;;;19374:32:159;;;19369:2;19354:18;;19347:60;19423:18;;19416:34;;;;19481:2;19466:18;;19459:34;19530:32;19524:3;19509:19;;19502:61;19394:3;19579:19;;19572:35;;;19300:3;19285:19;7280:264:76::3;;;;;;;6415:1136;;6018:1533:::0;;;;;;;;;:::o;3866:75:74:-;-1:-1:-1;;;;;;;;;;;3272:16:46;3283:4;3272:10;:16::i;:::-;3926:8:74::1;:6;:8::i;8592:420:77:-:0;8804:12;-1:-1:-1;;;;;;;;;;;3272:16:46;3283:4;3272:10;:16::i;:::-;1979:19:51::1;:17;:19::i;:::-;8840:6:77::2;8850:1;8840:11:::0;8832:41:::2;;;;-1:-1:-1::0;;;8832:41:77::2;;;;;;;;;;;;8889:39;::::0;2193:25:159;;;8909:10:77::2;::::0;8889:39:::2;::::0;2181:2:159;2166:18;8889:39:77::2;;;;;;;8945:60;1227:42;8973:6;8945:60;;;;;;;;;;;::::0;8985:19:::2;8945:13;:60::i;:::-;8938:67:::0;8592:420;-1:-1:-1;;;;8592:420:77:o;2475:117:73:-;2523:7;1433:36;2549:26;:36;-1:-1:-1;;;;;2549:36:73;;2475:117;-1:-1:-1;2475:117:73:o;2540:233:47:-;2621:7;2736:20;;;-1:-1:-1;;;;;;;;;;;2736:20:47;;;;;;;:30;;2760:5;2736:23;:30::i;3780:207:46:-;3857:4;3949:14;;;-1:-1:-1;;;;;;;;;;;3949:14:46;;;;;;;;-1:-1:-1;;;;;3949:31:46;;;;;;;;;;;;;;;3780:207::o;5987:535:77:-;6196:12;-1:-1:-1;;;;;;;;;;;3272:16:46;3283:4;3272:10;:16::i;:::-;1979:19:51::1;:17;:19::i;:::-;6232:3:77::2;-1:-1:-1::0;;;;;6232:8:77::2;6239:1;6232:8:::0;6224:38:::2;;;;-1:-1:-1::0;;;6224:38:77::2;;;;;;;;;;;;6278;::::0;-1:-1:-1;;;;;9880:31:159;;9862:50;;6300:10:77::2;::::0;6278:38:::2;::::0;9850:2:159;9835:18;6278:38:77::2;;;;;;;6326:19;6348:49;6387:3;6392:4;6348:38;:49::i;:::-;6326:71;;6414:101;1069:42;6441:1;6486:6;6444:49;;;;;;;;:::i;6414:101::-;6407:108:::0;5987:535;-1:-1:-1;;;;;5987:535:77:o;4213:97:75:-;-1:-1:-1;;;;;;;;;;;3272:16:46;3283:4;3272:10;:16::i;:::-;4279:24:75::1;4297:5;4279:17;:24::i;3594:136:76:-:0;-1:-1:-1;;;;;;;;;;;3272:16:46;3283:4;3272:10;:16::i;:::-;3661:27:76::1;:25;:27::i;:::-;3698:25;3718:4;3698:19;:25::i;3706:227:47:-:0;3801:40;3897:20;;;-1:-1:-1;;;;;;;;;;;3897:20:47;;;;;;;;3773:16;;1484:38;3897:29;;:27;:29::i;:::-;3890:36;3706:227;-1:-1:-1;;;3706:227:47:o;4092:103:74:-;4133:7;2014:29;4159:20;1890:169;6576:536:77;6785:12;-1:-1:-1;;;;;;;;;;;3272:16:46;3283:4;3272:10;:16::i;:::-;1979:19:51::1;:17;:19::i;:::-;6821:3:77::2;-1:-1:-1::0;;;;;6821:8:77::2;6828:1;6821:8:::0;6813:38:::2;;;;-1:-1:-1::0;;;6813:38:77::2;;;;;;;;;;;;6867;::::0;-1:-1:-1;;;;;9880:31:159;;9862:50;;6889:10:77::2;::::0;6867:38:::2;::::0;9850:2:159;9835:18;6867:38:77::2;;;;;;;6915:19;6937:50;6976:3;6981:5;6937:38;:50::i;2941:222:47:-:0;3012:7;3127:20;;;-1:-1:-1;;;;;;;;;;;3127:20:47;;;;;;;:29;;:27;:29::i;4018:770:77:-;4340:12;-1:-1:-1;;;;;;;;;;;3272:16:46;3283:4;3272:10;:16::i;:::-;1979:19:51::1;:17;:19::i;:::-;4376:7:77::2;-1:-1:-1::0;;;;;4376:12:77::2;4387:1;4376:12:::0;4368:42:::2;;;;-1:-1:-1::0;;;4368:42:77::2;;;;;;;;;;;;4428:2;-1:-1:-1::0;;;;;4428:7:77::2;4434:1;4428:7:::0;4420:37:::2;;;;-1:-1:-1::0;;;4420:37:77::2;;;;;;;;;;;;4472:76;::::0;;-1:-1:-1;;;;;18047:31:159;;;18029:50;;18115:31;;18110:2;18095:18;;18088:59;18190:14;;18183:22;18163:18;;;18156:50;18254:4;18242:17;;18237:2;18222:18;;18215:45;4472:76:77;;-1:-1:-1;;;;;4472:76:77;::::2;::::0;::::2;::::0;::::2;::::0;4493:10:::2;::::0;4472:76:::2;::::0;;;;;18016:3:159;4472:76:77;;::::2;4558:19;4580:83;4613:5;4620;4627:7;4636:2;4640:10;4652:3;4657:5;4580:32;:83::i;5710:138:46:-:0;5785:18;5798:4;5785:12;:18::i;:::-;3272:16;3283:4;3272:10;:16::i;:::-;5815:26:::1;5827:4;5833:7;5815:11;:26::i;3780:138:76:-:0;-1:-1:-1;;;;;;;;;;;3272:16:46;3283:4;3272:10;:16::i;:::-;3848:27:76::1;:25;:27::i;:::-;3885:26;3905:5;3885:19;:26::i;4358:1335:75:-:0;-1:-1:-1;;;;;;;;;;;3272:16:46;3283:4;3272:10;:16::i;:::-;3770:21:75::1;:19;:21::i;:::-;1979:19:51::2;:17;:19::i;:::-;4668:6:75::3;4678:1;4668:11:::0;4660:41:::3;;;;-1:-1:-1::0;;;4660:41:75::3;;;;;;;;;;;;4728:6;4719;:15;4711:41;;;;-1:-1:-1::0;;;4711:41:75::3;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;4855:6:75;;;;::::3;-1:-1:-1::0;;;;;4855:6:75::3;4763:35;4915:17;:15;:17::i;:::-;5037:16;::::0;::::3;::::0;-1:-1:-1;;;;;4899:35:75;;::::3;::::0;-1:-1:-1;5037:16:75::3;5063:69;5077:5:::0;5037:16;5100:6;5108:20;4891:44:::3;5108:23;::::0;5063:69:::3;5259:19:::0;;8409:186;;;;;;29936:25:159;;;5259:19:75::3;::::0;;::::3;29977:18:159::0;;;29970:51;;;30037:18;;;30030:34;;;-1:-1:-1;;;;;30100:32:159;;30080:18;;;30073:60;-1:-1:-1;30149:19:159;;;30142:35;30193:19;;;30186:35;;;30258:23;;;30237:19;;;;30230:52;;;;8409:186:75;;;;;;;;;;29908:19:159;;;;8409:186:75;;;;;;;;-1:-1:-1;;;;;8409:186:75;-1:-1:-1;;;8409:186:75;;;;5514:10:::3;5475:137;29936:25:159::0;30186:35;30258:23;5585:17:75::3;:15;:17::i;:::-;5475:137;;;;;;;;19847:25:159::0;;;19903:2;19888:18;;19881:34;;;;19963:10;19951:23;19946:2;19931:18;;19924:51;-1:-1:-1;;;;;20011:32:159;20006:2;19991:18;;19984:60;19834:3;19819:19;;19618:432;5475:137:75::3;;;;;;;;5623:63;5637:14:::0;5653:1:::3;5656:4:::0;5662:23:::3;;::::0;::::3;:20:::0;:23:::3;:::i;:::-;5623:13;:63::i;:::-;;4650:1043;;;;;4358:1335:::0;;;;;:::o;5741:610::-;5958:4;-1:-1:-1;;;;;;;;;;;3272:16:46;3283:4;3272:10;:16::i;:::-;3770:21:75::1;:19;:21::i;:::-;1979:19:51::2;:17;:19::i;:::-;6004:1:75::3;5986:19:::0;;;5978:44:::3;;;;-1:-1:-1::0;;;5978:44:75::3;;;;;;;;;;;;6062:1;6040:23:::0;;;6032:52:::3;;;;-1:-1:-1::0;;;6032:52:75::3;;;;;;;;;;;;6095:27;6125:26;-1:-1:-1::0;;;;;;;;;;;7154:47:75;-1:-1:-1;;;;;7154:47:75;;7071:137;6125:26:::3;6095:56;;6234:11;;6224:22;;;;;;;:::i;:::-;;;;;;;;6214:7;;6204:18;;;;;;;:::i;:::-;;::::0;;;;::::3;::::0;;;6192:10:::3;::::0;6166:81:::3;::::0;;;::::3;6265:79;::::0;-1:-1:-1;;;6265:79:75;;-1:-1:-1;;;;;6265:57:75;::::3;::::0;::::3;::::0;:79:::3;::::0;6323:7;;;;6332:11;;;;6265:79:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6258:86:::0;5741:610;-1:-1:-1;;;;;;;5741:610:75:o;3491:202:46:-;3576:4;-1:-1:-1;;;;;;3599:47:46;;-1:-1:-1;;;3599:47:46;;:87;;-1:-1:-1;;;;;;;;;;1101:40:52;;;3650:36:46;1002:146:52;4196:103:46;4262:30;4273:4;966:10:50;4262::46;:30::i;10948:162:76:-;11005:27;:25;:27::i;:::-;-1:-1:-1;;;;;;;;;;;11050:32:76;;;11042:61;;;;-1:-1:-1;;;11042:61:76;;;;;;;;;;;;10948:162::o;2709:128:51:-;-1:-1:-1;;;;;;;;;;;2625:9:51;;;2770:61;;;2805:15;;-1:-1:-1;;;2805:15:51;;;;;;;;;;;4241:209:73;4311:6;4321:1;4311:11;4307:24;;4241:209;:::o;4307:24::-;4341:12;4366:10;:8;:10::i;:::-;-1:-1:-1;;;;;4358:24:73;4391:6;4358:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4340:63;;;4421:7;4413:30;;;;-1:-1:-1;;;4413:30:73;;;;;;;;;;;3353:697;-1:-1:-1;;;;;3561:21:73;;3553:52;;;;-1:-1:-1;;;3553:52:73;;;;;;;;;;;;3635:49;;-1:-1:-1;;;;;18677:32:159;;3635:49:73;;;18659:51:159;18726:18;;;18719:34;;;3615:17:73;;18632:18:159;;3635:49:73;;;-1:-1:-1;;3635:49:73;;;;;;;;;;;;;;-1:-1:-1;;;;;3635:49:73;-1:-1:-1;;;3635:49:73;;;;-1:-1:-1;;3718:50:73;3732:5;-1:-1:-1;3635:49:73;3748:19;3718:13;:50::i;:::-;3694:74;;3851:8;:15;3870:1;3851:20;3847:33;;3873:7;;;;3847:33;3943:8;:15;3962:2;3943:21;:53;;;;;3979:8;3968:28;;;;;;;;;;;;:::i;:::-;3939:66;;;3998:7;;;;3939:66;4022:21;;-1:-1:-1;;;4022:21:73;;;;;;;;;;;8682:983:76;8891:20;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8891:20:76;-1:-1:-1;;;;;;;;;;;8927:31:76;9017:10;:8;:10::i;:::-;8995:32;;9037:19;9059:17;:15;:17::i;:::-;9037:39;;9094:564;;;;;;;;9140:16;-1:-1:-1;;;;;9094:564:76;;;;;9182:10;9094:564;;;;9241:16;9224:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;9094:564;;;;9284:10;9094:564;;;;9321:1;:13;;;9094:564;;;;9378:11;9361:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;9094:564;;;;9427:11;-1:-1:-1;;;;;9094:564:76;;;;;9495:1;:16;;;;;;;;;;-1:-1:-1;;;;;9495:16:76;9478:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;9094:564;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9635:11;9618:29;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9618:29:76;;;;;;;;;9094:564;;9087:571;8682:983;-1:-1:-1;;;;;;;;8682:983:76:o;10078:513::-;10303:15;10334:17;10400:13;10415:4;10425:1;10354:82;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10354:82:76;;;;;;;;;;;;;;-1:-1:-1;;;;;10354:82:76;-1:-1:-1;;;10354:82:76;;;;-1:-1:-1;;10470:63:76;880:42;10496:9;10354:82;10513:19;10470:13;:63::i;:::-;10446:87;;10564:8;10553:31;;;;;;;;;;;;:::i;5435:258:71:-;5532:12;5556:26;5596:11;5609:5;5616:6;5585:38;;;;;;;;;-1:-1:-1;;;;;24749:32:159;;;;24731:51;;-1:-1:-1;;;;;24818:31:159;;;24813:2;24798:18;;24791:59;24886:31;24881:2;24866:18;;24859:59;24719:2;24704:18;;24533:391;5585:38:71;;;;;;;;;;;;;5556:67;;5640:46;411:1;5672:13;5640;:46::i;4917:317:74:-;5122:12;5169:10;:8;:10::i;:::-;-1:-1:-1;;;;;5157:28:74;;5186:6;5194:5;5201:4;5207:19;5157:70;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5157:70:74;;;;;;;;;;;;:::i;11543:202:76:-;11664:14;-1:-1:-1;;;;;;;;;;;11622:39:76;;:56;;-1:-1:-1;;;;;;11622:56:76;;-1:-1:-1;;;;;11622:56:76;;;;;;;11693:45;;4071:32:159;;;4053:51;;11693:45:76;;4041:2:159;4026:18;11693:45:76;;;;;;;;11543:202;:::o;2727:456:71:-;2958:12;2986:25;3007:3;2986:20;:25::i;:::-;3050:61;;;28321:10:159;28309:23;;3050:61:71;;;28291:42:159;28376:14;;28369:22;28349:18;;;28342:50;;;;-1:-1:-1;;;;;28428:31:159;;;28408:18;;;28401:59;28496:31;;28476:18;;;28469:59;28572:14;;28565:22;28544:19;;;28537:51;28637:4;28625:17;;28604:19;;;28597:46;-1:-1:-1;;;;;28680:47:159;;28659:19;;;28652:76;3021:26:71;;28263:19:159;;3050:61:71;;;;;;;;;;;;3021:90;;3128:48;178:1;3162:13;3128;:48::i;:::-;3121:55;2727:456;-1:-1:-1;;;;;;;;;2727:456:71:o;9071:205:48:-;9129:30;;3147:66;9186:27;8819:122;2733:880:74;6929:20:48;:18;:20::i;:::-;-1:-1:-1;;;;;2931:23:74;::::1;2923:54;;;;-1:-1:-1::0;;;2923:54:74::1;;;;;;;;;;;;-1:-1:-1::0;;;;;2995:19:74;::::1;2987:50;;;;-1:-1:-1::0;;;2987:50:74::1;;;;;;;;;;;;-1:-1:-1::0;;;;;3055:22:74;::::1;3047:53;;;;-1:-1:-1::0;;;3047:53:74::1;;;;;;;;;;;;-1:-1:-1::0;;;;;3118:21:74;::::1;3110:52;;;;-1:-1:-1::0;;;3110:52:74::1;;;;;;;;;;;;3173:32;:30;:32::i;:::-;3215:24;:22;:24::i;:::-;3249:17;:15;:17::i;:::-;2014:29:::0;3277:41;;-1:-1:-1;;;;;;3277:41:74::1;-1:-1:-1::0;;;;;3277:41:74;::::1;;::::0;;3367:42:::1;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;3367:13:74::1;:42::i;:::-;3439:37;2443:4:46;3470:5:74::0;3439:10:::1;:37::i;:::-;;3486:35;-1:-1:-1::0;;;;;;;;;;;3512:8:74::1;3486:10;:35::i;:::-;;3531:32;-1:-1:-1::0;;;;;;;;;;;3557:5:74::1;3531:10;:32::i;:::-;;3573:33;-1:-1:-1::0;;;;;;;;;;;3598:7:74::1;3573:10;:33::i;:::-;;2733:880:::0;;;;:::o;1914:207:73:-;6929:20:48;:18;:20::i;:::-;-1:-1:-1;;;;;2010:23:73;::::1;2002:54;;;;-1:-1:-1::0;;;2002:54:73::1;;;;;;;;;;;;2105:9:::0;1433:36;2066:26:::1;:48:::0;;-1:-1:-1;;;;;;2066:48:73::1;-1:-1:-1::0;;;;;2066:48:73;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;1914:207:73:o;2637:290:77:-;6929:20:48;:18;:20::i;:::-;2746:15:77::1;-1:-1:-1::0;;;;;2746:20:77::1;2765:1;2746:20:::0;2738:50:::1;;;;-1:-1:-1::0;;;2738:50:77::1;;;;;;;;;;;;2163:44:::0;2886:34;;-1:-1:-1;;2886:34:77::1;-1:-1:-1::0;;;;;2886:34:77;;;::::1;::::0;;;::::1;::::0;;2637:290::o;2779:656:75:-;6929:20:48;:18;:20::i;:::-;2886:11:75;;-1:-1:-1;;;;;2886:25:75::1;2878:56;;;;-1:-1:-1::0;;;2878:56:75::1;;;;;;;;;;;;2952:21;::::0;::::1;::::0;-1:-1:-1;;;;;2952:35:75::1;2944:66;;;;-1:-1:-1::0;;;2944:66:75::1;;;;;;;;;;;;3028:25;::::0;::::1;::::0;-1:-1:-1;;;;;3028:39:75::1;3020:70;;;;-1:-1:-1::0;;;3020:70:75::1;;;;;;;;;;;;3186:11:::0;;-1:-1:-1;;;;;;;;;;;3177:20:75;;3229:24:::1;::::0;;::::1;::::0;3207:46:::1;;-1:-1:-1::0;;;;;;;3177:20:75;;::::1;::::0;::::1;3207:46:::0;-1:-1:-1;;;;;;3207:46:75;;;;;;;;;;::::1;::::0;;3282:21:::1;::::0;;::::1;::::0;3263:16;:40;;;;::::1;-1:-1:-1::0;;;;;;3263:40:75;;::::1;::::0;;;::::1;::::0;;3336:25:::1;::::0;::::1;::::0;-1:-1:-1;;;;;;;;;;;3313:48:75;;-1:-1:-1;;;;;;3371:16:75;3313:48;;;::::1;3371:16:::0;-1:-1:-1;;;3371:16:75::1;::::0;;;3403:25;;-1:-1:-1;445:41:159;;1850:38:75;;3403:25:::1;::::0;418:18:159;3403:25:75::1;;;;;;;2868:567;2779:656:::0;:::o;4035:348:47:-;4121:4;-1:-1:-1;;;;;;;;;;;4121:4:47;4241:31;4258:4;4264:7;4241:16;:31::i;:::-;4226:46;;4286:7;4282:71;;;4309:14;:20;;;;;;;;;;:33;;4334:7;4309:24;:33::i;:::-;;4369:7;4035:348;-1:-1:-1;;;;4035:348:47:o;4486:353::-;4573:4;-1:-1:-1;;;;;;;;;;;4573:4:47;4693:32;4711:4;4717:7;4693:17;:32::i;:::-;4678:47;;4739:7;4735:74;;;4762:14;:20;;;;;;;;;;:36;;4790:7;4762:27;:36::i;3478:178:51:-;2226:16;:14;:16::i;:::-;-1:-1:-1;;;;;;;;;;;3595:17:51;;-1:-1:-1;;3595:17:51::1;::::0;;3627:22:::1;966:10:50::0;3636:12:51::1;3627:22;::::0;-1:-1:-1;;;;;4071:32:159;;;4053:51;;4041:2;4026:18;3627:22:51::1;3907:203:159::0;4578:312:49;4658:4;-1:-1:-1;;;;;4667:6:49;4650:23;;;:120;;;4764:6;-1:-1:-1;;;;;4728:42:49;:32;:30;:32::i;:::-;-1:-1:-1;;;;;4728:42:49;;;4650:120;4633:251;;;4844:29;;-1:-1:-1;;;4844:29:49;;;;;;;;;;;5365:104:74;2443:4:46;3272:16;2443:4;3272:10;:16::i;6032:538:49:-;6149:17;-1:-1:-1;;;;;6131:50:49;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6131:52:49;;;;;;;;-1:-1:-1;;6131:52:49;;;;;;;;;;;;:::i;:::-;;;6127:437;;6493:60;;-1:-1:-1;;;6493:60:49;;-1:-1:-1;;;;;4071:32:159;;6493:60:49;;;4053:51:159;4026:18;;6493:60:49;;;;;;;;6127:437;-1:-1:-1;;;;;;;;;;;6225:40:49;;6221:120;;6292:34;;-1:-1:-1;;;6292:34:49;;;;;2193:25:159;;;2166:18;;6292:34:49;2047:177:159;6221:120:49;6354:54;6384:17;6403:4;6354:29;:54::i;7700:236:71:-;7834:22;;;28939:10:159;28927:23;;7834:22:71;;;28909:42:159;-1:-1:-1;;;;;28987:31:159;;28967:18;;;28960:59;7834:22:71;;;;;;;;;7781:12;28882:18:159;;;7834:22:71;;;7781:12;7873:56;615:2;7834:22;7873:13;:56::i;5007:213:49:-;5081:4;-1:-1:-1;;;;;5090:6:49;5073:23;;5069:145;;5174:29;;-1:-1:-1;;;5174:29:49;;;;;;;;;;;8178:245:71;8317:24;;;29232:10:159;29220:23;;8317:24:71;;;29202:42:159;-1:-1:-1;;;;;29280:47:159;;29260:18;;;29253:75;8317:24:71;;;;;;;;;8264:12;29175:18:159;;;8317:24:71;;;8264:12;8358:58;670:2;8317:24;8358:13;:58::i;9770:156:75:-;-1:-1:-1;;;;;;;;;;;9830:46:75;;-1:-1:-1;;;;9830:46:75;-1:-1:-1;;;9830:46:75;;;;;;;;;;;;;9891:28;;445:41:159;;;9891:28:75;;433:2:159;418:18;9891:28:75;305:187:159;3170:176:51;1979:19;:17;:19::i;:::-;-1:-1:-1;;;;;;;;;;;3288:16:51;;-1:-1:-1;;3288:16:51::1;3300:4;3288:16;::::0;;3319:20:::1;966:10:50::0;3326:12:51::1;887:96:50::0;13073:156:45;13147:7;13197:22;13201:3;13213:5;13197:3;:22::i;5940:235:71:-;6073:23;;;-1:-1:-1;;;;;29523:31:159;;6073:23:71;;;29505:50:159;29598:14;;29591:22;29571:18;;;29564:50;6073:23:71;;;;;;;;;6020:12;29478:18:159;;;6073:23:71;;;6020:12;6113:55;462:1;6073:23;6113:13;:55::i;10645:218:76:-;10743:1;10714:17;:15;:17::i;:::-;-1:-1:-1;;;;;10714:31:76;;10706:64;;;;-1:-1:-1;;;10706:64:76;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10788:36:76;;:41;10780:76;;;;-1:-1:-1;;;10780:76:76;;;;;;;;;;;11232:156;-1:-1:-1;;;;;;;;;;;11294:42:76;;-1:-1:-1;;11294:42:76;;;;;;;;;;11351:30;;445:41:159;;;11351:30:76;;433:2:159;418:18;11351:30:76;305:187:159;13769:273:45;13832:16;13860:22;13885:19;13893:3;13885:7;:19::i;12616:115::-;12679:7;12705:19;12713:3;5393:18;;5311:107;9193:455:75;9285:1;9256:17;:15;:17::i;:::-;-1:-1:-1;;;;;9256:31:75;;9248:64;;;;-1:-1:-1;;;9248:64:75;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;9406:9:75;-1:-1:-1;;;;;;;;;;;1850:38:75;-1:-1:-1;;;9406:9:75;;;;9398:36;;;;-1:-1:-1;;;9398:36:75;;;;;;;;;;;;9452:6;;;;;-1:-1:-1;;;;;9452:6:75;9444:51;;;;-1:-1:-1;;;9444:51:75;;;;;;;;;;;;9513:16;;;;-1:-1:-1;;;;;9513:16:75;9505:61;;;;-1:-1:-1;;;9505:61:75;;;;;;;;;;;;9584:20;;;;-1:-1:-1;;;;;9584:20:75;9576:65;;;;-1:-1:-1;;;9576:65:75;;;;;;;;;;;4429:197:46;4517:22;4525:4;4531:7;4517;:22::i;:::-;4512:108;;4562:47;;-1:-1:-1;;;4562:47:46;;-1:-1:-1;;;;;18677:32:159;;4562:47:46;;;18659:51:159;18726:18;;;18719:34;;;18632:18;;4562:47:46;18485:274:159;15994:202:71;16084:12;2156:1;16164:8;16157:16;;16175:13;16115:74;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16108:81;;15994:202;;;;:::o;17836:121::-;17908:16;17920:3;17908:11;:16::i;:::-;17945:3;17900:50;;;;;-1:-1:-1;;;17900:50:71;;31331:4:159;31319:17;;;17900:50:71;;;31301:36:159;31274:18;;17900:50:71;31159:184:159;7082:141:48;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;-1:-1:-1;;;7189:17:48;;;;;;;;;;;1544:75:47;6929:20:48;:18;:20::i;6766:318:46:-;-1:-1:-1;;;;;;;;;;;6849:30:46;6946:18;6959:4;6946:12;:18::i;:::-;6974:8;:14;;;;;;;;;;;:24;;:36;;;7025:52;6918:46;;-1:-1:-1;7001:9:46;;6918:46;;6983:4;;7025:52;;6974:8;7025:52;6839:245;;6766:318;;:::o;7318:387::-;7395:4;-1:-1:-1;;;;;;;;;;;7485:22:46;7493:4;7499:7;7485;:22::i;:::-;7480:219;;7523:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7523:31:46;;;;;;;;;:38;;-1:-1:-1;;7523:38:46;7557:4;7523:38;;;7607:12;966:10:50;;887:96;7607:12:46;-1:-1:-1;;;;;7580:40:46;7598:7;-1:-1:-1;;;;;7580:40:46;7592:4;7580:40;;;;;;;;;;7641:4;7634:11;;;;;7480:219;7683:5;7676:12;;;;;11418:150:45;11488:4;11511:50;11516:3;-1:-1:-1;;;;;11536:23:45;;11511:4;:50::i;7942:388:46:-;8020:4;-1:-1:-1;;;;;;;;;;;8109:22:46;8117:4;8123:7;8109;:22::i;:::-;8105:219;;;8181:5;8147:14;;;;;;;;;;;-1:-1:-1;;;;;8147:31:46;;;;;;;;;;:39;;-1:-1:-1;;8147:39:46;;;8205:40;966:10:50;;8147:14:46;;8205:40;;8181:5;8205:40;8266:4;8259:11;;;;;11736:156:45;11809:4;11832:53;11840:3;-1:-1:-1;;;;;11860:23:45;;11832:7;:53::i;2909:126:51:-;-1:-1:-1;;;;;;;;;;;2625:9:51;;;2967:62;;3003:15;;-1:-1:-1;;;3003:15:51;;;;;;;;;;;1441:138:26;1493:7;-1:-1:-1;;;;;;;;;;;1519:47:26;1899:163:39;2264:344:26;2355:37;2374:17;2355:18;:37::i;:::-;2407:36;;-1:-1:-1;;;;;2407:36:26;;;;;;;;2458:11;;:15;2454:148;;2489:53;2518:17;2537:4;2489:28;:53::i;2454:148::-;2573:18;:16;:18::i;5760:118:45:-;5827:7;5853:3;:11;;5865:5;5853:18;;;;;;;;:::i;:::-;;;;;;;;;5846:25;;5760:118;;;;:::o;6418:109::-;6474:16;6509:3;:11;;6502:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6418:109;;;:::o;1115:105:71:-;1166:4;774:1;1189:10;;;;;;;:24;;-1:-1:-1;888:1:71;1203:10;;;;;1182:31;1115:105;-1:-1:-1;;1115:105:71:o;8485:120:48:-;8535:4;8558:26;:24;:26::i;:::-;:40;-1:-1:-1;;;8558:40:48;;;;;;-1:-1:-1;8485:120:48:o;2497:406:45:-;2560:4;5197:21;;;:14;;;:21;;;;;;2576:321;;-1:-1:-1;2618:23:45;;;;;;;;:11;:23;;;;;;;;;;;;;2800:18;;2776:21;;;:14;;;:21;;;;;;:42;;;;2832:11;;2576:321;-1:-1:-1;2881:5:45;2874:12;;3071:1368;3137:4;3266:21;;;:14;;;:21;;;;;;3302:13;;3298:1135;;3669:18;3690:12;3701:1;3690:8;:12;:::i;:::-;3736:18;;3669:33;;-1:-1:-1;3716:17:45;;3736:22;;3757:1;;3736:22;:::i;:::-;3716:42;;3791:9;3777:10;:23;3773:378;;3820:17;3840:3;:11;;3852:9;3840:22;;;;;;;;:::i;:::-;;;;;;;;;3820:42;;3987:9;3961:3;:11;;3973:10;3961:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:35;;;;4100:25;;;:14;;;:25;;;;;:36;;;3773:378;4229:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4332:3;:14;;:21;4347:5;4332:21;;;;;;;;;;;4325:28;;;4375:4;4368:11;;;;;;;1671:281:26;1748:17;-1:-1:-1;;;;;1748:29:26;;1781:1;1748:34;1744:119;;1805:47;;-1:-1:-1;;;1805:47:26;;-1:-1:-1;;;;;4071:32:159;;1805:47:26;;;4053:51:159;4026:18;;1805:47:26;3907:203:159;1744:119:26;1928:17;-1:-1:-1;;;;;;;;;;;1872:47:26;1899:163:39;3916:253:32;3999:12;4024;4038:23;4065:6;-1:-1:-1;;;;;4065:19:32;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;6113:122:26:-;6163:9;:13;6159:70;;6199:19;;-1:-1:-1;;;6199:19:26;;;;;;;;;;;4437:582:32;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4857:17;;:22;:49;;;;-1:-1:-1;;;;;;4883:18:32;;;:23;4857:49;4853:119;;;4933:24;;-1:-1:-1;;;4933:24:32;;-1:-1:-1;;;;;4071:32:159;;4933:24:32;;;4053:51:159;4026:18;;4933:24:32;3907:203:159;4853:119:32;-1:-1:-1;4992:10:32;4985:17;;5559:434;5690:17;;:21;5686:301;;5894:10;5888:17;5881:4;5869:10;5865:21;5858:48;5686:301;5957:19;;-1:-1:-1;;;5957:19:32;;;;;;;;;;;14:286:159;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:159;;209:43;;199:71;;266:1;263;256:12;497:173;565:20;;-1:-1:-1;;;;;614:31:159;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:171::-;742:20;;-1:-1:-1;;;;;791:30:159;;781:41;;771:69;;836:1;833;826:12;851:187;973:6;1006:2;994:15;;991:24;-1:-1:-1;988:44:159;;;1028:1;1025;1018:12;1043:999;1220:6;1228;1236;1244;1252;1260;1268;1321:3;1309:9;1300:7;1296:23;1292:33;1289:53;;;1338:1;1335;1328:12;1289:53;1361:29;1380:9;1361:29;:::i;:::-;1351:39;-1:-1:-1;1459:2:159;1444:18;;1431:32;;-1:-1:-1;1560:2:159;1545:18;;1532:32;;-1:-1:-1;1609:38:159;1643:2;1628:18;;1609:38;:::i;:::-;1599:48;-1:-1:-1;1720:3:159;1705:19;;1692:33;;-1:-1:-1;1770:38:159;1803:3;1788:19;;1770:38;:::i;:::-;1760:48;;1859:3;1848:9;1844:19;1831:33;-1:-1:-1;;;;;1879:6:159;1876:30;1873:50;;;1919:1;1916;1909:12;1873:50;1942:94;2028:7;2019:6;2008:9;2004:22;1942:94;:::i;:::-;1932:104;;;1043:999;;;;;;;;;;:::o;2229:167::-;2301:5;2346:2;2337:6;2332:3;2328:16;2324:25;2321:45;;;2362:1;2359;2352:12;2321:45;-1:-1:-1;2384:6:159;2229:167;-1:-1:-1;2229:167:159:o;2401:525::-;2516:6;2524;2532;2585:2;2573:9;2564:7;2560:23;2556:32;2553:52;;;2601:1;2598;2591:12;2553:52;2624:28;2642:9;2624:28;:::i;:::-;2614:38;;2671:37;2704:2;2693:9;2689:18;2671:37;:::i;:::-;2661:47;;2759:2;2748:9;2744:18;2731:32;-1:-1:-1;;;;;2778:6:159;2775:30;2772:50;;;2818:1;2815;2808:12;2772:50;2841:79;2912:7;2903:6;2892:9;2888:22;2841:79;:::i;:::-;2831:89;;;2401:525;;;;;:::o;3072:299::-;3124:3;3162:5;3156:12;3189:6;3184:3;3177:19;3245:6;3238:4;3231:5;3227:16;3220:4;3215:3;3211:14;3205:47;3297:1;3290:4;3281:6;3276:3;3272:16;3268:27;3261:38;3360:4;3353:2;3349:7;3344:2;3336:6;3332:15;3328:29;3323:3;3319:39;3315:50;3308:57;;;3072:299;;;;:::o;3376:228::-;3523:2;3512:9;3505:21;3486:4;3543:55;3594:2;3583:9;3579:18;3571:6;3543:55;:::i;3609:184::-;3667:6;3720:2;3708:9;3699:7;3695:23;3691:32;3688:52;;;3736:1;3733;3726:12;3688:52;3759:28;3777:9;3759:28;:::i;4115:300::-;4183:6;4191;4244:2;4232:9;4223:7;4219:23;4215:32;4212:52;;;4260:1;4257;4250:12;4212:52;4305:23;;;-1:-1:-1;4371:38:159;4405:2;4390:18;;4371:38;:::i;:::-;4361:48;;4115:300;;;;;:::o;4420:163::-;4487:20;;4547:10;4536:22;;4526:33;;4516:61;;4573:1;4570;4563:12;4588:118;4674:5;4667:13;4660:21;4653:5;4650:32;4640:60;;4696:1;4693;4686:12;4711:188;4779:20;;-1:-1:-1;;;;;4828:46:159;;4818:57;;4808:85;;4889:1;4886;4879:12;4904:969;5049:6;5057;5065;5073;5081;5089;5097;5150:3;5138:9;5129:7;5125:23;5121:33;5118:53;;;5167:1;5164;5157:12;5118:53;5190:28;5208:9;5190:28;:::i;:::-;5180:38;;5237:37;5270:2;5259:9;5255:18;5237:37;:::i;:::-;5227:47;;5293:37;5326:2;5315:9;5311:18;5293:37;:::i;:::-;5283:47;;5380:2;5369:9;5365:18;5352:32;5393:28;5415:5;5393:28;:::i;:::-;5440:5;-1:-1:-1;5497:3:159;5482:19;;5469:33;5546:4;5533:18;;5521:31;;5511:59;;5566:1;5563;5556:12;5511:59;5589:7;-1:-1:-1;5615:39:159;5649:3;5634:19;;5615:39;:::i;:::-;5605:49;;5705:3;5694:9;5690:19;5677:33;-1:-1:-1;;;;;5725:6:159;5722:30;5719:50;;;5765:1;5762;5755:12;5719:50;5788:79;5859:7;5850:6;5839:9;5835:22;5788:79;:::i;5878:226::-;5937:6;5990:2;5978:9;5969:7;5965:23;5961:32;5958:52;;;6006:1;6003;5996:12;5958:52;-1:-1:-1;6051:23:159;;5878:226;-1:-1:-1;5878:226:159:o;6109:127::-;6170:10;6165:3;6161:20;6158:1;6151:31;6201:4;6198:1;6191:15;6225:4;6222:1;6215:15;6241:252;6313:2;6307:9;6355:3;6343:16;;-1:-1:-1;;;;;6374:34:159;;6410:22;;;6371:62;6368:88;;;6436:18;;:::i;:::-;6472:2;6465:22;6241:252;:::o;6498:275::-;6569:2;6563:9;6634:2;6615:13;;-1:-1:-1;;6611:27:159;6599:40;;-1:-1:-1;;;;;6654:34:159;;6690:22;;;6651:62;6648:88;;;6716:18;;:::i;:::-;6752:2;6745:22;6498:275;;-1:-1:-1;6498:275:159:o;6778:1028::-;6921:6;6929;6937;6945;6953;6961;6969;7013:9;7004:7;7000:23;7043:3;7039:2;7035:12;7032:32;;;7060:1;7057;7050:12;7032:32;7083:29;7102:9;7083:29;:::i;:::-;7073:39;;7131:38;7165:2;7154:9;7150:18;7131:38;:::i;:::-;7121:48;;7188:38;7222:2;7211:9;7207:18;7188:38;:::i;:::-;7178:48;;7245:38;7279:2;7268:9;7264:18;7245:38;:::i;:::-;7235:48;;7302:39;7336:3;7325:9;7321:19;7302:39;:::i;:::-;7292:49;;7360:38;7393:3;7382:9;7378:19;7360:38;:::i;:::-;7350:48;-1:-1:-1;7433:3:159;-1:-1:-1;;7414:17:159;;7410:27;7407:47;;;7450:1;7447;7440:12;7407:47;;7476:22;;:::i;:::-;7521:39;7555:3;7544:9;7540:19;7521:39;:::i;:::-;7514:5;7507:54;7593:38;7626:3;7615:9;7611:19;7593:38;:::i;:::-;7588:2;7581:5;7577:14;7570:62;7664:39;7698:3;7687:9;7683:19;7664:39;:::i;:::-;7659:2;7652:5;7648:14;7641:63;7736:39;7770:3;7759:9;7755:19;7736:39;:::i;:::-;7731:2;7724:5;7720:14;7713:63;7795:5;7785:15;;;6778:1028;;;;;;;;;;:::o;8116:186::-;8164:4;-1:-1:-1;;;;;8189:6:159;8186:30;8183:56;;;8219:18;;:::i;:::-;-1:-1:-1;8285:2:159;8264:15;-1:-1:-1;;8260:29:159;8291:4;8256:40;;8116:186::o;8307:769::-;8384:6;8392;8445:2;8433:9;8424:7;8420:23;8416:32;8413:52;;;8461:1;8458;8451:12;8413:52;8484:29;8503:9;8484:29;:::i;:::-;8474:39;;8564:2;8553:9;8549:18;8536:32;-1:-1:-1;;;;;8583:6:159;8580:30;8577:50;;;8623:1;8620;8613:12;8577:50;8646:22;;8699:4;8691:13;;8687:27;-1:-1:-1;8677:55:159;;8728:1;8725;8718:12;8677:55;8768:2;8755:16;8793:52;8809:35;8837:6;8809:35;:::i;:::-;8793:52;:::i;:::-;8868:6;8861:5;8854:21;8916:7;8911:2;8902:6;8898:2;8894:15;8890:24;8887:37;8884:57;;;8937:1;8934;8927:12;8884:57;8992:6;8987:2;8983;8979:11;8974:2;8967:5;8963:14;8950:49;9044:1;9039:2;9030:6;9023:5;9019:18;9015:27;9008:38;9065:5;9055:15;;;;;8307:769;;;;;:::o;9081:525::-;9196:6;9204;9212;9265:2;9253:9;9244:7;9240:23;9236:32;9233:52;;;9281:1;9278;9271:12;9233:52;9304:28;9322:9;9304:28;:::i;10105:186::-;10164:6;10217:2;10205:9;10196:7;10192:23;10188:32;10185:52;;;10233:1;10230;10223:12;10185:52;10256:29;10275:9;10256:29;:::i;10296:453::-;10403:6;10411;10464:2;10452:9;10443:7;10439:23;10435:32;10432:52;;;10480:1;10477;10470:12;10432:52;10503:28;10521:9;10503:28;:::i;:::-;10493:38;;10582:2;10571:9;10567:18;10554:32;-1:-1:-1;;;;;10601:6:159;10598:30;10595:50;;;10641:1;10638;10631:12;10595:50;10664:79;10735:7;10726:6;10715:9;10711:22;10664:79;:::i;:::-;10654:89;;;10296:453;;;;;:::o;10754:527::-;10870:6;10878;10886;10939:2;10927:9;10918:7;10914:23;10910:32;10907:52;;;10955:1;10952;10945:12;10907:52;10978:28;10996:9;10978:28;:::i;:::-;10968:38;;11025;11059:2;11048:9;11044:18;11025:38;:::i;11286:642::-;11411:6;11419;11427;11435;11488:3;11476:9;11467:7;11463:23;11459:33;11456:53;;;11505:1;11502;11495:12;11456:53;11528:29;11547:9;11528:29;:::i;:::-;11518:39;;11576:37;11609:2;11598:9;11594:18;11576:37;:::i;:::-;11566:47;-1:-1:-1;11682:2:159;11667:18;;11654:32;;-1:-1:-1;11761:2:159;11746:18;;11733:32;-1:-1:-1;;;;;11777:30:159;;11774:50;;;11820:1;11817;11810:12;11774:50;11843:79;11914:7;11905:6;11894:9;11890:22;11843:79;:::i;:::-;11833:89;;;11286:642;;;;;;;:::o;11933:884::-;12076:6;12084;12092;12100;12108;12116;12169:3;12157:9;12148:7;12144:23;12140:33;12137:53;;;12186:1;12183;12176:12;12137:53;12231:23;;;-1:-1:-1;12351:2:159;12336:18;;12323:32;;-1:-1:-1;12400:38:159;12434:2;12419:18;;12400:38;:::i;:::-;12390:48;-1:-1:-1;12511:2:159;12496:18;;12483:32;;-1:-1:-1;12560:38:159;12593:3;12578:19;;12560:38;:::i;:::-;12550:48;;12649:3;12638:9;12634:19;12621:33;-1:-1:-1;;;;;12669:6:159;12666:30;12663:50;;;12709:1;12706;12699:12;12663:50;12732:79;12803:7;12794:6;12783:9;12779:22;12732:79;:::i;:::-;12722:89;;;11933:884;;;;;;;;:::o;12822:495::-;12930:6;12938;12991:2;12979:9;12970:7;12966:23;12962:32;12959:52;;;13007:1;13004;12997:12;12959:52;13052:23;;;-1:-1:-1;13150:2:159;13135:18;;13122:32;-1:-1:-1;;;;;13166:30:159;;13163:50;;;13209:1;13206;13199:12;13322:346;13390:6;13398;13451:2;13439:9;13430:7;13426:23;13422:32;13419:52;;;13467:1;13464;13457:12;13419:52;-1:-1:-1;;13512:23:159;;;13632:2;13617:18;;;13604:32;;-1:-1:-1;13322:346:159:o;13673:637::-;13863:2;13875:21;;;13945:13;;13848:18;;;13967:22;;;13815:4;;14046:15;;;14020:2;14005:18;;;13815:4;14089:195;14103:6;14100:1;14097:13;14089:195;;;14168:13;;-1:-1:-1;;;;;14164:39:159;14152:52;;14233:2;14259:15;;;;14224:12;;;;14200:1;14118:9;14089:195;;;-1:-1:-1;14301:3:159;;13673:637;-1:-1:-1;;;;;13673:637:159:o;14550:728::-;14700:6;14708;14716;14724;14777:3;14765:9;14756:7;14752:23;14748:33;14745:53;;;14794:1;14791;14784:12;14745:53;14839:23;;;-1:-1:-1;14959:2:159;14944:18;;14931:32;;-1:-1:-1;15008:37:159;15041:2;15026:18;;15008:37;:::i;:::-;14998:47;;15096:2;15085:9;15081:18;15068:32;-1:-1:-1;;;;;15115:6:159;15112:30;15109:50;;;15155:1;15152;15145:12;15109:50;15178:94;15264:7;15255:6;15244:9;15240:22;15178:94;:::i;15579:347::-;15630:8;15640:6;15694:3;15687:4;15679:6;15675:17;15671:27;15661:55;;15712:1;15709;15702:12;15661:55;-1:-1:-1;15735:20:159;;-1:-1:-1;;;;;15767:30:159;;15764:50;;;15810:1;15807;15800:12;15764:50;15847:4;15839:6;15835:17;15823:29;;15899:3;15892:4;15883:6;15875;15871:19;15867:30;15864:39;15861:59;;;15916:1;15913;15906:12;15861:59;15579:347;;;;;:::o;15931:712::-;16021:6;16029;16037;16045;16098:2;16086:9;16077:7;16073:23;16069:32;16066:52;;;16114:1;16111;16104:12;16066:52;16154:9;16141:23;-1:-1:-1;;;;;16179:6:159;16176:30;16173:50;;;16219:1;16216;16209:12;16173:50;16258:58;16308:7;16299:6;16288:9;16284:22;16258:58;:::i;:::-;16335:8;;-1:-1:-1;16232:84:159;-1:-1:-1;;16423:2:159;16408:18;;16395:32;-1:-1:-1;;;;;16439:32:159;;16436:52;;;16484:1;16481;16474:12;16436:52;16523:60;16575:7;16564:8;16553:9;16549:24;16523:60;:::i;:::-;15931:712;;;;-1:-1:-1;16602:8:159;-1:-1:-1;;;;15931:712:159:o;16648:127::-;16709:10;16704:3;16700:20;16697:1;16690:31;16740:4;16737:1;16730:15;16764:4;16761:1;16754:15;16780:337;16886:4;16944:11;16931:25;17038:2;17034:7;17023:8;17007:14;17003:29;16999:43;16979:18;16975:68;16965:96;;17057:1;17054;17047:12;16965:96;17078:33;;;;;16780:337;-1:-1:-1;;16780:337:159:o;18764:127::-;18825:10;18820:3;18816:20;18813:1;18806:31;18856:4;18853:1;18846:15;18880:4;18877:1;18870:15;18896:125;18961:9;;;18982:10;;;18979:36;;;18995:18;;:::i;20055:271::-;20238:6;20230;20225:3;20212:33;20194:3;20264:16;;20289:13;;;20264:16;20055:271;-1:-1:-1;20055:271:159:o;20331:266::-;20419:6;20414:3;20407:19;20471:6;20464:5;20457:4;20452:3;20448:14;20435:43;-1:-1:-1;20523:1:159;20498:16;;;20516:4;20494:27;;;20487:38;;;;20579:2;20558:15;;;-1:-1:-1;;20554:29:159;20545:39;;;20541:50;;20331:266::o;20602:431::-;20815:2;20804:9;20797:21;20778:4;20841:61;20898:2;20887:9;20883:18;20875:6;20867;20841:61;:::i;:::-;20950:9;20942:6;20938:22;20933:2;20922:9;20918:18;20911:50;20978:49;21020:6;21012;21004;20978:49;:::i;21038:245::-;21105:6;21158:2;21146:9;21137:7;21133:23;21129:32;21126:52;;;21174:1;21171;21164:12;21126:52;21206:9;21200:16;21225:28;21247:5;21225:28;:::i;21498:229::-;21647:2;21643:15;;;;-1:-1:-1;;21639:53:159;21627:66;;21718:2;21709:12;;21498:229::o;21732:2607::-;22286:3;22275:9;22268:22;22299:54;22348:3;22337:9;22333:19;22324:6;22318:13;-1:-1:-1;;;;;3864:31:159;3852:44;;3798:104;22299:54;22408:4;22400:6;22396:17;22390:24;22384:3;22373:9;22369:19;22362:53;22249:4;22462;22454:6;22450:17;22444:24;22505:6;22499:3;22488:9;22484:19;22477:35;22535:62;22592:3;22581:9;22577:19;22563:12;22535:62;:::i;:::-;22521:76;;22652:4;22644:6;22640:17;22634:24;22628:3;22617:9;22613:19;22606:53;22714:4;22706:6;22702:17;22696:24;22690:3;22679:9;22675:19;22668:53;22770:4;22762:6;22758:17;22752:24;22848:3;22844:8;22832:9;22824:6;22820:22;22816:37;22807:6;22796:9;22792:22;22785:69;22877:51;22921:6;22905:14;22877:51;:::i;:::-;22863:65;;;22977:3;22969:6;22965:16;22959:23;22991:55;23041:3;23030:9;23026:19;23010:14;-1:-1:-1;;;;;3864:31:159;3852:44;;3798:104;22991:55;-1:-1:-1;23095:3:159;23083:16;;23077:23;23141:22;;;-1:-1:-1;;23137:37:159;23131:3;23116:19;;23109:66;23198:51;23145:6;23077:23;23198:51;:::i;:::-;23184:65;;;23298:3;23290:6;23286:16;23280:23;23372:3;23368:8;23356:9;23348:6;23344:22;23340:37;23334:3;23323:9;23319:19;23312:66;23401:51;23445:6;23429:14;23401:51;:::i;:::-;23387:65;;;23501:3;23493:6;23489:16;23483:23;23575:3;23571:8;23559:9;23551:6;23547:22;23543:37;23537:3;23526:9;23522:19;23515:66;23604:51;23648:6;23632:14;23604:51;:::i;:::-;23590:65;;;23704:3;23696:6;23692:16;23686:23;23778:3;23774:8;23762:9;23754:6;23750:22;23746:37;23740:3;23729:9;23725:19;23718:66;23804:51;23848:6;23832:14;23804:51;:::i;:::-;23793:62;;;23864:47;23905:4;23894:9;23890:20;23882:6;-1:-1:-1;;;;;9676:30:159;9664:43;;9611:102;23864:47;23949:19;;;23942:4;23927:20;;23920:49;3021:1;3009:14;;3056:4;3047:14;;15359:10;15348:22;;24081:4;24066:20;;15336:35;23978:53;-1:-1:-1;24125:22:159;;;24118:4;24103:20;;24096:52;3021:1;3009:14;;3056:4;3047:14;;24251:22;;;24244:4;24229:20;;24222:52;3021:1;3009:14;;24157:56;-1:-1:-1;3056:4:159;3047:14;;24283:50;21732:2607;-1:-1:-1;;;;;;21732:2607:159:o;24344:184::-;24414:6;24467:2;24455:9;24446:7;24442:23;24438:32;24435:52;;;24483:1;24480;24473:12;24435:52;-1:-1:-1;24506:16:159;;24344:184;-1:-1:-1;24344:184:159:o;24929:520::-;24999:5;25006:6;25066:3;25053:17;25152:2;25148:7;25137:8;25121:14;25117:29;25113:43;25093:18;25089:68;25079:96;;25171:1;25168;25161:12;25079:96;25199:33;;25303:4;25290:18;;;-1:-1:-1;25251:21:159;;-1:-1:-1;;;;;;25320:30:159;;25317:50;;;25363:1;25360;25353:12;25317:50;25417:6;25414:1;25410:14;25394;25390:35;25383:5;25379:47;25376:67;;;25439:1;25436;25429:12;25454:311;25542:19;;;25524:3;-1:-1:-1;;;;;25573:31:159;;25570:51;;;25617:1;25614;25607:12;25570:51;25653:6;25650:1;25646:14;25705:8;25698:5;25691:4;25686:3;25682:14;25669:45;25734:18;;;;25754:4;25730:29;;25454:311;-1:-1:-1;;;25454:311:159:o;25770:1533::-;26108:1;26104;26099:3;26095:11;26091:19;26083:6;26079:32;26068:9;26061:51;26148:6;26143:2;26132:9;26128:18;26121:34;26191:3;26186:2;26175:9;26171:18;26164:31;26042:4;26218:56;26269:3;26258:9;26254:19;26246:6;26218:56;:::i;:::-;26322:9;26314:6;26310:22;26305:2;26294:9;26290:18;26283:50;26368:6;26355:20;26411:1;26404:5;26401:12;26394:20;26426:2;26423:22;;;26441:1;26438;26431:12;26423:22;-1:-1:-1;26470:21:159;;26551:2;26539:15;;26526:29;26606:14;26602:27;;;-1:-1:-1;;26598:41:159;26574:66;;26564:94;;26654:1;26651;26644:12;26564:94;26682:31;;26794:2;26781:16;;;26736:21;-1:-1:-1;;;;;26809:30:159;;26806:50;;;26852:1;26849;26842:12;26806:50;26901:6;26885:14;26881:27;26872:7;26868:41;26865:61;;;26922:1;26919;26912:12;26865:61;26959:2;26954;26946:6;26942:15;26935:27;26985:59;27040:2;27032:6;27028:15;27020:6;27011:7;26985:59;:::i;:::-;26971:73;;;27087:67;27150:2;27142:6;27138:15;27130:6;27087:67;:::i;:::-;27199:6;27191;27187:19;27182:2;27174:6;27170:15;27163:44;27224:73;27290:6;27276:12;27262;27224:73;:::i;27308:685::-;27387:6;27440:2;27428:9;27419:7;27415:23;27411:32;27408:52;;;27456:1;27453;27446:12;27408:52;27489:9;27483:16;-1:-1:-1;;;;;27514:6:159;27511:30;27508:50;;;27554:1;27551;27544:12;27508:50;27577:22;;27630:4;27622:13;;27618:27;-1:-1:-1;27608:55:159;;27659:1;27656;27649:12;27608:55;27692:2;27686:9;27717:52;27733:35;27761:6;27733:35;:::i;27717:52::-;27792:6;27785:5;27778:21;27840:7;27835:2;27826:6;27822:2;27818:15;27814:24;27811:37;27808:57;;;27861:1;27858;27851:12;27808:57;27909:6;27904:2;27900;27896:11;27891:2;27884:5;27880:14;27874:42;27961:1;27936:18;;;27956:2;27932:27;27925:38;;;;27940:5;27308:685;-1:-1:-1;;;;27308:685:159:o;30572:211::-;30613:3;30651:5;30645:12;30695:6;30688:4;30681:5;30677:16;30672:3;30666:36;30757:1;30721:16;;30746:13;;;-1:-1:-1;30721:16:159;;30572:211;-1:-1:-1;30572:211:159:o;30788:366::-;31023:3;31001:16;;;-1:-1:-1;;;;;;30997:36:159;30985:49;;-1:-1:-1;;;;;;31063:31:159;;31059:1;31050:11;;31043:52;-1:-1:-1;31111:37:159;31145:1;31136:11;;31128:6;31111:37;:::i;31348:128::-;31415:9;;;31436:11;;;31433:37;;;31450:18;;:::i;31481:127::-;31542:10;31537:3;31533:20;31530:1;31523:31;31573:4;31570:1;31563:15;31597:4;31594:1;31587:15;31613:189;31742:3;31767:29;31792:3;31784:6;31767:29;:::i",
        "linkReferences": {},
        "immutableReferences": {
            "49949": [
                {
                    "start": 10202,
                    "length": 32
                },
                {
                    "start": 10243,
                    "length": 32
                },
                {
                    "start": 10606,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "CURATOR_ROLE()": "4a2cfb54",
        "DEFAULT_ADMIN_ROLE()": "a217fddf",
        "DLN_DESTINATION()": "b17081d7",
        "GUARDIAN_ROLE()": "24ea54f4",
        "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
        "bridgeErc20ViaDeBridge(address,uint256,uint256,address,uint256,uint64,(uint8,bytes,bytes32[])[2])": "07495840",
        "bridgeNativeViaDeBridge(uint256,uint256,address,uint256,uint64,(uint8,bytes,bytes32[]))": "7efccc5e",
        "bridgeRecipient()": "8cdadf48",
        "bridgeUsdcViaCctpV2(uint256,uint256,uint32,(uint8,bytes,bytes32[])[2])": "e7b70bd2",
        "cancelOrderByCloid(uint32,uint128,(uint8,bytes,bytes32[]))": "63e8d189",
        "cancelOrderByOid(uint32,uint64,(uint8,bytes,bytes32[]))": "4f2c42da",
        "cctpV2DestinationDomain()": "fceac4e6",
        "cctpV2MessageTransmitter()": "9c80c370",
        "cctpV2TokenMessenger()": "4926234a",
        "coreSystemAddress(uint64)": "0bb9f178",
        "deBridgeOrderAuthority()": "82f7fb07",
        "deBridgeTakeChainId()": "572eb210",
        "depositHypeToCore(uint256,(uint8,bytes,bytes32[]))": "86e14744",
        "depositTokenToCore(address,uint64,uint256,(uint8,bytes,bytes32[]))": "73edb66c",
        "disableCctpV2()": "96d0ee08",
        "disableDeBridge()": "de15fbdd",
        "enableCctpV2()": "6a4545be",
        "enableDeBridge()": "9a051a78",
        "getRoleAdmin(bytes32)": "248a9ca3",
        "getRoleMember(bytes32,uint256)": "9010d07c",
        "getRoleMemberCount(bytes32)": "ca15c873",
        "getRoleMembers(bytes32)": "a3246ad3",
        "grantRole(bytes32,address)": "2f2ff15d",
        "hasRole(bytes32,address)": "91d14854",
        "hypeTokenIndex()": "5576b0b7",
        "initialize(address,address,address,address,address,uint64,(address,uint32,address,address))": "2c491f17",
        "initializeDeBridge(uint256,address)": "1592855b",
        "isCctpV2Enabled()": "029d754d",
        "isDeBridgeEnabled()": "5a2f511c",
        "pause()": "8456cb59",
        "paused()": "5c975abb",
        "placeLimitBuyOrder(uint32,uint64,uint64,bool,uint8,uint128,(uint8,bytes,bytes32[]))": "17573846",
        "placeLimitSellOrder(uint32,uint64,uint64,bool,uint8,uint128,(uint8,bytes,bytes32[]))": "d450a6c6",
        "proxiableUUID()": "52d1902d",
        "receiveUsdcViaCctpV2(bytes,bytes)": "fe582621",
        "renounceRole(bytes32,address)": "36568abe",
        "revokeRole(bytes32,address)": "d547741f",
        "setDeBridgeOrderAuthority(address)": "58b43cd1",
        "subvault()": "b3ab252a",
        "supportsInterface(bytes4)": "01ffc9a7",
        "transferPerpToSpot(uint64,(uint8,bytes,bytes32[]))": "c226db55",
        "transferSpotToPerp(uint64,(uint8,bytes,bytes32[]))": "9526fd16",
        "unpause()": "3f4ba83a",
        "upgradeToAndCall(address,bytes)": "4f1ef286",
        "usdc()": "3e413bee",
        "withdrawHypeToEvm(uint64,(uint8,bytes,bytes32[]))": "5eb3f965",
        "withdrawTokenToEvm(uint64,uint64,(uint8,bytes,bytes32[]))": "0941a849"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BridgeApproveFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BridgeNotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CCTPv2Disabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeBridgeDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeBridgeNotInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyAttestation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyMessage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidChainId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMsgValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"value\",\"type\":\"uint8\"}],\"name\":\"InvalidTimeInForce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxFeeTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"CCTPv2StatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"curator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"minFinalityThreshold\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"CctpV2UsdcBridgeInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"curator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"attestationHash\",\"type\":\"bytes32\"}],\"name\":\"CctpV2UsdcMessageReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"orderAuthority\",\"type\":\"address\"}],\"name\":\"DeBridgeOrderAuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"DeBridgeStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"curator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"salt\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"giveToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"giveAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"takeToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takeChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"}],\"name\":\"DlnErc20BridgeInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"curator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"salt\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"giveAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"takeToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takeChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"}],\"name\":\"DlnNativeBridgeInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"curator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"HypeDepositedToCore\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"curator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"amount\",\"type\":\"uint64\"}],\"name\":\"HypeWithdrawnToEvm\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"curator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"asset\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"cloid\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"limitPx\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"sz\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"reduceOnly\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"tif\",\"type\":\"uint8\"}],\"name\":\"LimitBuyOrderPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"curator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"asset\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"cloid\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"limitPx\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"sz\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"reduceOnly\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"tif\",\"type\":\"uint8\"}],\"name\":\"LimitSellOrderPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"curator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"asset\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"cloid\",\"type\":\"uint128\"}],\"name\":\"OrderCancelledByCloid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"curator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"asset\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"oid\",\"type\":\"uint64\"}],\"name\":\"OrderCancelledByOid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"curator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"ntl\",\"type\":\"uint64\"}],\"name\":\"PerpToSpotTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"curator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"ntl\",\"type\":\"uint64\"}],\"name\":\"SpotToPerpTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"curator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"tokenIndex\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"systemAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenDepositedToCore\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"curator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"tokenIndex\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"amount\",\"type\":\"uint64\"}],\"name\":\"TokenWithdrawnToEvm\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CURATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DLN_DESTINATION\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GUARDIAN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"giveTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"giveAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takeAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"takeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"salt\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"enum IVerifier.VerificationType\",\"name\":\"verificationType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"verificationData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IVerifier.VerificationPayload[2]\",\"name\":\"verificationPayloads\",\"type\":\"tuple[2]\"}],\"name\":\"bridgeErc20ViaDeBridge\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"giveAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takeAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"takeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"salt\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"enum IVerifier.VerificationType\",\"name\":\"verificationType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"verificationData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IVerifier.VerificationPayload\",\"name\":\"verificationPayload\",\"type\":\"tuple\"}],\"name\":\"bridgeNativeViaDeBridge\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderId\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridgeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"minFinalityThreshold\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"enum IVerifier.VerificationType\",\"name\":\"verificationType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"verificationData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IVerifier.VerificationPayload[2]\",\"name\":\"verificationPayloads\",\"type\":\"tuple[2]\"}],\"name\":\"bridgeUsdcViaCctpV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"asset\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"cloid\",\"type\":\"uint128\"},{\"components\":[{\"internalType\":\"enum IVerifier.VerificationType\",\"name\":\"verificationType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"verificationData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IVerifier.VerificationPayload\",\"name\":\"verificationPayload\",\"type\":\"tuple\"}],\"name\":\"cancelOrderByCloid\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"asset\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"oid\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"enum IVerifier.VerificationType\",\"name\":\"verificationType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"verificationData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IVerifier.VerificationPayload\",\"name\":\"verificationPayload\",\"type\":\"tuple\"}],\"name\":\"cancelOrderByOid\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cctpV2DestinationDomain\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cctpV2MessageTransmitter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cctpV2TokenMessenger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"tokenIndex\",\"type\":\"uint64\"}],\"name\":\"coreSystemAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deBridgeOrderAuthority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deBridgeTakeChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"enum IVerifier.VerificationType\",\"name\":\"verificationType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"verificationData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IVerifier.VerificationPayload\",\"name\":\"verificationPayload\",\"type\":\"tuple\"}],\"name\":\"depositHypeToCore\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"tokenIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"enum IVerifier.VerificationType\",\"name\":\"verificationType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"verificationData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IVerifier.VerificationPayload\",\"name\":\"verificationPayload\",\"type\":\"tuple\"}],\"name\":\"depositTokenToCore\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableCctpV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableDeBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableCctpV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableDeBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hypeTokenIndex\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"subvault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"curator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bridgeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"hypeTokenIndex_\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"usdc\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"tokenMessenger\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"messageTransmitter\",\"type\":\"address\"}],\"internalType\":\"struct CctpV2BridgeModule.CctpV2Config\",\"name\":\"cctpV2Config\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"takeChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"orderAuthority\",\"type\":\"address\"}],\"name\":\"initializeDeBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isCctpV2Enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDeBridgeEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"asset\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"limitPx\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"sz\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"reduceOnly\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"tif\",\"type\":\"uint8\"},{\"internalType\":\"uint128\",\"name\":\"cloid\",\"type\":\"uint128\"},{\"components\":[{\"internalType\":\"enum IVerifier.VerificationType\",\"name\":\"verificationType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"verificationData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IVerifier.VerificationPayload\",\"name\":\"verificationPayload\",\"type\":\"tuple\"}],\"name\":\"placeLimitBuyOrder\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"asset\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"limitPx\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"sz\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"reduceOnly\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"tif\",\"type\":\"uint8\"},{\"internalType\":\"uint128\",\"name\":\"cloid\",\"type\":\"uint128\"},{\"components\":[{\"internalType\":\"enum IVerifier.VerificationType\",\"name\":\"verificationType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"verificationData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IVerifier.VerificationPayload\",\"name\":\"verificationPayload\",\"type\":\"tuple\"}],\"name\":\"placeLimitSellOrder\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attestation\",\"type\":\"bytes\"}],\"name\":\"receiveUsdcViaCctpV2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"orderAuthority\",\"type\":\"address\"}],\"name\":\"setDeBridgeOrderAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subvault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"ntl\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"enum IVerifier.VerificationType\",\"name\":\"verificationType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"verificationData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IVerifier.VerificationPayload\",\"name\":\"verificationPayload\",\"type\":\"tuple\"}],\"name\":\"transferPerpToSpot\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"ntl\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"enum IVerifier.VerificationType\",\"name\":\"verificationType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"verificationData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IVerifier.VerificationPayload\",\"name\":\"verificationPayload\",\"type\":\"tuple\"}],\"name\":\"transferSpotToPerp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"amount\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"enum IVerifier.VerificationType\",\"name\":\"verificationType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"verificationData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IVerifier.VerificationPayload\",\"name\":\"verificationPayload\",\"type\":\"tuple\"}],\"name\":\"withdrawHypeToEvm\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"tokenIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"amount\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"enum IVerifier.VerificationType\",\"name\":\"verificationType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"verificationData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IVerifier.VerificationPayload\",\"name\":\"verificationPayload\",\"type\":\"tuple\"}],\"name\":\"withdrawTokenToEvm\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"CCTPv2StatusUpdated(bool)\":{\"params\":{\"enabled\":\"True if CCTPv2 is enabled, false otherwise.\"}},\"CctpV2UsdcBridgeInitiated(address,uint32,uint256,uint256,uint32,address)\":{\"params\":{\"amount\":\"The USDC amount to bridge.\",\"curator\":\"The curator that initiated the action.\",\"destinationDomain\":\"The destination domain.\",\"maxFee\":\"The max fee allowed.\",\"minFinalityThreshold\":\"The minimum finality threshold.\",\"recipient\":\"The destination recipient address on the destination domain.\"}},\"CctpV2UsdcMessageReceived(address,bytes32,bytes32)\":{\"params\":{\"attestationHash\":\"The keccak256 hash of the attestation payload.\",\"curator\":\"The curator that initiated the action.\",\"messageHash\":\"The keccak256 hash of the message payload.\"}},\"DeBridgeOrderAuthorityUpdated(address)\":{\"params\":{\"orderAuthority\":\"The new order authority address.\"}},\"DeBridgeStatusUpdated(bool)\":{\"params\":{\"enabled\":\"True if DeBridge is enabled, false otherwise.\"}},\"DlnErc20BridgeInitiated(address,uint64,bytes32,address,uint256,address,uint256,uint256,address,uint256)\":{\"params\":{\"curator\":\"The curator that initiated the action.\",\"giveAmount\":\"The amount given on source.\",\"giveToken\":\"The token being bridged on source.\",\"nativeFee\":\"The native fee paid from the subvault.\",\"orderId\":\"The DLN order id.\",\"recipient\":\"The destination recipient address on the destination chain.\",\"salt\":\"The curator-provided order salt.\",\"takeAmount\":\"The amount expected on destination.\",\"takeChainId\":\"The destination chain id.\",\"takeToken\":\"The token expected on destination.\"}},\"DlnNativeBridgeInitiated(address,uint64,bytes32,uint256,address,uint256,uint256,address,uint256)\":{\"params\":{\"curator\":\"The curator that initiated the action.\",\"giveAmount\":\"The native amount given on source.\",\"nativeFee\":\"The native fee paid from the subvault.\",\"orderId\":\"The DLN order id.\",\"recipient\":\"The destination recipient address on the destination chain.\",\"salt\":\"The curator-provided order salt.\",\"takeAmount\":\"The amount expected on destination.\",\"takeChainId\":\"The destination chain id.\",\"takeToken\":\"The token expected on destination.\"}},\"HypeDepositedToCore(address,uint256)\":{\"params\":{\"amount\":\"The HYPE amount deposited.\",\"curator\":\"The curator that initiated the action.\"}},\"HypeWithdrawnToEvm(address,uint64)\":{\"params\":{\"amount\":\"The HYPE amount withdrawn.\",\"curator\":\"The curator that initiated the action.\"}},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"LimitBuyOrderPlaced(address,uint32,uint128,uint64,uint64,bool,uint8)\":{\"params\":{\"asset\":\"The asset id.\",\"cloid\":\"Client order id.\",\"curator\":\"The curator that initiated the action.\",\"limitPx\":\"The limit price.\",\"reduceOnly\":\"Whether the order is reduce-only.\",\"sz\":\"The order size.\",\"tif\":\"Time-in-force.\"}},\"LimitSellOrderPlaced(address,uint32,uint128,uint64,uint64,bool,uint8)\":{\"params\":{\"asset\":\"The asset id.\",\"cloid\":\"Client order id.\",\"curator\":\"The curator that initiated the action.\",\"limitPx\":\"The limit price.\",\"reduceOnly\":\"Whether the order is reduce-only.\",\"sz\":\"The order size.\",\"tif\":\"Time-in-force.\"}},\"OrderCancelledByCloid(address,uint32,uint128)\":{\"params\":{\"asset\":\"The asset id.\",\"cloid\":\"The client order id.\",\"curator\":\"The curator that initiated the action.\"}},\"OrderCancelledByOid(address,uint32,uint64)\":{\"params\":{\"asset\":\"The asset id.\",\"curator\":\"The curator that initiated the action.\",\"oid\":\"The on-chain order id.\"}},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"PerpToSpotTransferred(address,uint64)\":{\"params\":{\"curator\":\"The curator that initiated the action.\",\"ntl\":\"The notional transferred.\"}},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"SpotToPerpTransferred(address,uint64)\":{\"params\":{\"curator\":\"The curator that initiated the action.\",\"ntl\":\"The notional transferred.\"}},\"TokenDepositedToCore(address,address,uint64,address,uint256)\":{\"params\":{\"amount\":\"The token amount.\",\"curator\":\"The curator that initiated the action.\",\"systemAddress\":\"The Core system address that receives the deposit.\",\"token\":\"The ERC-20 token address.\",\"tokenIndex\":\"The Core token index.\"}},\"TokenWithdrawnToEvm(address,uint64,uint64)\":{\"params\":{\"amount\":\"The token amount withdrawn.\",\"curator\":\"The curator that initiated the action.\",\"tokenIndex\":\"The Core token index.\"}},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"bridgeErc20ViaDeBridge(address,uint256,uint256,address,uint256,uint64,(uint8,bytes,bytes32[])[2])\":{\"params\":{\"giveAmount\":\"The amount offered on the source chain.\",\"giveTokenAddress\":\"The ERC-20 token address offered on the source chain.\",\"nativeFee\":\"The DLN native fee to include in the call value.\",\"salt\":\"Salt for order uniqueness.\",\"takeAmount\":\"The amount desired on the destination chain.\",\"takeTokenAddress\":\"The EVM token address on the destination chain.\",\"verificationPayloads\":\"Two-step verification payload: [0] approve, [1] DLN create order.\"},\"returns\":{\"orderId\":\"The unique identifier of the created DLN order.\"}},\"bridgeNativeViaDeBridge(uint256,uint256,address,uint256,uint64,(uint8,bytes,bytes32[]))\":{\"params\":{\"giveAmount\":\"The native amount to bridge (added to `nativeFee` for total call value).\",\"nativeFee\":\"The DLN native fee to include in the call value.\",\"salt\":\"Salt for order uniqueness.\",\"takeAmount\":\"The amount desired on the destination chain.\",\"takeTokenAddress\":\"The EVM token address on the destination chain.\",\"verificationPayload\":\"Verification payload for the DLN create order call.\"},\"returns\":{\"orderId\":\"The unique identifier of the created DLN order.\"}},\"bridgeRecipient()\":{\"returns\":{\"_0\":\"The recipient address for bridged funds.\"}},\"bridgeUsdcViaCctpV2(uint256,uint256,uint32,(uint8,bytes,bytes32[])[2])\":{\"params\":{\"amount\":\"The amount of USDC to bridge.\",\"maxFee\":\"The maximum fee for the bridge operation.\",\"minFinalityThreshold\":\"The minimum finality threshold.\",\"verificationPayloads\":\"Two-step verification payload: [0] approve, [1] depositForBurn.\"}},\"cancelOrderByCloid(uint32,uint128,(uint8,bytes,bytes32[]))\":{\"params\":{\"asset\":\"The asset ID associated with the order.\",\"cloid\":\"The client order ID to cancel.\",\"verificationPayload\":\"Verification payload for authorizing the call through the subvault.\"},\"returns\":{\"_0\":\"Return data from the subvault call.\"}},\"cancelOrderByOid(uint32,uint64,(uint8,bytes,bytes32[]))\":{\"params\":{\"asset\":\"The asset ID associated with the order.\",\"oid\":\"The order ID to cancel.\",\"verificationPayload\":\"Verification payload for authorizing the call through the subvault.\"},\"returns\":{\"_0\":\"Return data from the subvault call.\"}},\"coreSystemAddress(uint64)\":{\"details\":\"System addresses have first byte 0x20 and token index encoded in big-endian in the low bytes.\",\"params\":{\"tokenIndex\":\"The token index to compute the system address for.\"},\"returns\":{\"_0\":\"The computed system address.\"}},\"depositHypeToCore(uint256,(uint8,bytes,bytes32[]))\":{\"params\":{\"amount\":\"Amount to deposit (in wei).\",\"verificationPayload\":\"Verification payload for authorizing the call through the subvault.\"},\"returns\":{\"_0\":\"Return data from the subvault call.\"}},\"depositTokenToCore(address,uint64,uint256,(uint8,bytes,bytes32[]))\":{\"params\":{\"amount\":\"Amount to deposit (in token units).\",\"token\":\"ERC20 token contract address.\",\"tokenIndex\":\"Hyperliquid Core token index.\",\"verificationPayload\":\"Verification payload for authorizing the call through the subvault.\"},\"returns\":{\"_0\":\"Return data from the subvault call.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getRoleMembers(bytes32)\":{\"details\":\"Return all accounts that have `role` WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"hypeTokenIndex()\":{\"returns\":{\"_0\":\"The HYPE token index configured for this chain.\"}},\"initialize(address,address,address,address,address,uint64,(address,uint32,address,address))\":{\"params\":{\"admin\":\"Initial admin address for AccessManager/roles.\",\"bridgeRecipient\":\"Address on destination chains where bridged funds should be sent.\",\"cctpV2Config\":\"CCTPv2 configuration.\",\"curator\":\"Initial curator address authorized to operate the strategy.\",\"guardian\":\"Initial guardian address with risk controls.\",\"hypeTokenIndex_\":\"Chain-specific Core token index for HYPE.\",\"subvault\":\"Subvault address that executes calls and holds funds.\"}},\"initializeDeBridge(uint256,address)\":{\"params\":{\"orderAuthority\":\"Address authorized to modify DeBridge orders on destination chain (can be zero).\",\"takeChainId\":\"Destination chain ID for DeBridge (DLN) take operations.\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"placeLimitBuyOrder(uint32,uint64,uint64,bool,uint8,uint128,(uint8,bytes,bytes32[]))\":{\"params\":{\"asset\":\"The asset ID for the order.\",\"cloid\":\"Client order ID (0 for no cloid).\",\"limitPx\":\"The limit price (10^8 scaled).\",\"reduceOnly\":\"Whether this is a reduce-only order.\",\"sz\":\"The order size (10^8 scaled).\",\"tif\":\"Time-in-force value (use Tif library constants).\",\"verificationPayload\":\"Verification payload for authorizing the call through the subvault.\"},\"returns\":{\"_0\":\"Return data from the subvault call.\"}},\"placeLimitSellOrder(uint32,uint64,uint64,bool,uint8,uint128,(uint8,bytes,bytes32[]))\":{\"params\":{\"asset\":\"The asset ID for the order.\",\"cloid\":\"Client order ID (0 for no cloid).\",\"limitPx\":\"The limit price (10^8 scaled).\",\"reduceOnly\":\"Whether this is a reduce-only order.\",\"sz\":\"The order size (10^8 scaled).\",\"tif\":\"Time-in-force value (use Tif library constants).\",\"verificationPayload\":\"Verification payload for authorizing the call through the subvault.\"},\"returns\":{\"_0\":\"Return data from the subvault call.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"receiveUsdcViaCctpV2(bytes,bytes)\":{\"params\":{\"attestation\":\"The attestation from CCTPv2.\",\"message\":\"The message from CCTPv2.\"},\"returns\":{\"_0\":\"True if the underlying call succeeded.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setDeBridgeOrderAuthority(address)\":{\"params\":{\"orderAuthority\":\"New address authorized to modify DeBridge orders on destination chain (can be zero).\"}},\"subvault()\":{\"returns\":{\"_0\":\"Address of the subvault.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferPerpToSpot(uint64,(uint8,bytes,bytes32[]))\":{\"params\":{\"ntl\":\"Notional amount to transfer (10^8 scaled).\",\"verificationPayload\":\"Verification payload for authorizing the call through the subvault.\"},\"returns\":{\"_0\":\"Return data from the subvault call.\"}},\"transferSpotToPerp(uint64,(uint8,bytes,bytes32[]))\":{\"params\":{\"ntl\":\"Notional amount to transfer (10^8 scaled).\",\"verificationPayload\":\"Verification payload for authorizing the call through the subvault.\"},\"returns\":{\"_0\":\"Return data from the subvault call.\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"withdrawHypeToEvm(uint64,(uint8,bytes,bytes32[]))\":{\"params\":{\"amount\":\"Amount to withdraw (10^8 scaled).\",\"verificationPayload\":\"Verification payload for authorizing the call through the subvault.\"},\"returns\":{\"_0\":\"Return data from the subvault call.\"}},\"withdrawTokenToEvm(uint64,uint64,(uint8,bytes,bytes32[]))\":{\"params\":{\"amount\":\"Amount to withdraw (10^8 scaled).\",\"tokenIndex\":\"Hyperliquid Core token index.\",\"verificationPayload\":\"Verification payload for authorizing the call through the subvault.\"},\"returns\":{\"_0\":\"Return data from the subvault call.\"}}},\"title\":\"HyperliquidStrategy\",\"version\":1},\"userdoc\":{\"errors\":{\"BridgeApproveFailed()\":[{\"notice\":\"Thrown when ERC-20 approve via the bridge flow fails.\"}],\"BridgeNotInitialized()\":[{\"notice\":\"Thrown when the bridge is not initialized.\"}],\"CCTPv2Disabled()\":[{\"notice\":\"Thrown when CCTPv2 bridging is disabled.\"}],\"CallFailed()\":[{\"notice\":\"Thrown when a call to an external contract fails.\"}],\"DeBridgeDisabled()\":[{\"notice\":\"Thrown when DeBridge feature is disabled.\"}],\"DeBridgeNotInitialized()\":[{\"notice\":\"Thrown when DeBridge is not initialized.\"}],\"EmptyAttestation()\":[{\"notice\":\"Thrown when the CCTPv2 attestation payload is empty.\"}],\"EmptyMessage()\":[{\"notice\":\"Thrown when the CCTPv2 message payload is empty.\"}],\"InvalidChainId()\":[{\"notice\":\"Thrown when a provided chain ID is invalid (e.g., zero).\"}],\"InvalidMsgValue()\":[{\"notice\":\"Thrown when the provided msg.value does not match the expected amount.\"}],\"MaxFeeTooHigh()\":[{\"notice\":\"Thrown when maxFee is not strictly less than amount.\"}],\"ZeroAddress()\":[{\"notice\":\"Thrown when a zero address is provided where it's not allowed.\"}],\"ZeroAmount()\":[{\"notice\":\"Thrown when an amount is zero where it's not allowed.\"}]},\"events\":{\"CCTPv2StatusUpdated(bool)\":{\"notice\":\"Emitted when CCTPv2 status is toggled.\"},\"CctpV2UsdcBridgeInitiated(address,uint32,uint256,uint256,uint32,address)\":{\"notice\":\"Emitted when a CCTPv2 burn-and-mint transfer is initiated on the source chain.\"},\"CctpV2UsdcMessageReceived(address,bytes32,bytes32)\":{\"notice\":\"Emitted when a CCTPv2 message is processed on the destination chain.\"},\"DeBridgeOrderAuthorityUpdated(address)\":{\"notice\":\"Emitted when DeBridge order authority is updated.\"},\"DeBridgeStatusUpdated(bool)\":{\"notice\":\"Emitted when DeBridge status is toggled.\"},\"DlnErc20BridgeInitiated(address,uint64,bytes32,address,uint256,address,uint256,uint256,address,uint256)\":{\"notice\":\"Emitted when an ERC-20 DLN bridge is initiated on the source chain.\"},\"DlnNativeBridgeInitiated(address,uint64,bytes32,uint256,address,uint256,uint256,address,uint256)\":{\"notice\":\"Emitted when a native DLN bridge is initiated on the source chain.\"},\"HypeDepositedToCore(address,uint256)\":{\"notice\":\"Emitted when HYPE is deposited into Hyperliquid Core.\"},\"HypeWithdrawnToEvm(address,uint64)\":{\"notice\":\"Emitted when HYPE is withdrawn from Hyperliquid Core to EVM.\"},\"LimitBuyOrderPlaced(address,uint32,uint128,uint64,uint64,bool,uint8)\":{\"notice\":\"Emitted when a limit buy order is placed.\"},\"LimitSellOrderPlaced(address,uint32,uint128,uint64,uint64,bool,uint8)\":{\"notice\":\"Emitted when a limit sell order is placed.\"},\"OrderCancelledByCloid(address,uint32,uint128)\":{\"notice\":\"Emitted when an order is canceled by client order id.\"},\"OrderCancelledByOid(address,uint32,uint64)\":{\"notice\":\"Emitted when an order is canceled by on-chain oid.\"},\"PerpToSpotTransferred(address,uint64)\":{\"notice\":\"Emitted when perpetuals balance is transferred to spot.\"},\"SpotToPerpTransferred(address,uint64)\":{\"notice\":\"Emitted when spot balance is transferred to perpetuals.\"},\"TokenDepositedToCore(address,address,uint64,address,uint256)\":{\"notice\":\"Emitted when an ERC-20 is deposited into Hyperliquid Core.\"},\"TokenWithdrawnToEvm(address,uint64,uint64)\":{\"notice\":\"Emitted when an ERC-20 is withdrawn from Hyperliquid Core to EVM.\"}},\"kind\":\"user\",\"methods\":{\"DLN_DESTINATION()\":{\"notice\":\"DeBridge DLN Destination contract address.\"},\"bridgeErc20ViaDeBridge(address,uint256,uint256,address,uint256,uint64,(uint8,bytes,bytes32[])[2])\":{\"notice\":\"Bridge an ERC-20 token via DeBridge DLN.\"},\"bridgeNativeViaDeBridge(uint256,uint256,address,uint256,uint64,(uint8,bytes,bytes32[]))\":{\"notice\":\"Bridge the native asset via DeBridge DLN.\"},\"bridgeRecipient()\":{\"notice\":\"Returns the dedicated recipient address for bridged funds.\"},\"bridgeUsdcViaCctpV2(uint256,uint256,uint32,(uint8,bytes,bytes32[])[2])\":{\"notice\":\"Bridge USDC via CCTPv2.\"},\"cancelOrderByCloid(uint32,uint128,(uint8,bytes,bytes32[]))\":{\"notice\":\"Cancels an order by its client order ID (cloid).\"},\"cancelOrderByOid(uint32,uint64,(uint8,bytes,bytes32[]))\":{\"notice\":\"Cancels an order by its order ID (oid).\"},\"cctpV2DestinationDomain()\":{\"notice\":\"Returns the configured destination domain for CCTPv2.\"},\"cctpV2MessageTransmitter()\":{\"notice\":\"Returns the configured MessageTransmitter contract address for this chain.\"},\"cctpV2TokenMessenger()\":{\"notice\":\"Returns the configured TokenMessenger contract address for this chain.\"},\"coreSystemAddress(uint64)\":{\"notice\":\"Computes the Core system address for a given token index.\"},\"deBridgeOrderAuthority()\":{\"notice\":\"Returns the configured order authority address for DeBridge.\"},\"deBridgeTakeChainId()\":{\"notice\":\"Returns the configured destination chain ID for DeBridge.\"},\"depositHypeToCore(uint256,(uint8,bytes,bytes32[]))\":{\"notice\":\"Deposits HYPE to HyperCore.\"},\"depositTokenToCore(address,uint64,uint256,(uint8,bytes,bytes32[]))\":{\"notice\":\"Deposits an ERC20 token to HyperCore.\"},\"disableCctpV2()\":{\"notice\":\"Disables CCTPv2 bridging.\"},\"disableDeBridge()\":{\"notice\":\"Disables DeBridge bridging.\"},\"enableCctpV2()\":{\"notice\":\"Enables CCTPv2 bridging.\"},\"enableDeBridge()\":{\"notice\":\"Enables DeBridge bridging.\"},\"hypeTokenIndex()\":{\"notice\":\"Returns the chain-specific Core token index for HYPE.\"},\"initialize(address,address,address,address,address,uint64,(address,uint32,address,address))\":{\"notice\":\"Initializes the HyperliquidStrategy contract.\"},\"initializeDeBridge(uint256,address)\":{\"notice\":\"Initializes DeBridge functionality.\"},\"isCctpV2Enabled()\":{\"notice\":\"Returns true if CCTPv2 bridging is enabled.\"},\"isDeBridgeEnabled()\":{\"notice\":\"Returns true if DeBridge bridging is enabled.\"},\"pause()\":{\"notice\":\"Pauses the strategy.\"},\"placeLimitBuyOrder(uint32,uint64,uint64,bool,uint8,uint128,(uint8,bytes,bytes32[]))\":{\"notice\":\"Places a limit buy order on Hyperliquid.\"},\"placeLimitSellOrder(uint32,uint64,uint64,bool,uint8,uint128,(uint8,bytes,bytes32[]))\":{\"notice\":\"Places a limit sell order on Hyperliquid.\"},\"receiveUsdcViaCctpV2(bytes,bytes)\":{\"notice\":\"Receive USDC via CCTPv2.\"},\"setDeBridgeOrderAuthority(address)\":{\"notice\":\"Sets the DeBridge order authority address.\"},\"subvault()\":{\"notice\":\"Returns the address of the subvault associated with this strategy.\"},\"transferPerpToSpot(uint64,(uint8,bytes,bytes32[]))\":{\"notice\":\"Transfers USD balance from perp to spot market.\"},\"transferSpotToPerp(uint64,(uint8,bytes,bytes32[]))\":{\"notice\":\"Transfers USD balance from spot to perp market.\"},\"unpause()\":{\"notice\":\"Unpauses the strategy.\"},\"usdc()\":{\"notice\":\"Returns the USDC address for this strategy.\"},\"withdrawHypeToEvm(uint64,(uint8,bytes,bytes32[]))\":{\"notice\":\"Withdraws HYPE from HyperCore to HyperEVM.\"},\"withdrawTokenToEvm(uint64,uint64,(uint8,bytes,bytes32[]))\":{\"notice\":\"Withdraws a token from HyperCore to HyperEVM.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/HyperliquidStrategy.sol\":\"HyperliquidStrategy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=dependencies/openzeppelin-contracts-upgradeable-5.4.0/contracts/\",\":@openzeppelin/contracts/=dependencies/openzeppelin-contracts-5.4.0/contracts/\",\":forge-std-1.10.0/=dependencies/forge-std-1.10.0/src/\",\":forge-std/=dependencies/forge-std-1.10.0/src/\",\":openzeppelin-contracts-5.4.0/=dependencies/openzeppelin-contracts-5.4.0/\",\":openzeppelin-contracts-upgradeable-5.4.0/=dependencies/openzeppelin-contracts-upgradeable-5.4.0/\"]},\"sources\":{\"dependencies/openzeppelin-contracts-5.4.0/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"dependencies/openzeppelin-contracts-5.4.0/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xbc97d8c0d67d4d7eba1e662f0a8671712ace9e060ab03af547c4bb321aec1d8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://890d156f50630d52c7be57d7e0499132d6fd92b2e1365b81531f4463b3304377\",\"dweb:/ipfs/QmUHe9uL1ciePH2pQg7wdrgTAFRZWjcpBEAg8V1UNtXutd\"]},\"dependencies/openzeppelin-contracts-5.4.0/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"dependencies/openzeppelin-contracts-5.4.0/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]},\"dependencies/openzeppelin-contracts-5.4.0/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"dependencies/openzeppelin-contracts-5.4.0/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"dependencies/openzeppelin-contracts-5.4.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"dependencies/openzeppelin-contracts-5.4.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"dependencies/openzeppelin-contracts-5.4.0/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"dependencies/openzeppelin-contracts-5.4.0/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"dependencies/openzeppelin-contracts-5.4.0/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"dependencies/openzeppelin-contracts-5.4.0/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"dependencies/openzeppelin-contracts-5.4.0/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"dependencies/openzeppelin-contracts-5.4.0/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"dependencies/openzeppelin-contracts-5.4.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"dependencies/openzeppelin-contracts-5.4.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"dependencies/openzeppelin-contracts-5.4.0/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"dependencies/openzeppelin-contracts-5.4.0/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x1fc283df727585919c3db301b948a3e827aee16917457ad7f916db9da2228e77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4f4b5e2cd0ebc3b74e41e4e94771a0417eedd9b11cec3ef9f90b2ac2989264b\",\"dweb:/ipfs/QmZmsEsvsXiwAyAe1YeoLSKezeFcvR1giUeEY6ex4zpsTS\"]},\"dependencies/openzeppelin-contracts-upgradeable-5.4.0/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x85a70e2b1b65e9ba456add364d22b97eb9944083df1c39c0b4bd6a4b5aa386a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d32a33be6ca4d8e89b9e82e3f9cec7a6c4e040534152313ff55da85b8f193059\",\"dweb:/ipfs/QmeR55L8t2A8xZ1nvT5y4yVWfFbbmpaGAtGBMz3GGNpuyP\"]},\"dependencies/openzeppelin-contracts-upgradeable-5.4.0/contracts/access/extensions/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x52d72be5f7529846ba76aacf0c49de92bde89a5203b6fbc3919e7384c0df0905\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d5e789d39c6623db24d427ca8380978f44cc736070e2ac3ee19f88095c43b17\",\"dweb:/ipfs/QmSzyMMTnZrUWY2e4B2U3VE2fjz8AFawhk7jex8SPW1eT2\"]},\"dependencies/openzeppelin-contracts-upgradeable-5.4.0/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"dependencies/openzeppelin-contracts-upgradeable-5.4.0/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"dependencies/openzeppelin-contracts-upgradeable-5.4.0/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"dependencies/openzeppelin-contracts-upgradeable-5.4.0/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"dependencies/openzeppelin-contracts-upgradeable-5.4.0/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"src/HyperliquidStrategy.sol\":{\"keccak256\":\"0xc6871bbf730ccfe131c1933c72210396f32ef136c57227e8956f9f2e0382c117\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://46b27f6580644e26603ccdf6e4964c259a8616af5f6b3752ebed1ca2e976781e\",\"dweb:/ipfs/QmP1nmvfXfarxmGDtUL8Xcnpi47Nq1XFx4hmPZCtZpwQT1\"]},\"src/interfaces/IBridgeStrategy.sol\":{\"keccak256\":\"0xa3fb7481da39d4dea49f20e5d735aad957fbb6bd1964c2a23952faaddb5e589f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c142462a911e6b254b69eafe63bae91b5a835164103878d3e843f32872728a6d\",\"dweb:/ipfs/QmZoYHB631nTnFhnN5Ey2c6i8XK3BgwbTjRRAYmAmrD8aX\"]},\"src/interfaces/ICctpV2BridgeStrategy.sol\":{\"keccak256\":\"0xdc1e89e0a614d3920e3ad46d8d5bbbd65177d2f6af4ac9c44429f46e30787d2a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://797b72f5268871c53d1c679ff9003574437cf9a73011e0c90e3abecf9c3f002b\",\"dweb:/ipfs/QmWVQjsECXjmDexRhhnCDQe117EGVg5EHkrpN3JYvnCb5C\"]},\"src/interfaces/IDeBridgeStrategy.sol\":{\"keccak256\":\"0x6949b585780d6321233c92056af0426bb1e9bb42b3e1306a188d90f27f58e23c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5824c77745211c50ef20d8efdf15e0070864090de383d829173a955113e1c344\",\"dweb:/ipfs/QmQphvnhJZ7KXeoVBA3ruN9UZ6ftC4fxr8V6ecTnYFxxrB\"]},\"src/interfaces/IHyperliquidTradingStrategy.sol\":{\"keccak256\":\"0xec47e42bf99368f496ac8f232884251f81c1bceef690bbee4f1138ee013e4ac6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://61125b679755ce2dd71f78d83dfde29d86eb2b6f31707457c9c28ff7127648de\",\"dweb:/ipfs/QmPgydovkYmr8mMYQRTy5PdBAFdWeEz65ykTfkpe5JSzvH\"]},\"src/interfaces/IStrategy.sol\":{\"keccak256\":\"0xed24b72e4e4d6b24a0d74fcdbb2e60271607d98558bf7dcb15f412b773a20620\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a6bc32257d1c30ba301077362f546c750aa8ed5305a3c59bdf3db4ca490e50b0\",\"dweb:/ipfs/QmckH5UfUhVUrRjCysgTdEMvKqQF5PeQjniEhwRwZDwGDX\"]},\"src/interfaces/external/circle/IMessageTransmitterV2.sol\":{\"keccak256\":\"0x9530c2878e548e46dc2cd67d034703ca945c02bc035a63befe0be84033e31b43\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1c841180a74aaaea3882fd6c63d9d940a3b8cb0b9a4d856ccbe2a49ddde38c59\",\"dweb:/ipfs/QmRR6cHcnXWeEHRvczz4AhHvN69stxGHwPYjAosWYPQaGQ\"]},\"src/interfaces/external/circle/ITokenMessengerV2.sol\":{\"keccak256\":\"0x7007c3c127d903f81e7df369ffb6a5fdeb020546c33490f93cfc014fca6929c1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1dcdb6c54a00ac2396de0a5313f2b2044df4f961916cf69c1fbacc9cb48ee257\",\"dweb:/ipfs/QmbYeeFgK6EWUZvno7PSoontjMnt7jfkMzk3rfssfPhYRy\"]},\"src/interfaces/external/debridge/IDlnSource.sol\":{\"keccak256\":\"0xee9578131c6d7b28b59a4b2e66fd3b70ef0edd5ce91414cf00ab20b69ac7ccc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d557949e0112064bc8d29bf48981058db774b51ad51f9848c10bd4508e85b91e\",\"dweb:/ipfs/QmV3faZPN7XwNtEth15enxjzkVhKdWXSDwGM95cEsZyM8w\"]},\"src/interfaces/external/hyperliquid/ICoreWriter.sol\":{\"keccak256\":\"0xcc5cab0f4f744379db3b5811192fd17298d0ddfa21a9910d459e9e43549cef54\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5ecbdb5a4e99531283141ad71abf1f21fe21075534ea79e487b7baa7fc23704a\",\"dweb:/ipfs/QmQTThhzFprSXSeZpoXZaGGgGiDYGieoCBXY3BzahbsVUo\"]},\"src/interfaces/external/mellow/ICallModule.sol\":{\"keccak256\":\"0x34f8929a5164a7cf9f755a38f6620632f152ee374809d2e96f3033e4bf966d53\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d17ea72ae7700521bdab7623392c8976ea2ccb79c98594d161302a85b83f907b\",\"dweb:/ipfs/QmWzGKMjCQP6JEchPXq4fME4uu8rDBpPGbCwnUFNoo5Adt\"]},\"src/interfaces/external/mellow/IVerifier.sol\":{\"keccak256\":\"0x5442ff96858462dfef871e4049154b6f667e6875d21ff420da4da1c033924250\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4c2e89b27ba3fcab30ba41c923da450ce477f292837f3dcded5f6af0dca2e287\",\"dweb:/ipfs/QmdPNhJF2VGoRqyoXyQQL2vxSkym9R62cTPA1qh91UZgub\"]},\"src/libs/CoreWriterCodec.sol\":{\"keccak256\":\"0x2c067ca15307e861a262e9882cdc1fc526270d32eb810a6705d81e4029d28e4d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://94b10e0876da25b09b74dd5ca424d3d6011677784102596a859bf0a992e3174b\",\"dweb:/ipfs/QmQGRp6GWbCq4UNEUjodJ1ceLxYPiAKSSKT3b74Ta33tt7\"]},\"src/libs/Errors.sol\":{\"keccak256\":\"0xb62ee97d8036cc1f7cb6fdf1f3d39afc0c32f56caccdbc6e9218877832ac8eb4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://00974065ce9ea423a2a1d536e6ead7f7fd4539b0f160c4f517bb4a8ee8e7f738\",\"dweb:/ipfs/QmZobzDLJtcg9hTh8nGPsrLJWAoRToGJSaBnUa8Jh7WdvM\"]},\"src/modules/BaseBridgeModule.sol\":{\"keccak256\":\"0xf5bd49362b7dcd3a68c01013fde0848a902ac2ec91e356708344e1aa4c135170\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d11b4ede3f67e283ac395b2c06e8f30dede600c0f53fcdc8a118b4a8352fb36b\",\"dweb:/ipfs/Qmb17vzp64XRsnx6JFq6TrAiaFZ8pMWXCKxM7tS1LDEhcr\"]},\"src/modules/BaseModule.sol\":{\"keccak256\":\"0x0476fc411725298d07c95e27b6e97d5786a3c86f9e025c02d034d9a087588eef\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3a39a4a79297bfca9004261f439b3410b029b9d76cc7bd5e8537f7b3a379e24f\",\"dweb:/ipfs/QmbfogjtYgeFGqqQpJbCsyGMEUgVSSgYLVnBpvtjeN7kmF\"]},\"src/modules/CctpV2BridgeModule.sol\":{\"keccak256\":\"0x7249e90dd13cc8a1ec962206820c9c33bf747ad7356a37684b7ddc0abf720402\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://fd9219764972586b2dbf31e9bc37e9c7004956e7f46757741c120f0bfce38b2c\",\"dweb:/ipfs/QmXcvPh1RinEGS6D8Vo7UxKdShUXE3hHwfi48mj6C3aauD\"]},\"src/modules/DeBridgeModule.sol\":{\"keccak256\":\"0xb1202e884dd374a0b76ae1cb4c62687d78ad69f2fa582958daf4a2c954842926\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://dd3723856773d936ce3364ba6a9354c1ecb7dfbce314b5c74fa75bbb1812980c\",\"dweb:/ipfs/QmawbJRDMfdBsQKu3EMuiFncGFQ5FkGcKZPEuPqzA4vrJj\"]},\"src/modules/HyperliquidTradingModule.sol\":{\"keccak256\":\"0x7a79688124e7248a67d4c34abd6d1be9eb746164df71f27a3dbd4911ce38e1f4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://be384840631df9d5898ff6de815b10181bef7fbfca847c6612ed0b5f37497e75\",\"dweb:/ipfs/QmYegs3cd1ZGiWVFb99Pvkw2Y7UT2ZB8PSWQoPAg7mC8DF\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.29+commit.ab55807c"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [],
                    "type": "error",
                    "name": "AccessControlBadConfirmation"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "neededRole",
                            "type": "bytes32"
                        }
                    ],
                    "type": "error",
                    "name": "AccessControlUnauthorizedAccount"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "target",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "AddressEmptyCode"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "BridgeApproveFailed"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "BridgeNotInitialized"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "CCTPv2Disabled"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "CallFailed"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "DeBridgeDisabled"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "DeBridgeNotInitialized"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "implementation",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "ERC1967InvalidImplementation"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ERC1967NonPayable"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "EmptyAttestation"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "EmptyMessage"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "EnforcedPause"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ExpectedPause"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "FailedCall"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidChainId"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidInitialization"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidMsgValue"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint8",
                            "name": "value",
                            "type": "uint8"
                        }
                    ],
                    "type": "error",
                    "name": "InvalidTimeInForce"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MaxFeeTooHigh"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotInitializing"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "UUPSUnauthorizedCallContext"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "slot",
                            "type": "bytes32"
                        }
                    ],
                    "type": "error",
                    "name": "UUPSUnsupportedProxiableUUID"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ZeroAddress"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ZeroAmount"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bool",
                            "name": "enabled",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "CCTPv2StatusUpdated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "curator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint32",
                            "name": "destinationDomain",
                            "type": "uint32",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "maxFee",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint32",
                            "name": "minFinalityThreshold",
                            "type": "uint32",
                            "indexed": false
                        },
                        {
                            "internalType": "address",
                            "name": "recipient",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "CctpV2UsdcBridgeInitiated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "curator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes32",
                            "name": "messageHash",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes32",
                            "name": "attestationHash",
                            "type": "bytes32",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "CctpV2UsdcMessageReceived",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "orderAuthority",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "DeBridgeOrderAuthorityUpdated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "bool",
                            "name": "enabled",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "DeBridgeStatusUpdated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "curator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint64",
                            "name": "salt",
                            "type": "uint64",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes32",
                            "name": "orderId",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "giveToken",
                            "type": "address",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "giveAmount",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "address",
                            "name": "takeToken",
                            "type": "address",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "takeAmount",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "takeChainId",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "address",
                            "name": "recipient",
                            "type": "address",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "nativeFee",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "DlnErc20BridgeInitiated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "curator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint64",
                            "name": "salt",
                            "type": "uint64",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes32",
                            "name": "orderId",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "giveAmount",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "address",
                            "name": "takeToken",
                            "type": "address",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "takeAmount",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "takeChainId",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "address",
                            "name": "recipient",
                            "type": "address",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "nativeFee",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "DlnNativeBridgeInitiated",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "curator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "HypeDepositedToCore",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "curator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint64",
                            "name": "amount",
                            "type": "uint64",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "HypeWithdrawnToEvm",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint64",
                            "name": "version",
                            "type": "uint64",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Initialized",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "curator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint32",
                            "name": "asset",
                            "type": "uint32",
                            "indexed": true
                        },
                        {
                            "internalType": "uint128",
                            "name": "cloid",
                            "type": "uint128",
                            "indexed": true
                        },
                        {
                            "internalType": "uint64",
                            "name": "limitPx",
                            "type": "uint64",
                            "indexed": false
                        },
                        {
                            "internalType": "uint64",
                            "name": "sz",
                            "type": "uint64",
                            "indexed": false
                        },
                        {
                            "internalType": "bool",
                            "name": "reduceOnly",
                            "type": "bool",
                            "indexed": false
                        },
                        {
                            "internalType": "uint8",
                            "name": "tif",
                            "type": "uint8",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "LimitBuyOrderPlaced",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "curator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint32",
                            "name": "asset",
                            "type": "uint32",
                            "indexed": true
                        },
                        {
                            "internalType": "uint128",
                            "name": "cloid",
                            "type": "uint128",
                            "indexed": true
                        },
                        {
                            "internalType": "uint64",
                            "name": "limitPx",
                            "type": "uint64",
                            "indexed": false
                        },
                        {
                            "internalType": "uint64",
                            "name": "sz",
                            "type": "uint64",
                            "indexed": false
                        },
                        {
                            "internalType": "bool",
                            "name": "reduceOnly",
                            "type": "bool",
                            "indexed": false
                        },
                        {
                            "internalType": "uint8",
                            "name": "tif",
                            "type": "uint8",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "LimitSellOrderPlaced",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "curator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint32",
                            "name": "asset",
                            "type": "uint32",
                            "indexed": true
                        },
                        {
                            "internalType": "uint128",
                            "name": "cloid",
                            "type": "uint128",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "OrderCancelledByCloid",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "curator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint32",
                            "name": "asset",
                            "type": "uint32",
                            "indexed": true
                        },
                        {
                            "internalType": "uint64",
                            "name": "oid",
                            "type": "uint64",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "OrderCancelledByOid",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Paused",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "curator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint64",
                            "name": "ntl",
                            "type": "uint64",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "PerpToSpotTransferred",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes32",
                            "name": "previousAdminRole",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes32",
                            "name": "newAdminRole",
                            "type": "bytes32",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "RoleAdminChanged",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "RoleGranted",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "RoleRevoked",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "curator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint64",
                            "name": "ntl",
                            "type": "uint64",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "SpotToPerpTransferred",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "curator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "token",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint64",
                            "name": "tokenIndex",
                            "type": "uint64",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "systemAddress",
                            "type": "address",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "TokenDepositedToCore",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "curator",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint64",
                            "name": "tokenIndex",
                            "type": "uint64",
                            "indexed": true
                        },
                        {
                            "internalType": "uint64",
                            "name": "amount",
                            "type": "uint64",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "TokenWithdrawnToEvm",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Unpaused",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "implementation",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "Upgraded",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "CURATOR_ROLE",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "DEFAULT_ADMIN_ROLE",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "DLN_DESTINATION",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "GUARDIAN_ROLE",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "UPGRADE_INTERFACE_VERSION",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "giveTokenAddress",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "giveAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "takeAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "takeTokenAddress",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "nativeFee",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint64",
                            "name": "salt",
                            "type": "uint64"
                        },
                        {
                            "internalType": "struct IVerifier.VerificationPayload[2]",
                            "name": "verificationPayloads",
                            "type": "tuple[2]",
                            "components": [
                                {
                                    "internalType": "enum IVerifier.VerificationType",
                                    "name": "verificationType",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "verificationData",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "bytes32[]",
                                    "name": "proof",
                                    "type": "bytes32[]"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "bridgeErc20ViaDeBridge",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "orderId",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "giveAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "takeAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "takeTokenAddress",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "nativeFee",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint64",
                            "name": "salt",
                            "type": "uint64"
                        },
                        {
                            "internalType": "struct IVerifier.VerificationPayload",
                            "name": "verificationPayload",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "enum IVerifier.VerificationType",
                                    "name": "verificationType",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "verificationData",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "bytes32[]",
                                    "name": "proof",
                                    "type": "bytes32[]"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "bridgeNativeViaDeBridge",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "orderId",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "bridgeRecipient",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "maxFee",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint32",
                            "name": "minFinalityThreshold",
                            "type": "uint32"
                        },
                        {
                            "internalType": "struct IVerifier.VerificationPayload[2]",
                            "name": "verificationPayloads",
                            "type": "tuple[2]",
                            "components": [
                                {
                                    "internalType": "enum IVerifier.VerificationType",
                                    "name": "verificationType",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "verificationData",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "bytes32[]",
                                    "name": "proof",
                                    "type": "bytes32[]"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "bridgeUsdcViaCctpV2"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint32",
                            "name": "asset",
                            "type": "uint32"
                        },
                        {
                            "internalType": "uint128",
                            "name": "cloid",
                            "type": "uint128"
                        },
                        {
                            "internalType": "struct IVerifier.VerificationPayload",
                            "name": "verificationPayload",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "enum IVerifier.VerificationType",
                                    "name": "verificationType",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "verificationData",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "bytes32[]",
                                    "name": "proof",
                                    "type": "bytes32[]"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "cancelOrderByCloid",
                    "outputs": [
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint32",
                            "name": "asset",
                            "type": "uint32"
                        },
                        {
                            "internalType": "uint64",
                            "name": "oid",
                            "type": "uint64"
                        },
                        {
                            "internalType": "struct IVerifier.VerificationPayload",
                            "name": "verificationPayload",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "enum IVerifier.VerificationType",
                                    "name": "verificationType",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "verificationData",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "bytes32[]",
                                    "name": "proof",
                                    "type": "bytes32[]"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "cancelOrderByOid",
                    "outputs": [
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "cctpV2DestinationDomain",
                    "outputs": [
                        {
                            "internalType": "uint32",
                            "name": "",
                            "type": "uint32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "cctpV2MessageTransmitter",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "cctpV2TokenMessenger",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint64",
                            "name": "tokenIndex",
                            "type": "uint64"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "coreSystemAddress",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "deBridgeOrderAuthority",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "deBridgeTakeChainId",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "struct IVerifier.VerificationPayload",
                            "name": "verificationPayload",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "enum IVerifier.VerificationType",
                                    "name": "verificationType",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "verificationData",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "bytes32[]",
                                    "name": "proof",
                                    "type": "bytes32[]"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "depositHypeToCore",
                    "outputs": [
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                        },
                        {
                            "internalType": "uint64",
                            "name": "tokenIndex",
                            "type": "uint64"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "struct IVerifier.VerificationPayload",
                            "name": "verificationPayload",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "enum IVerifier.VerificationType",
                                    "name": "verificationType",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "verificationData",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "bytes32[]",
                                    "name": "proof",
                                    "type": "bytes32[]"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "depositTokenToCore",
                    "outputs": [
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "disableCctpV2"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "disableDeBridge"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "enableCctpV2"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "enableDeBridge"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getRoleAdmin",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "index",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getRoleMember",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getRoleMemberCount",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getRoleMembers",
                    "outputs": [
                        {
                            "internalType": "address[]",
                            "name": "",
                            "type": "address[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "grantRole"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "hasRole",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "hypeTokenIndex",
                    "outputs": [
                        {
                            "internalType": "uint64",
                            "name": "",
                            "type": "uint64"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "subvault",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "admin",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "guardian",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "curator",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "bridgeRecipient",
                            "type": "address"
                        },
                        {
                            "internalType": "uint64",
                            "name": "hypeTokenIndex_",
                            "type": "uint64"
                        },
                        {
                            "internalType": "struct CctpV2BridgeModule.CctpV2Config",
                            "name": "cctpV2Config",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "usdc",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint32",
                                    "name": "destinationDomain",
                                    "type": "uint32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "tokenMessenger",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "messageTransmitter",
                                    "type": "address"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "initialize"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "takeChainId",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "orderAuthority",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "initializeDeBridge"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isCctpV2Enabled",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isDeBridgeEnabled",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "pause"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "paused",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint32",
                            "name": "asset",
                            "type": "uint32"
                        },
                        {
                            "internalType": "uint64",
                            "name": "limitPx",
                            "type": "uint64"
                        },
                        {
                            "internalType": "uint64",
                            "name": "sz",
                            "type": "uint64"
                        },
                        {
                            "internalType": "bool",
                            "name": "reduceOnly",
                            "type": "bool"
                        },
                        {
                            "internalType": "uint8",
                            "name": "tif",
                            "type": "uint8"
                        },
                        {
                            "internalType": "uint128",
                            "name": "cloid",
                            "type": "uint128"
                        },
                        {
                            "internalType": "struct IVerifier.VerificationPayload",
                            "name": "verificationPayload",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "enum IVerifier.VerificationType",
                                    "name": "verificationType",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "verificationData",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "bytes32[]",
                                    "name": "proof",
                                    "type": "bytes32[]"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "placeLimitBuyOrder",
                    "outputs": [
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint32",
                            "name": "asset",
                            "type": "uint32"
                        },
                        {
                            "internalType": "uint64",
                            "name": "limitPx",
                            "type": "uint64"
                        },
                        {
                            "internalType": "uint64",
                            "name": "sz",
                            "type": "uint64"
                        },
                        {
                            "internalType": "bool",
                            "name": "reduceOnly",
                            "type": "bool"
                        },
                        {
                            "internalType": "uint8",
                            "name": "tif",
                            "type": "uint8"
                        },
                        {
                            "internalType": "uint128",
                            "name": "cloid",
                            "type": "uint128"
                        },
                        {
                            "internalType": "struct IVerifier.VerificationPayload",
                            "name": "verificationPayload",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "enum IVerifier.VerificationType",
                                    "name": "verificationType",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "verificationData",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "bytes32[]",
                                    "name": "proof",
                                    "type": "bytes32[]"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "placeLimitSellOrder",
                    "outputs": [
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "proxiableUUID",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes",
                            "name": "message",
                            "type": "bytes"
                        },
                        {
                            "internalType": "bytes",
                            "name": "attestation",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "receiveUsdcViaCctpV2",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address",
                            "name": "callerConfirmation",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "renounceRole"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "revokeRole"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "orderAuthority",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setDeBridgeOrderAuthority"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "subvault",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes4",
                            "name": "interfaceId",
                            "type": "bytes4"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "supportsInterface",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint64",
                            "name": "ntl",
                            "type": "uint64"
                        },
                        {
                            "internalType": "struct IVerifier.VerificationPayload",
                            "name": "verificationPayload",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "enum IVerifier.VerificationType",
                                    "name": "verificationType",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "verificationData",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "bytes32[]",
                                    "name": "proof",
                                    "type": "bytes32[]"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferPerpToSpot",
                    "outputs": [
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint64",
                            "name": "ntl",
                            "type": "uint64"
                        },
                        {
                            "internalType": "struct IVerifier.VerificationPayload",
                            "name": "verificationPayload",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "enum IVerifier.VerificationType",
                                    "name": "verificationType",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "verificationData",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "bytes32[]",
                                    "name": "proof",
                                    "type": "bytes32[]"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferSpotToPerp",
                    "outputs": [
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "unpause"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "newImplementation",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "upgradeToAndCall"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "usdc",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint64",
                            "name": "amount",
                            "type": "uint64"
                        },
                        {
                            "internalType": "struct IVerifier.VerificationPayload",
                            "name": "verificationPayload",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "enum IVerifier.VerificationType",
                                    "name": "verificationType",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "verificationData",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "bytes32[]",
                                    "name": "proof",
                                    "type": "bytes32[]"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "withdrawHypeToEvm",
                    "outputs": [
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint64",
                            "name": "tokenIndex",
                            "type": "uint64"
                        },
                        {
                            "internalType": "uint64",
                            "name": "amount",
                            "type": "uint64"
                        },
                        {
                            "internalType": "struct IVerifier.VerificationPayload",
                            "name": "verificationPayload",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "enum IVerifier.VerificationType",
                                    "name": "verificationType",
                                    "type": "uint8"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "verificationData",
                                    "type": "bytes"
                                },
                                {
                                    "internalType": "bytes32[]",
                                    "name": "proof",
                                    "type": "bytes32[]"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "withdrawTokenToEvm",
                    "outputs": [
                        {
                            "internalType": "bytes",
                            "name": "",
                            "type": "bytes"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "bridgeErc20ViaDeBridge(address,uint256,uint256,address,uint256,uint64,(uint8,bytes,bytes32[])[2])": {
                        "params": {
                            "giveAmount": "The amount offered on the source chain.",
                            "giveTokenAddress": "The ERC-20 token address offered on the source chain.",
                            "nativeFee": "The DLN native fee to include in the call value.",
                            "salt": "Salt for order uniqueness.",
                            "takeAmount": "The amount desired on the destination chain.",
                            "takeTokenAddress": "The EVM token address on the destination chain.",
                            "verificationPayloads": "Two-step verification payload: [0] approve, [1] DLN create order."
                        },
                        "returns": {
                            "orderId": "The unique identifier of the created DLN order."
                        }
                    },
                    "bridgeNativeViaDeBridge(uint256,uint256,address,uint256,uint64,(uint8,bytes,bytes32[]))": {
                        "params": {
                            "giveAmount": "The native amount to bridge (added to `nativeFee` for total call value).",
                            "nativeFee": "The DLN native fee to include in the call value.",
                            "salt": "Salt for order uniqueness.",
                            "takeAmount": "The amount desired on the destination chain.",
                            "takeTokenAddress": "The EVM token address on the destination chain.",
                            "verificationPayload": "Verification payload for the DLN create order call."
                        },
                        "returns": {
                            "orderId": "The unique identifier of the created DLN order."
                        }
                    },
                    "bridgeRecipient()": {
                        "returns": {
                            "_0": "The recipient address for bridged funds."
                        }
                    },
                    "bridgeUsdcViaCctpV2(uint256,uint256,uint32,(uint8,bytes,bytes32[])[2])": {
                        "params": {
                            "amount": "The amount of USDC to bridge.",
                            "maxFee": "The maximum fee for the bridge operation.",
                            "minFinalityThreshold": "The minimum finality threshold.",
                            "verificationPayloads": "Two-step verification payload: [0] approve, [1] depositForBurn."
                        }
                    },
                    "cancelOrderByCloid(uint32,uint128,(uint8,bytes,bytes32[]))": {
                        "params": {
                            "asset": "The asset ID associated with the order.",
                            "cloid": "The client order ID to cancel.",
                            "verificationPayload": "Verification payload for authorizing the call through the subvault."
                        },
                        "returns": {
                            "_0": "Return data from the subvault call."
                        }
                    },
                    "cancelOrderByOid(uint32,uint64,(uint8,bytes,bytes32[]))": {
                        "params": {
                            "asset": "The asset ID associated with the order.",
                            "oid": "The order ID to cancel.",
                            "verificationPayload": "Verification payload for authorizing the call through the subvault."
                        },
                        "returns": {
                            "_0": "Return data from the subvault call."
                        }
                    },
                    "coreSystemAddress(uint64)": {
                        "details": "System addresses have first byte 0x20 and token index encoded in big-endian in the low bytes.",
                        "params": {
                            "tokenIndex": "The token index to compute the system address for."
                        },
                        "returns": {
                            "_0": "The computed system address."
                        }
                    },
                    "depositHypeToCore(uint256,(uint8,bytes,bytes32[]))": {
                        "params": {
                            "amount": "Amount to deposit (in wei).",
                            "verificationPayload": "Verification payload for authorizing the call through the subvault."
                        },
                        "returns": {
                            "_0": "Return data from the subvault call."
                        }
                    },
                    "depositTokenToCore(address,uint64,uint256,(uint8,bytes,bytes32[]))": {
                        "params": {
                            "amount": "Amount to deposit (in token units).",
                            "token": "ERC20 token contract address.",
                            "tokenIndex": "Hyperliquid Core token index.",
                            "verificationPayload": "Verification payload for authorizing the call through the subvault."
                        },
                        "returns": {
                            "_0": "Return data from the subvault call."
                        }
                    },
                    "getRoleAdmin(bytes32)": {
                        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
                    },
                    "getRoleMember(bytes32,uint256)": {
                        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
                    },
                    "getRoleMemberCount(bytes32)": {
                        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
                    },
                    "getRoleMembers(bytes32)": {
                        "details": "Return all accounts that have `role` WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
                    },
                    "grantRole(bytes32,address)": {
                        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
                    },
                    "hasRole(bytes32,address)": {
                        "details": "Returns `true` if `account` has been granted `role`."
                    },
                    "hypeTokenIndex()": {
                        "returns": {
                            "_0": "The HYPE token index configured for this chain."
                        }
                    },
                    "initialize(address,address,address,address,address,uint64,(address,uint32,address,address))": {
                        "params": {
                            "admin": "Initial admin address for AccessManager/roles.",
                            "bridgeRecipient": "Address on destination chains where bridged funds should be sent.",
                            "cctpV2Config": "CCTPv2 configuration.",
                            "curator": "Initial curator address authorized to operate the strategy.",
                            "guardian": "Initial guardian address with risk controls.",
                            "hypeTokenIndex_": "Chain-specific Core token index for HYPE.",
                            "subvault": "Subvault address that executes calls and holds funds."
                        }
                    },
                    "initializeDeBridge(uint256,address)": {
                        "params": {
                            "orderAuthority": "Address authorized to modify DeBridge orders on destination chain (can be zero).",
                            "takeChainId": "Destination chain ID for DeBridge (DLN) take operations."
                        }
                    },
                    "paused()": {
                        "details": "Returns true if the contract is paused, and false otherwise."
                    },
                    "placeLimitBuyOrder(uint32,uint64,uint64,bool,uint8,uint128,(uint8,bytes,bytes32[]))": {
                        "params": {
                            "asset": "The asset ID for the order.",
                            "cloid": "Client order ID (0 for no cloid).",
                            "limitPx": "The limit price (10^8 scaled).",
                            "reduceOnly": "Whether this is a reduce-only order.",
                            "sz": "The order size (10^8 scaled).",
                            "tif": "Time-in-force value (use Tif library constants).",
                            "verificationPayload": "Verification payload for authorizing the call through the subvault."
                        },
                        "returns": {
                            "_0": "Return data from the subvault call."
                        }
                    },
                    "placeLimitSellOrder(uint32,uint64,uint64,bool,uint8,uint128,(uint8,bytes,bytes32[]))": {
                        "params": {
                            "asset": "The asset ID for the order.",
                            "cloid": "Client order ID (0 for no cloid).",
                            "limitPx": "The limit price (10^8 scaled).",
                            "reduceOnly": "Whether this is a reduce-only order.",
                            "sz": "The order size (10^8 scaled).",
                            "tif": "Time-in-force value (use Tif library constants).",
                            "verificationPayload": "Verification payload for authorizing the call through the subvault."
                        },
                        "returns": {
                            "_0": "Return data from the subvault call."
                        }
                    },
                    "proxiableUUID()": {
                        "details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
                    },
                    "receiveUsdcViaCctpV2(bytes,bytes)": {
                        "params": {
                            "attestation": "The attestation from CCTPv2.",
                            "message": "The message from CCTPv2."
                        },
                        "returns": {
                            "_0": "True if the underlying call succeeded."
                        }
                    },
                    "renounceRole(bytes32,address)": {
                        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
                    },
                    "revokeRole(bytes32,address)": {
                        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
                    },
                    "setDeBridgeOrderAuthority(address)": {
                        "params": {
                            "orderAuthority": "New address authorized to modify DeBridge orders on destination chain (can be zero)."
                        }
                    },
                    "subvault()": {
                        "returns": {
                            "_0": "Address of the subvault."
                        }
                    },
                    "supportsInterface(bytes4)": {
                        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
                    },
                    "transferPerpToSpot(uint64,(uint8,bytes,bytes32[]))": {
                        "params": {
                            "ntl": "Notional amount to transfer (10^8 scaled).",
                            "verificationPayload": "Verification payload for authorizing the call through the subvault."
                        },
                        "returns": {
                            "_0": "Return data from the subvault call."
                        }
                    },
                    "transferSpotToPerp(uint64,(uint8,bytes,bytes32[]))": {
                        "params": {
                            "ntl": "Notional amount to transfer (10^8 scaled).",
                            "verificationPayload": "Verification payload for authorizing the call through the subvault."
                        },
                        "returns": {
                            "_0": "Return data from the subvault call."
                        }
                    },
                    "upgradeToAndCall(address,bytes)": {
                        "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
                        "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
                    },
                    "withdrawHypeToEvm(uint64,(uint8,bytes,bytes32[]))": {
                        "params": {
                            "amount": "Amount to withdraw (10^8 scaled).",
                            "verificationPayload": "Verification payload for authorizing the call through the subvault."
                        },
                        "returns": {
                            "_0": "Return data from the subvault call."
                        }
                    },
                    "withdrawTokenToEvm(uint64,uint64,(uint8,bytes,bytes32[]))": {
                        "params": {
                            "amount": "Amount to withdraw (10^8 scaled).",
                            "tokenIndex": "Hyperliquid Core token index.",
                            "verificationPayload": "Verification payload for authorizing the call through the subvault."
                        },
                        "returns": {
                            "_0": "Return data from the subvault call."
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "DLN_DESTINATION()": {
                        "notice": "DeBridge DLN Destination contract address."
                    },
                    "bridgeErc20ViaDeBridge(address,uint256,uint256,address,uint256,uint64,(uint8,bytes,bytes32[])[2])": {
                        "notice": "Bridge an ERC-20 token via DeBridge DLN."
                    },
                    "bridgeNativeViaDeBridge(uint256,uint256,address,uint256,uint64,(uint8,bytes,bytes32[]))": {
                        "notice": "Bridge the native asset via DeBridge DLN."
                    },
                    "bridgeRecipient()": {
                        "notice": "Returns the dedicated recipient address for bridged funds."
                    },
                    "bridgeUsdcViaCctpV2(uint256,uint256,uint32,(uint8,bytes,bytes32[])[2])": {
                        "notice": "Bridge USDC via CCTPv2."
                    },
                    "cancelOrderByCloid(uint32,uint128,(uint8,bytes,bytes32[]))": {
                        "notice": "Cancels an order by its client order ID (cloid)."
                    },
                    "cancelOrderByOid(uint32,uint64,(uint8,bytes,bytes32[]))": {
                        "notice": "Cancels an order by its order ID (oid)."
                    },
                    "cctpV2DestinationDomain()": {
                        "notice": "Returns the configured destination domain for CCTPv2."
                    },
                    "cctpV2MessageTransmitter()": {
                        "notice": "Returns the configured MessageTransmitter contract address for this chain."
                    },
                    "cctpV2TokenMessenger()": {
                        "notice": "Returns the configured TokenMessenger contract address for this chain."
                    },
                    "coreSystemAddress(uint64)": {
                        "notice": "Computes the Core system address for a given token index."
                    },
                    "deBridgeOrderAuthority()": {
                        "notice": "Returns the configured order authority address for DeBridge."
                    },
                    "deBridgeTakeChainId()": {
                        "notice": "Returns the configured destination chain ID for DeBridge."
                    },
                    "depositHypeToCore(uint256,(uint8,bytes,bytes32[]))": {
                        "notice": "Deposits HYPE to HyperCore."
                    },
                    "depositTokenToCore(address,uint64,uint256,(uint8,bytes,bytes32[]))": {
                        "notice": "Deposits an ERC20 token to HyperCore."
                    },
                    "disableCctpV2()": {
                        "notice": "Disables CCTPv2 bridging."
                    },
                    "disableDeBridge()": {
                        "notice": "Disables DeBridge bridging."
                    },
                    "enableCctpV2()": {
                        "notice": "Enables CCTPv2 bridging."
                    },
                    "enableDeBridge()": {
                        "notice": "Enables DeBridge bridging."
                    },
                    "hypeTokenIndex()": {
                        "notice": "Returns the chain-specific Core token index for HYPE."
                    },
                    "initialize(address,address,address,address,address,uint64,(address,uint32,address,address))": {
                        "notice": "Initializes the HyperliquidStrategy contract."
                    },
                    "initializeDeBridge(uint256,address)": {
                        "notice": "Initializes DeBridge functionality."
                    },
                    "isCctpV2Enabled()": {
                        "notice": "Returns true if CCTPv2 bridging is enabled."
                    },
                    "isDeBridgeEnabled()": {
                        "notice": "Returns true if DeBridge bridging is enabled."
                    },
                    "pause()": {
                        "notice": "Pauses the strategy."
                    },
                    "placeLimitBuyOrder(uint32,uint64,uint64,bool,uint8,uint128,(uint8,bytes,bytes32[]))": {
                        "notice": "Places a limit buy order on Hyperliquid."
                    },
                    "placeLimitSellOrder(uint32,uint64,uint64,bool,uint8,uint128,(uint8,bytes,bytes32[]))": {
                        "notice": "Places a limit sell order on Hyperliquid."
                    },
                    "receiveUsdcViaCctpV2(bytes,bytes)": {
                        "notice": "Receive USDC via CCTPv2."
                    },
                    "setDeBridgeOrderAuthority(address)": {
                        "notice": "Sets the DeBridge order authority address."
                    },
                    "subvault()": {
                        "notice": "Returns the address of the subvault associated with this strategy."
                    },
                    "transferPerpToSpot(uint64,(uint8,bytes,bytes32[]))": {
                        "notice": "Transfers USD balance from perp to spot market."
                    },
                    "transferSpotToPerp(uint64,(uint8,bytes,bytes32[]))": {
                        "notice": "Transfers USD balance from spot to perp market."
                    },
                    "unpause()": {
                        "notice": "Unpauses the strategy."
                    },
                    "usdc()": {
                        "notice": "Returns the USDC address for this strategy."
                    },
                    "withdrawHypeToEvm(uint64,(uint8,bytes,bytes32[]))": {
                        "notice": "Withdraws HYPE from HyperCore to HyperEVM."
                    },
                    "withdrawTokenToEvm(uint64,uint64,(uint8,bytes,bytes32[]))": {
                        "notice": "Withdraws a token from HyperCore to HyperEVM."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@openzeppelin/contracts-upgradeable/=dependencies/openzeppelin-contracts-upgradeable-5.4.0/contracts/",
                "@openzeppelin/contracts/=dependencies/openzeppelin-contracts-5.4.0/contracts/",
                "forge-std-1.10.0/=dependencies/forge-std-1.10.0/src/",
                "forge-std/=dependencies/forge-std-1.10.0/src/",
                "openzeppelin-contracts-5.4.0/=dependencies/openzeppelin-contracts-5.4.0/",
                "openzeppelin-contracts-upgradeable-5.4.0/=dependencies/openzeppelin-contracts-upgradeable-5.4.0/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/HyperliquidStrategy.sol": "HyperliquidStrategy"
            },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "dependencies/openzeppelin-contracts-5.4.0/contracts/access/IAccessControl.sol": {
                "keccak256": "0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c",
                "urls": [
                    "bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d",
                    "dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-5.4.0/contracts/access/extensions/IAccessControlEnumerable.sol": {
                "keccak256": "0xbc97d8c0d67d4d7eba1e662f0a8671712ace9e060ab03af547c4bb321aec1d8c",
                "urls": [
                    "bzz-raw://890d156f50630d52c7be57d7e0499132d6fd92b2e1365b81531f4463b3304377",
                    "dweb:/ipfs/QmUHe9uL1ciePH2pQg7wdrgTAFRZWjcpBEAg8V1UNtXutd"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-5.4.0/contracts/interfaces/IERC1967.sol": {
                "keccak256": "0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5",
                "urls": [
                    "bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c",
                    "dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-5.4.0/contracts/interfaces/draft-IERC1822.sol": {
                "keccak256": "0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b",
                "urls": [
                    "bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422",
                    "dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-5.4.0/contracts/proxy/ERC1967/ERC1967Utils.sol": {
                "keccak256": "0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618",
                "urls": [
                    "bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a",
                    "dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-5.4.0/contracts/proxy/beacon/IBeacon.sol": {
                "keccak256": "0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b",
                "urls": [
                    "bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d",
                    "dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-5.4.0/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2",
                "urls": [
                    "bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303",
                    "dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-5.4.0/contracts/utils/Address.sol": {
                "keccak256": "0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0",
                "urls": [
                    "bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f",
                    "dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-5.4.0/contracts/utils/Arrays.sol": {
                "keccak256": "0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e",
                "urls": [
                    "bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d",
                    "dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-5.4.0/contracts/utils/Comparators.sol": {
                "keccak256": "0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58",
                "urls": [
                    "bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd",
                    "dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-5.4.0/contracts/utils/Errors.sol": {
                "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
                "urls": [
                    "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
                    "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-5.4.0/contracts/utils/Panic.sol": {
                "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
                "urls": [
                    "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
                    "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-5.4.0/contracts/utils/SlotDerivation.sol": {
                "keccak256": "0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26",
                "urls": [
                    "bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2",
                    "dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-5.4.0/contracts/utils/StorageSlot.sol": {
                "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
                "urls": [
                    "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
                    "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-5.4.0/contracts/utils/introspection/IERC165.sol": {
                "keccak256": "0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c",
                "urls": [
                    "bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617",
                    "dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-5.4.0/contracts/utils/math/Math.sol": {
                "keccak256": "0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6",
                "urls": [
                    "bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3",
                    "dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-5.4.0/contracts/utils/math/SafeCast.sol": {
                "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
                "urls": [
                    "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
                    "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-5.4.0/contracts/utils/structs/EnumerableSet.sol": {
                "keccak256": "0x1fc283df727585919c3db301b948a3e827aee16917457ad7f916db9da2228e77",
                "urls": [
                    "bzz-raw://a4f4b5e2cd0ebc3b74e41e4e94771a0417eedd9b11cec3ef9f90b2ac2989264b",
                    "dweb:/ipfs/QmZmsEsvsXiwAyAe1YeoLSKezeFcvR1giUeEY6ex4zpsTS"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-upgradeable-5.4.0/contracts/access/AccessControlUpgradeable.sol": {
                "keccak256": "0x85a70e2b1b65e9ba456add364d22b97eb9944083df1c39c0b4bd6a4b5aa386a4",
                "urls": [
                    "bzz-raw://d32a33be6ca4d8e89b9e82e3f9cec7a6c4e040534152313ff55da85b8f193059",
                    "dweb:/ipfs/QmeR55L8t2A8xZ1nvT5y4yVWfFbbmpaGAtGBMz3GGNpuyP"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-upgradeable-5.4.0/contracts/access/extensions/AccessControlEnumerableUpgradeable.sol": {
                "keccak256": "0x52d72be5f7529846ba76aacf0c49de92bde89a5203b6fbc3919e7384c0df0905",
                "urls": [
                    "bzz-raw://0d5e789d39c6623db24d427ca8380978f44cc736070e2ac3ee19f88095c43b17",
                    "dweb:/ipfs/QmSzyMMTnZrUWY2e4B2U3VE2fjz8AFawhk7jex8SPW1eT2"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-upgradeable-5.4.0/contracts/proxy/utils/Initializable.sol": {
                "keccak256": "0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05",
                "urls": [
                    "bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08",
                    "dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-upgradeable-5.4.0/contracts/proxy/utils/UUPSUpgradeable.sol": {
                "keccak256": "0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63",
                "urls": [
                    "bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec",
                    "dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-upgradeable-5.4.0/contracts/utils/ContextUpgradeable.sol": {
                "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
                "urls": [
                    "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
                    "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-upgradeable-5.4.0/contracts/utils/PausableUpgradeable.sol": {
                "keccak256": "0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5",
                "urls": [
                    "bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb",
                    "dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY"
                ],
                "license": "MIT"
            },
            "dependencies/openzeppelin-contracts-upgradeable-5.4.0/contracts/utils/introspection/ERC165Upgradeable.sol": {
                "keccak256": "0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f",
                "urls": [
                    "bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a",
                    "dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX"
                ],
                "license": "MIT"
            },
            "src/HyperliquidStrategy.sol": {
                "keccak256": "0xc6871bbf730ccfe131c1933c72210396f32ef136c57227e8956f9f2e0382c117",
                "urls": [
                    "bzz-raw://46b27f6580644e26603ccdf6e4964c259a8616af5f6b3752ebed1ca2e976781e",
                    "dweb:/ipfs/QmP1nmvfXfarxmGDtUL8Xcnpi47Nq1XFx4hmPZCtZpwQT1"
                ],
                "license": "BUSL-1.1"
            },
            "src/interfaces/IBridgeStrategy.sol": {
                "keccak256": "0xa3fb7481da39d4dea49f20e5d735aad957fbb6bd1964c2a23952faaddb5e589f",
                "urls": [
                    "bzz-raw://c142462a911e6b254b69eafe63bae91b5a835164103878d3e843f32872728a6d",
                    "dweb:/ipfs/QmZoYHB631nTnFhnN5Ey2c6i8XK3BgwbTjRRAYmAmrD8aX"
                ],
                "license": "BUSL-1.1"
            },
            "src/interfaces/ICctpV2BridgeStrategy.sol": {
                "keccak256": "0xdc1e89e0a614d3920e3ad46d8d5bbbd65177d2f6af4ac9c44429f46e30787d2a",
                "urls": [
                    "bzz-raw://797b72f5268871c53d1c679ff9003574437cf9a73011e0c90e3abecf9c3f002b",
                    "dweb:/ipfs/QmWVQjsECXjmDexRhhnCDQe117EGVg5EHkrpN3JYvnCb5C"
                ],
                "license": "BUSL-1.1"
            },
            "src/interfaces/IDeBridgeStrategy.sol": {
                "keccak256": "0x6949b585780d6321233c92056af0426bb1e9bb42b3e1306a188d90f27f58e23c",
                "urls": [
                    "bzz-raw://5824c77745211c50ef20d8efdf15e0070864090de383d829173a955113e1c344",
                    "dweb:/ipfs/QmQphvnhJZ7KXeoVBA3ruN9UZ6ftC4fxr8V6ecTnYFxxrB"
                ],
                "license": "BUSL-1.1"
            },
            "src/interfaces/IHyperliquidTradingStrategy.sol": {
                "keccak256": "0xec47e42bf99368f496ac8f232884251f81c1bceef690bbee4f1138ee013e4ac6",
                "urls": [
                    "bzz-raw://61125b679755ce2dd71f78d83dfde29d86eb2b6f31707457c9c28ff7127648de",
                    "dweb:/ipfs/QmPgydovkYmr8mMYQRTy5PdBAFdWeEz65ykTfkpe5JSzvH"
                ],
                "license": "BUSL-1.1"
            },
            "src/interfaces/IStrategy.sol": {
                "keccak256": "0xed24b72e4e4d6b24a0d74fcdbb2e60271607d98558bf7dcb15f412b773a20620",
                "urls": [
                    "bzz-raw://a6bc32257d1c30ba301077362f546c750aa8ed5305a3c59bdf3db4ca490e50b0",
                    "dweb:/ipfs/QmckH5UfUhVUrRjCysgTdEMvKqQF5PeQjniEhwRwZDwGDX"
                ],
                "license": "BUSL-1.1"
            },
            "src/interfaces/external/circle/IMessageTransmitterV2.sol": {
                "keccak256": "0x9530c2878e548e46dc2cd67d034703ca945c02bc035a63befe0be84033e31b43",
                "urls": [
                    "bzz-raw://1c841180a74aaaea3882fd6c63d9d940a3b8cb0b9a4d856ccbe2a49ddde38c59",
                    "dweb:/ipfs/QmRR6cHcnXWeEHRvczz4AhHvN69stxGHwPYjAosWYPQaGQ"
                ],
                "license": "BUSL-1.1"
            },
            "src/interfaces/external/circle/ITokenMessengerV2.sol": {
                "keccak256": "0x7007c3c127d903f81e7df369ffb6a5fdeb020546c33490f93cfc014fca6929c1",
                "urls": [
                    "bzz-raw://1dcdb6c54a00ac2396de0a5313f2b2044df4f961916cf69c1fbacc9cb48ee257",
                    "dweb:/ipfs/QmbYeeFgK6EWUZvno7PSoontjMnt7jfkMzk3rfssfPhYRy"
                ],
                "license": "BUSL-1.1"
            },
            "src/interfaces/external/debridge/IDlnSource.sol": {
                "keccak256": "0xee9578131c6d7b28b59a4b2e66fd3b70ef0edd5ce91414cf00ab20b69ac7ccc2",
                "urls": [
                    "bzz-raw://d557949e0112064bc8d29bf48981058db774b51ad51f9848c10bd4508e85b91e",
                    "dweb:/ipfs/QmV3faZPN7XwNtEth15enxjzkVhKdWXSDwGM95cEsZyM8w"
                ],
                "license": "MIT"
            },
            "src/interfaces/external/hyperliquid/ICoreWriter.sol": {
                "keccak256": "0xcc5cab0f4f744379db3b5811192fd17298d0ddfa21a9910d459e9e43549cef54",
                "urls": [
                    "bzz-raw://5ecbdb5a4e99531283141ad71abf1f21fe21075534ea79e487b7baa7fc23704a",
                    "dweb:/ipfs/QmQTThhzFprSXSeZpoXZaGGgGiDYGieoCBXY3BzahbsVUo"
                ],
                "license": "BUSL-1.1"
            },
            "src/interfaces/external/mellow/ICallModule.sol": {
                "keccak256": "0x34f8929a5164a7cf9f755a38f6620632f152ee374809d2e96f3033e4bf966d53",
                "urls": [
                    "bzz-raw://d17ea72ae7700521bdab7623392c8976ea2ccb79c98594d161302a85b83f907b",
                    "dweb:/ipfs/QmWzGKMjCQP6JEchPXq4fME4uu8rDBpPGbCwnUFNoo5Adt"
                ],
                "license": "BUSL-1.1"
            },
            "src/interfaces/external/mellow/IVerifier.sol": {
                "keccak256": "0x5442ff96858462dfef871e4049154b6f667e6875d21ff420da4da1c033924250",
                "urls": [
                    "bzz-raw://4c2e89b27ba3fcab30ba41c923da450ce477f292837f3dcded5f6af0dca2e287",
                    "dweb:/ipfs/QmdPNhJF2VGoRqyoXyQQL2vxSkym9R62cTPA1qh91UZgub"
                ],
                "license": "BUSL-1.1"
            },
            "src/libs/CoreWriterCodec.sol": {
                "keccak256": "0x2c067ca15307e861a262e9882cdc1fc526270d32eb810a6705d81e4029d28e4d",
                "urls": [
                    "bzz-raw://94b10e0876da25b09b74dd5ca424d3d6011677784102596a859bf0a992e3174b",
                    "dweb:/ipfs/QmQGRp6GWbCq4UNEUjodJ1ceLxYPiAKSSKT3b74Ta33tt7"
                ],
                "license": "BUSL-1.1"
            },
            "src/libs/Errors.sol": {
                "keccak256": "0xb62ee97d8036cc1f7cb6fdf1f3d39afc0c32f56caccdbc6e9218877832ac8eb4",
                "urls": [
                    "bzz-raw://00974065ce9ea423a2a1d536e6ead7f7fd4539b0f160c4f517bb4a8ee8e7f738",
                    "dweb:/ipfs/QmZobzDLJtcg9hTh8nGPsrLJWAoRToGJSaBnUa8Jh7WdvM"
                ],
                "license": "BUSL-1.1"
            },
            "src/modules/BaseBridgeModule.sol": {
                "keccak256": "0xf5bd49362b7dcd3a68c01013fde0848a902ac2ec91e356708344e1aa4c135170",
                "urls": [
                    "bzz-raw://d11b4ede3f67e283ac395b2c06e8f30dede600c0f53fcdc8a118b4a8352fb36b",
                    "dweb:/ipfs/Qmb17vzp64XRsnx6JFq6TrAiaFZ8pMWXCKxM7tS1LDEhcr"
                ],
                "license": "BUSL-1.1"
            },
            "src/modules/BaseModule.sol": {
                "keccak256": "0x0476fc411725298d07c95e27b6e97d5786a3c86f9e025c02d034d9a087588eef",
                "urls": [
                    "bzz-raw://3a39a4a79297bfca9004261f439b3410b029b9d76cc7bd5e8537f7b3a379e24f",
                    "dweb:/ipfs/QmbfogjtYgeFGqqQpJbCsyGMEUgVSSgYLVnBpvtjeN7kmF"
                ],
                "license": "BUSL-1.1"
            },
            "src/modules/CctpV2BridgeModule.sol": {
                "keccak256": "0x7249e90dd13cc8a1ec962206820c9c33bf747ad7356a37684b7ddc0abf720402",
                "urls": [
                    "bzz-raw://fd9219764972586b2dbf31e9bc37e9c7004956e7f46757741c120f0bfce38b2c",
                    "dweb:/ipfs/QmXcvPh1RinEGS6D8Vo7UxKdShUXE3hHwfi48mj6C3aauD"
                ],
                "license": "BUSL-1.1"
            },
            "src/modules/DeBridgeModule.sol": {
                "keccak256": "0xb1202e884dd374a0b76ae1cb4c62687d78ad69f2fa582958daf4a2c954842926",
                "urls": [
                    "bzz-raw://dd3723856773d936ce3364ba6a9354c1ecb7dfbce314b5c74fa75bbb1812980c",
                    "dweb:/ipfs/QmawbJRDMfdBsQKu3EMuiFncGFQ5FkGcKZPEuPqzA4vrJj"
                ],
                "license": "BUSL-1.1"
            },
            "src/modules/HyperliquidTradingModule.sol": {
                "keccak256": "0x7a79688124e7248a67d4c34abd6d1be9eb746164df71f27a3dbd4911ce38e1f4",
                "urls": [
                    "bzz-raw://be384840631df9d5898ff6de815b10181bef7fbfca847c6612ed0b5f37497e75",
                    "dweb:/ipfs/QmYegs3cd1ZGiWVFb99Pvkw2Y7UT2ZB8PSWQoPAg7mC8DF"
                ],
                "license": "BUSL-1.1"
            }
        },
        "version": 1
    },
    "id": 59
}